// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.5.1
//     C# generator version: 1.27.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \brief
 *   Compute Engine API Version v1
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href='https://developers.google.com/compute/docs/reference/latest/'>Compute Engine API</a>
 *      <tr><th>API Version<td>v1
 *      <tr><th>API Rev<td>20170530 (880)
 *      <tr><th>API Docs
 *          <td><a href='https://developers.google.com/compute/docs/reference/latest/'>
 *              https://developers.google.com/compute/docs/reference/latest/</a>
 *      <tr><th>Discovery Name<td>compute
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using Compute Engine API can be found at
 * <a href='https://developers.google.com/compute/docs/reference/latest/'>https://developers.google.com/compute/docs/reference/latest/</a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.Compute.v1
{
    /// <summary>The Compute Service.</summary>
    public class ComputeService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v1";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public ComputeService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public ComputeService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            addresses = new AddressesResource(this);
            autoscalers = new AutoscalersResource(this);
            backendBuckets = new BackendBucketsResource(this);
            backendServices = new BackendServicesResource(this);
            diskTypes = new DiskTypesResource(this);
            disks = new DisksResource(this);
            firewalls = new FirewallsResource(this);
            forwardingRules = new ForwardingRulesResource(this);
            globalAddresses = new GlobalAddressesResource(this);
            globalForwardingRules = new GlobalForwardingRulesResource(this);
            globalOperations = new GlobalOperationsResource(this);
            healthChecks = new HealthChecksResource(this);
            httpHealthChecks = new HttpHealthChecksResource(this);
            httpsHealthChecks = new HttpsHealthChecksResource(this);
            images = new ImagesResource(this);
            instanceGroupManagers = new InstanceGroupManagersResource(this);
            instanceGroups = new InstanceGroupsResource(this);
            instanceTemplates = new InstanceTemplatesResource(this);
            instances = new InstancesResource(this);
            licenses = new LicensesResource(this);
            machineTypes = new MachineTypesResource(this);
            networks = new NetworksResource(this);
            projects = new ProjectsResource(this);
            regionAutoscalers = new RegionAutoscalersResource(this);
            regionBackendServices = new RegionBackendServicesResource(this);
            regionInstanceGroupManagers = new RegionInstanceGroupManagersResource(this);
            regionInstanceGroups = new RegionInstanceGroupsResource(this);
            regionOperations = new RegionOperationsResource(this);
            regions = new RegionsResource(this);
            routers = new RoutersResource(this);
            routes = new RoutesResource(this);
            snapshots = new SnapshotsResource(this);
            sslCertificates = new SslCertificatesResource(this);
            subnetworks = new SubnetworksResource(this);
            targetHttpProxies = new TargetHttpProxiesResource(this);
            targetHttpsProxies = new TargetHttpsProxiesResource(this);
            targetInstances = new TargetInstancesResource(this);
            targetPools = new TargetPoolsResource(this);
            targetSslProxies = new TargetSslProxiesResource(this);
            targetTcpProxies = new TargetTcpProxiesResource(this);
            targetVpnGateways = new TargetVpnGatewaysResource(this);
            urlMaps = new UrlMapsResource(this);
            vpnTunnels = new VpnTunnelsResource(this);
            zoneOperations = new ZoneOperationsResource(this);
            zones = new ZonesResource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "compute"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
            get { return "https://www.googleapis.com/compute/v1/projects/"; }
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return "compute/v1/projects/"; }
        }

        #if !NET40
        /// <summary>Gets the batch base URI; <c>null</c> if unspecified.</summary>
        public override string BatchUri
        {
            get { return "https://www.googleapis.com/batch"; }
        }

        /// <summary>Gets the batch base path; <c>null</c> if unspecified.</summary>
        public override string BatchPath
        {
            get { return "batch"; }
        }
        #endif

        /// <summary>Available OAuth 2.0 scopes for use with the Compute Engine API.</summary>
        public class Scope
        {
            /// <summary>View and manage your data across Google Cloud Platform services</summary>
            public static string CloudPlatform = "https://www.googleapis.com/auth/cloud-platform";

            /// <summary>View and manage your Google Compute Engine resources</summary>
            public static string Compute = "https://www.googleapis.com/auth/compute";

            /// <summary>View your Google Compute Engine resources</summary>
            public static string ComputeReadonly = "https://www.googleapis.com/auth/compute.readonly";

            /// <summary>Manage your data and permissions in Google Cloud Storage</summary>
            public static string DevstorageFullControl = "https://www.googleapis.com/auth/devstorage.full_control";

            /// <summary>View your data in Google Cloud Storage</summary>
            public static string DevstorageReadOnly = "https://www.googleapis.com/auth/devstorage.read_only";

            /// <summary>Manage your data in Google Cloud Storage</summary>
            public static string DevstorageReadWrite = "https://www.googleapis.com/auth/devstorage.read_write";

        }



        private readonly AddressesResource addresses;

        /// <summary>Gets the Addresses resource.</summary>
        public virtual AddressesResource Addresses
        {
            get { return addresses; }
        }

        private readonly AutoscalersResource autoscalers;

        /// <summary>Gets the Autoscalers resource.</summary>
        public virtual AutoscalersResource Autoscalers
        {
            get { return autoscalers; }
        }

        private readonly BackendBucketsResource backendBuckets;

        /// <summary>Gets the BackendBuckets resource.</summary>
        public virtual BackendBucketsResource BackendBuckets
        {
            get { return backendBuckets; }
        }

        private readonly BackendServicesResource backendServices;

        /// <summary>Gets the BackendServices resource.</summary>
        public virtual BackendServicesResource BackendServices
        {
            get { return backendServices; }
        }

        private readonly DiskTypesResource diskTypes;

        /// <summary>Gets the DiskTypes resource.</summary>
        public virtual DiskTypesResource DiskTypes
        {
            get { return diskTypes; }
        }

        private readonly DisksResource disks;

        /// <summary>Gets the Disks resource.</summary>
        public virtual DisksResource Disks
        {
            get { return disks; }
        }

        private readonly FirewallsResource firewalls;

        /// <summary>Gets the Firewalls resource.</summary>
        public virtual FirewallsResource Firewalls
        {
            get { return firewalls; }
        }

        private readonly ForwardingRulesResource forwardingRules;

        /// <summary>Gets the ForwardingRules resource.</summary>
        public virtual ForwardingRulesResource ForwardingRules
        {
            get { return forwardingRules; }
        }

        private readonly GlobalAddressesResource globalAddresses;

        /// <summary>Gets the GlobalAddresses resource.</summary>
        public virtual GlobalAddressesResource GlobalAddresses
        {
            get { return globalAddresses; }
        }

        private readonly GlobalForwardingRulesResource globalForwardingRules;

        /// <summary>Gets the GlobalForwardingRules resource.</summary>
        public virtual GlobalForwardingRulesResource GlobalForwardingRules
        {
            get { return globalForwardingRules; }
        }

        private readonly GlobalOperationsResource globalOperations;

        /// <summary>Gets the GlobalOperations resource.</summary>
        public virtual GlobalOperationsResource GlobalOperations
        {
            get { return globalOperations; }
        }

        private readonly HealthChecksResource healthChecks;

        /// <summary>Gets the HealthChecks resource.</summary>
        public virtual HealthChecksResource HealthChecks
        {
            get { return healthChecks; }
        }

        private readonly HttpHealthChecksResource httpHealthChecks;

        /// <summary>Gets the HttpHealthChecks resource.</summary>
        public virtual HttpHealthChecksResource HttpHealthChecks
        {
            get { return httpHealthChecks; }
        }

        private readonly HttpsHealthChecksResource httpsHealthChecks;

        /// <summary>Gets the HttpsHealthChecks resource.</summary>
        public virtual HttpsHealthChecksResource HttpsHealthChecks
        {
            get { return httpsHealthChecks; }
        }

        private readonly ImagesResource images;

        /// <summary>Gets the Images resource.</summary>
        public virtual ImagesResource Images
        {
            get { return images; }
        }

        private readonly InstanceGroupManagersResource instanceGroupManagers;

        /// <summary>Gets the InstanceGroupManagers resource.</summary>
        public virtual InstanceGroupManagersResource InstanceGroupManagers
        {
            get { return instanceGroupManagers; }
        }

        private readonly InstanceGroupsResource instanceGroups;

        /// <summary>Gets the InstanceGroups resource.</summary>
        public virtual InstanceGroupsResource InstanceGroups
        {
            get { return instanceGroups; }
        }

        private readonly InstanceTemplatesResource instanceTemplates;

        /// <summary>Gets the InstanceTemplates resource.</summary>
        public virtual InstanceTemplatesResource InstanceTemplates
        {
            get { return instanceTemplates; }
        }

        private readonly InstancesResource instances;

        /// <summary>Gets the Instances resource.</summary>
        public virtual InstancesResource Instances
        {
            get { return instances; }
        }

        private readonly LicensesResource licenses;

        /// <summary>Gets the Licenses resource.</summary>
        public virtual LicensesResource Licenses
        {
            get { return licenses; }
        }

        private readonly MachineTypesResource machineTypes;

        /// <summary>Gets the MachineTypes resource.</summary>
        public virtual MachineTypesResource MachineTypes
        {
            get { return machineTypes; }
        }

        private readonly NetworksResource networks;

        /// <summary>Gets the Networks resource.</summary>
        public virtual NetworksResource Networks
        {
            get { return networks; }
        }

        private readonly ProjectsResource projects;

        /// <summary>Gets the Projects resource.</summary>
        public virtual ProjectsResource Projects
        {
            get { return projects; }
        }

        private readonly RegionAutoscalersResource regionAutoscalers;

        /// <summary>Gets the RegionAutoscalers resource.</summary>
        public virtual RegionAutoscalersResource RegionAutoscalers
        {
            get { return regionAutoscalers; }
        }

        private readonly RegionBackendServicesResource regionBackendServices;

        /// <summary>Gets the RegionBackendServices resource.</summary>
        public virtual RegionBackendServicesResource RegionBackendServices
        {
            get { return regionBackendServices; }
        }

        private readonly RegionInstanceGroupManagersResource regionInstanceGroupManagers;

        /// <summary>Gets the RegionInstanceGroupManagers resource.</summary>
        public virtual RegionInstanceGroupManagersResource RegionInstanceGroupManagers
        {
            get { return regionInstanceGroupManagers; }
        }

        private readonly RegionInstanceGroupsResource regionInstanceGroups;

        /// <summary>Gets the RegionInstanceGroups resource.</summary>
        public virtual RegionInstanceGroupsResource RegionInstanceGroups
        {
            get { return regionInstanceGroups; }
        }

        private readonly RegionOperationsResource regionOperations;

        /// <summary>Gets the RegionOperations resource.</summary>
        public virtual RegionOperationsResource RegionOperations
        {
            get { return regionOperations; }
        }

        private readonly RegionsResource regions;

        /// <summary>Gets the Regions resource.</summary>
        public virtual RegionsResource Regions
        {
            get { return regions; }
        }

        private readonly RoutersResource routers;

        /// <summary>Gets the Routers resource.</summary>
        public virtual RoutersResource Routers
        {
            get { return routers; }
        }

        private readonly RoutesResource routes;

        /// <summary>Gets the Routes resource.</summary>
        public virtual RoutesResource Routes
        {
            get { return routes; }
        }

        private readonly SnapshotsResource snapshots;

        /// <summary>Gets the Snapshots resource.</summary>
        public virtual SnapshotsResource Snapshots
        {
            get { return snapshots; }
        }

        private readonly SslCertificatesResource sslCertificates;

        /// <summary>Gets the SslCertificates resource.</summary>
        public virtual SslCertificatesResource SslCertificates
        {
            get { return sslCertificates; }
        }

        private readonly SubnetworksResource subnetworks;

        /// <summary>Gets the Subnetworks resource.</summary>
        public virtual SubnetworksResource Subnetworks
        {
            get { return subnetworks; }
        }

        private readonly TargetHttpProxiesResource targetHttpProxies;

        /// <summary>Gets the TargetHttpProxies resource.</summary>
        public virtual TargetHttpProxiesResource TargetHttpProxies
        {
            get { return targetHttpProxies; }
        }

        private readonly TargetHttpsProxiesResource targetHttpsProxies;

        /// <summary>Gets the TargetHttpsProxies resource.</summary>
        public virtual TargetHttpsProxiesResource TargetHttpsProxies
        {
            get { return targetHttpsProxies; }
        }

        private readonly TargetInstancesResource targetInstances;

        /// <summary>Gets the TargetInstances resource.</summary>
        public virtual TargetInstancesResource TargetInstances
        {
            get { return targetInstances; }
        }

        private readonly TargetPoolsResource targetPools;

        /// <summary>Gets the TargetPools resource.</summary>
        public virtual TargetPoolsResource TargetPools
        {
            get { return targetPools; }
        }

        private readonly TargetSslProxiesResource targetSslProxies;

        /// <summary>Gets the TargetSslProxies resource.</summary>
        public virtual TargetSslProxiesResource TargetSslProxies
        {
            get { return targetSslProxies; }
        }

        private readonly TargetTcpProxiesResource targetTcpProxies;

        /// <summary>Gets the TargetTcpProxies resource.</summary>
        public virtual TargetTcpProxiesResource TargetTcpProxies
        {
            get { return targetTcpProxies; }
        }

        private readonly TargetVpnGatewaysResource targetVpnGateways;

        /// <summary>Gets the TargetVpnGateways resource.</summary>
        public virtual TargetVpnGatewaysResource TargetVpnGateways
        {
            get { return targetVpnGateways; }
        }

        private readonly UrlMapsResource urlMaps;

        /// <summary>Gets the UrlMaps resource.</summary>
        public virtual UrlMapsResource UrlMaps
        {
            get { return urlMaps; }
        }

        private readonly VpnTunnelsResource vpnTunnels;

        /// <summary>Gets the VpnTunnels resource.</summary>
        public virtual VpnTunnelsResource VpnTunnels
        {
            get { return vpnTunnels; }
        }

        private readonly ZoneOperationsResource zoneOperations;

        /// <summary>Gets the ZoneOperations resource.</summary>
        public virtual ZoneOperationsResource ZoneOperations
        {
            get { return zoneOperations; }
        }

        private readonly ZonesResource zones;

        /// <summary>Gets the Zones resource.</summary>
        public virtual ZonesResource Zones
        {
            get { return zones; }
        }
    }

    ///<summary>A base abstract class for Compute requests.</summary>
    public abstract class ComputeBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new ComputeBaseServiceRequest instance.</summary>
        protected ComputeBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>Data format for the response.</summary>
        /// [default: json]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for the response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/json</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json,
        }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
        /// Required unless you provide an OAuth 2.0 token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
        /// assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>IP address of the site where the request originates. Use this if you want to enforce per-user
        /// limits.</summary>
        [Google.Apis.Util.RequestParameterAttribute("userIp", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UserIp { get; set; }

        /// <summary>Initializes Compute parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "json",
                    Pattern = null,
                });
            RequestParameters.Add(
                "fields", new Google.Apis.Discovery.Parameter
                {
                    Name = "fields",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "key", new Google.Apis.Discovery.Parameter
                {
                    Name = "key",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "quotaUser", new Google.Apis.Discovery.Parameter
                {
                    Name = "quotaUser",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "userIp", new Google.Apis.Discovery.Parameter
                {
                    Name = "userIp",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
        }
    }

    /// <summary>The "addresses" collection of methods.</summary>
    public class AddressesResource
    {
        private const string Resource = "addresses";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AddressesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Retrieves an aggregated list of addresses.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual AggregatedListRequest AggregatedList(string project)
        {
            return new AggregatedListRequest(service, project);
        }

        /// <summary>Retrieves an aggregated list of addresses.</summary>
        public class AggregatedListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.AddressAggregatedList>
        {
            /// <summary>Constructs a new AggregatedList request.</summary>
            public AggregatedListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "aggregatedList"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/aggregated/addresses"; }
            }

            /// <summary>Initializes AggregatedList parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Deletes the specified address resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region for this
        /// request.</param>
        /// <param name="address">Name of the address resource to delete.</param>
        public virtual DeleteRequest Delete(string project, string region, string address)
        {
            return new DeleteRequest(service, project, region, address);
        }

        /// <summary>Deletes the specified address resource.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string region, string address)
                : base(service)
            {
                Project = project;
                Region = region;
                Address = address;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the address resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("address", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Address { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/addresses/{address}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "address", new Google.Apis.Discovery.Parameter
                    {
                        Name = "address",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified address resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region for this
        /// request.</param>
        /// <param name="address">Name of the address resource to return.</param>
        public virtual GetRequest Get(string project, string region, string address)
        {
            return new GetRequest(service, project, region, address);
        }

        /// <summary>Returns the specified address resource.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Address>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string region, string address)
                : base(service)
            {
                Project = project;
                Region = region;
                Address = address;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the address resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("address", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Address { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/addresses/{address}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "address", new Google.Apis.Discovery.Parameter
                    {
                        Name = "address",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates an address resource in the specified project using the data included in the
        /// request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region for this
        /// request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.Address body, string project, string region)
        {
            return new InsertRequest(service, body, project, region);
        }

        /// <summary>Creates an address resource in the specified project using the data included in the
        /// request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.Address body, string project, string region)
                : base(service)
            {
                Project = project;
                Region = region;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.Address Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/addresses"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Retrieves a list of addresses contained within the specified region.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region for this
        /// request.</param>
        public virtual ListRequest List(string project, string region)
        {
            return new ListRequest(service, project, region);
        }

        /// <summary>Retrieves a list of addresses contained within the specified region.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.AddressList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project, string region)
                : base(service)
            {
                Project = project;
                Region = region;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/addresses"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "autoscalers" collection of methods.</summary>
    public class AutoscalersResource
    {
        private const string Resource = "autoscalers";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AutoscalersResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Retrieves an aggregated list of autoscalers.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual AggregatedListRequest AggregatedList(string project)
        {
            return new AggregatedListRequest(service, project);
        }

        /// <summary>Retrieves an aggregated list of autoscalers.</summary>
        public class AggregatedListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.AutoscalerAggregatedList>
        {
            /// <summary>Constructs a new AggregatedList request.</summary>
            public AggregatedListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "aggregatedList"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/aggregated/autoscalers"; }
            }

            /// <summary>Initializes AggregatedList parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Deletes the specified autoscaler.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">Name of the zone for this
        /// request.</param>
        /// <param name="autoscaler">Name of the autoscaler to delete.</param>
        public virtual DeleteRequest Delete(string project, string zone, string autoscaler)
        {
            return new DeleteRequest(service, project, zone, autoscaler);
        }

        /// <summary>Deletes the specified autoscaler.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string zone, string autoscaler)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Autoscaler = autoscaler;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Name of the autoscaler to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("autoscaler", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Autoscaler { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/autoscalers/{autoscaler}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "autoscaler", new Google.Apis.Discovery.Parameter
                    {
                        Name = "autoscaler",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified autoscaler resource. Get a list of available autoscalers by making a list()
        /// request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">Name of the zone for this
        /// request.</param>
        /// <param name="autoscaler">Name of the autoscaler to return.</param>
        public virtual GetRequest Get(string project, string zone, string autoscaler)
        {
            return new GetRequest(service, project, zone, autoscaler);
        }

        /// <summary>Returns the specified autoscaler resource. Get a list of available autoscalers by making a list()
        /// request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Autoscaler>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string zone, string autoscaler)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Autoscaler = autoscaler;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Name of the autoscaler to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("autoscaler", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Autoscaler { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/autoscalers/{autoscaler}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "autoscaler", new Google.Apis.Discovery.Parameter
                    {
                        Name = "autoscaler",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates an autoscaler in the specified project using the data included in the request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">Name of the zone for this
        /// request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.Autoscaler body, string project, string zone)
        {
            return new InsertRequest(service, body, project, zone);
        }

        /// <summary>Creates an autoscaler in the specified project using the data included in the request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.Autoscaler body, string project, string zone)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.Autoscaler Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/autoscalers"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Retrieves a list of autoscalers contained within the specified zone.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">Name of the zone for this
        /// request.</param>
        public virtual ListRequest List(string project, string zone)
        {
            return new ListRequest(service, project, zone);
        }

        /// <summary>Retrieves a list of autoscalers contained within the specified zone.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.AutoscalerList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project, string zone)
                : base(service)
            {
                Project = project;
                Zone = zone;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/autoscalers"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an autoscaler in the specified project using the data included in the request. This method
        /// supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">Name of the zone for this
        /// request.</param>
        public virtual PatchRequest Patch(Google.Apis.Compute.v1.Data.Autoscaler body, string project, string zone)
        {
            return new PatchRequest(service, body, project, zone);
        }

        /// <summary>Updates an autoscaler in the specified project using the data included in the request. This method
        /// supports patch semantics.</summary>
        public class PatchRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.Autoscaler body, string project, string zone)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Name of the autoscaler to patch.</summary>
            [Google.Apis.Util.RequestParameterAttribute("autoscaler", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Autoscaler { get; set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.Autoscaler Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/autoscalers"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "autoscaler", new Google.Apis.Discovery.Parameter
                    {
                        Name = "autoscaler",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Updates an autoscaler in the specified project using the data included in the request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">Name of the zone for this
        /// request.</param>
        public virtual UpdateRequest Update(Google.Apis.Compute.v1.Data.Autoscaler body, string project, string zone)
        {
            return new UpdateRequest(service, body, project, zone);
        }

        /// <summary>Updates an autoscaler in the specified project using the data included in the request.</summary>
        public class UpdateRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.Autoscaler body, string project, string zone)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Name of the autoscaler to update.</summary>
            [Google.Apis.Util.RequestParameterAttribute("autoscaler", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Autoscaler { get; set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.Autoscaler Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/autoscalers"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "autoscaler", new Google.Apis.Discovery.Parameter
                    {
                        Name = "autoscaler",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }
    }

    /// <summary>The "backendBuckets" collection of methods.</summary>
    public class BackendBucketsResource
    {
        private const string Resource = "backendBuckets";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public BackendBucketsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes the specified BackendBucket resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="backendBucket">Name of the
        /// BackendBucket resource to delete.</param>
        public virtual DeleteRequest Delete(string project, string backendBucket)
        {
            return new DeleteRequest(service, project, backendBucket);
        }

        /// <summary>Deletes the specified BackendBucket resource.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string backendBucket)
                : base(service)
            {
                Project = project;
                BackendBucket = backendBucket;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the BackendBucket resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("backendBucket", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string BackendBucket { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/backendBuckets/{backendBucket}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "backendBucket", new Google.Apis.Discovery.Parameter
                    {
                        Name = "backendBucket",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified BackendBucket resource. Get a list of available backend buckets by making a
        /// list() request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="backendBucket">Name of the
        /// BackendBucket resource to return.</param>
        public virtual GetRequest Get(string project, string backendBucket)
        {
            return new GetRequest(service, project, backendBucket);
        }

        /// <summary>Returns the specified BackendBucket resource. Get a list of available backend buckets by making a
        /// list() request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.BackendBucket>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string backendBucket)
                : base(service)
            {
                Project = project;
                BackendBucket = backendBucket;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the BackendBucket resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("backendBucket", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string BackendBucket { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/backendBuckets/{backendBucket}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "backendBucket", new Google.Apis.Discovery.Parameter
                    {
                        Name = "backendBucket",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates a BackendBucket resource in the specified project using the data included in the
        /// request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.BackendBucket body, string project)
        {
            return new InsertRequest(service, body, project);
        }

        /// <summary>Creates a BackendBucket resource in the specified project using the data included in the
        /// request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.BackendBucket body, string project)
                : base(service)
            {
                Project = project;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.BackendBucket Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/backendBuckets"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }

        /// <summary>Retrieves the list of BackendBucket resources available to the specified project.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual ListRequest List(string project)
        {
            return new ListRequest(service, project);
        }

        /// <summary>Retrieves the list of BackendBucket resources available to the specified project.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.BackendBucketList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/backendBuckets"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the specified BackendBucket resource with the data included in the request. This method
        /// supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="backendBucket">Name of the
        /// BackendBucket resource to patch.</param>
        public virtual PatchRequest Patch(Google.Apis.Compute.v1.Data.BackendBucket body, string project, string backendBucket)
        {
            return new PatchRequest(service, body, project, backendBucket);
        }

        /// <summary>Updates the specified BackendBucket resource with the data included in the request. This method
        /// supports patch semantics.</summary>
        public class PatchRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.BackendBucket body, string project, string backendBucket)
                : base(service)
            {
                Project = project;
                BackendBucket = backendBucket;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the BackendBucket resource to patch.</summary>
            [Google.Apis.Util.RequestParameterAttribute("backendBucket", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string BackendBucket { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.BackendBucket Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/backendBuckets/{backendBucket}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "backendBucket", new Google.Apis.Discovery.Parameter
                    {
                        Name = "backendBucket",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Updates the specified BackendBucket resource with the data included in the request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="backendBucket">Name of the
        /// BackendBucket resource to update.</param>
        public virtual UpdateRequest Update(Google.Apis.Compute.v1.Data.BackendBucket body, string project, string backendBucket)
        {
            return new UpdateRequest(service, body, project, backendBucket);
        }

        /// <summary>Updates the specified BackendBucket resource with the data included in the request.</summary>
        public class UpdateRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.BackendBucket body, string project, string backendBucket)
                : base(service)
            {
                Project = project;
                BackendBucket = backendBucket;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the BackendBucket resource to update.</summary>
            [Google.Apis.Util.RequestParameterAttribute("backendBucket", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string BackendBucket { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.BackendBucket Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/backendBuckets/{backendBucket}"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "backendBucket", new Google.Apis.Discovery.Parameter
                    {
                        Name = "backendBucket",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }
    }

    /// <summary>The "backendServices" collection of methods.</summary>
    public class BackendServicesResource
    {
        private const string Resource = "backendServices";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public BackendServicesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Retrieves the list of all BackendService resources, regional and global, available to the specified
        /// project.</summary>
        /// <param name="project">Name of the project scoping this request.</param>
        public virtual AggregatedListRequest AggregatedList(string project)
        {
            return new AggregatedListRequest(service, project);
        }

        /// <summary>Retrieves the list of all BackendService resources, regional and global, available to the specified
        /// project.</summary>
        public class AggregatedListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.BackendServiceAggregatedList>
        {
            /// <summary>Constructs a new AggregatedList request.</summary>
            public AggregatedListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Name of the project scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "aggregatedList"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/aggregated/backendServices"; }
            }

            /// <summary>Initializes AggregatedList parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Deletes the specified BackendService resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="backendService">Name of the
        /// BackendService resource to delete.</param>
        public virtual DeleteRequest Delete(string project, string backendService)
        {
            return new DeleteRequest(service, project, backendService);
        }

        /// <summary>Deletes the specified BackendService resource.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string backendService)
                : base(service)
            {
                Project = project;
                BackendService = backendService;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the BackendService resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("backendService", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string BackendService { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/backendServices/{backendService}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "backendService", new Google.Apis.Discovery.Parameter
                    {
                        Name = "backendService",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified BackendService resource. Get a list of available backend services by making a
        /// list() request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="backendService">Name of the
        /// BackendService resource to return.</param>
        public virtual GetRequest Get(string project, string backendService)
        {
            return new GetRequest(service, project, backendService);
        }

        /// <summary>Returns the specified BackendService resource. Get a list of available backend services by making a
        /// list() request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.BackendService>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string backendService)
                : base(service)
            {
                Project = project;
                BackendService = backendService;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the BackendService resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("backendService", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string BackendService { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/backendServices/{backendService}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "backendService", new Google.Apis.Discovery.Parameter
                    {
                        Name = "backendService",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Gets the most recent health check results for this BackendService.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project"></param>
        /// <param name="backendService">Name of the BackendService resource to which the
        /// queried instance belongs.</param>
        public virtual GetHealthRequest GetHealth(Google.Apis.Compute.v1.Data.ResourceGroupReference body, string project, string backendService)
        {
            return new GetHealthRequest(service, body, project, backendService);
        }

        /// <summary>Gets the most recent health check results for this BackendService.</summary>
        public class GetHealthRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.BackendServiceGroupHealth>
        {
            /// <summary>Constructs a new GetHealth request.</summary>
            public GetHealthRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.ResourceGroupReference body, string project, string backendService)
                : base(service)
            {
                Project = project;
                BackendService = backendService;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the BackendService resource to which the queried instance belongs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("backendService", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string BackendService { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.ResourceGroupReference Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "getHealth"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/backendServices/{backendService}/getHealth"; }
            }

            /// <summary>Initializes GetHealth parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "backendService", new Google.Apis.Discovery.Parameter
                    {
                        Name = "backendService",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates a BackendService resource in the specified project using the data included in the request.
        /// There are several restrictions and guidelines to keep in mind when creating a backend service. Read
        /// Restrictions and Guidelines for more information.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.BackendService body, string project)
        {
            return new InsertRequest(service, body, project);
        }

        /// <summary>Creates a BackendService resource in the specified project using the data included in the request.
        /// There are several restrictions and guidelines to keep in mind when creating a backend service. Read
        /// Restrictions and Guidelines for more information.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.BackendService body, string project)
                : base(service)
            {
                Project = project;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.BackendService Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/backendServices"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }

        /// <summary>Retrieves the list of BackendService resources available to the specified project.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual ListRequest List(string project)
        {
            return new ListRequest(service, project);
        }

        /// <summary>Retrieves the list of BackendService resources available to the specified project.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.BackendServiceList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/backendServices"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Patches the specified BackendService resource with the data included in the request. There are
        /// several restrictions and guidelines to keep in mind when updating a backend service. Read  Restrictions and
        /// Guidelines for more information. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="backendService">Name of the
        /// BackendService resource to patch.</param>
        public virtual PatchRequest Patch(Google.Apis.Compute.v1.Data.BackendService body, string project, string backendService)
        {
            return new PatchRequest(service, body, project, backendService);
        }

        /// <summary>Patches the specified BackendService resource with the data included in the request. There are
        /// several restrictions and guidelines to keep in mind when updating a backend service. Read  Restrictions and
        /// Guidelines for more information. This method supports patch semantics.</summary>
        public class PatchRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.BackendService body, string project, string backendService)
                : base(service)
            {
                Project = project;
                BackendService = backendService;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the BackendService resource to patch.</summary>
            [Google.Apis.Util.RequestParameterAttribute("backendService", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string BackendService { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.BackendService Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/backendServices/{backendService}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "backendService", new Google.Apis.Discovery.Parameter
                    {
                        Name = "backendService",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Updates the specified BackendService resource with the data included in the request. There are
        /// several restrictions and guidelines to keep in mind when updating a backend service. Read  Restrictions and
        /// Guidelines for more information.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="backendService">Name of the
        /// BackendService resource to update.</param>
        public virtual UpdateRequest Update(Google.Apis.Compute.v1.Data.BackendService body, string project, string backendService)
        {
            return new UpdateRequest(service, body, project, backendService);
        }

        /// <summary>Updates the specified BackendService resource with the data included in the request. There are
        /// several restrictions and guidelines to keep in mind when updating a backend service. Read  Restrictions and
        /// Guidelines for more information.</summary>
        public class UpdateRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.BackendService body, string project, string backendService)
                : base(service)
            {
                Project = project;
                BackendService = backendService;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the BackendService resource to update.</summary>
            [Google.Apis.Util.RequestParameterAttribute("backendService", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string BackendService { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.BackendService Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/backendServices/{backendService}"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "backendService", new Google.Apis.Discovery.Parameter
                    {
                        Name = "backendService",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }
    }

    /// <summary>The "diskTypes" collection of methods.</summary>
    public class DiskTypesResource
    {
        private const string Resource = "diskTypes";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public DiskTypesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Retrieves an aggregated list of disk types.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual AggregatedListRequest AggregatedList(string project)
        {
            return new AggregatedListRequest(service, project);
        }

        /// <summary>Retrieves an aggregated list of disk types.</summary>
        public class AggregatedListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.DiskTypeAggregatedList>
        {
            /// <summary>Constructs a new AggregatedList request.</summary>
            public AggregatedListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "aggregatedList"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/aggregated/diskTypes"; }
            }

            /// <summary>Initializes AggregatedList parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Returns the specified disk type. Get a list of available disk types by making a list()
        /// request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        /// <param name="diskType">Name of the disk type to return.</param>
        public virtual GetRequest Get(string project, string zone, string diskType)
        {
            return new GetRequest(service, project, zone, diskType);
        }

        /// <summary>Returns the specified disk type. Get a list of available disk types by making a list()
        /// request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.DiskType>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string zone, string diskType)
                : base(service)
            {
                Project = project;
                Zone = zone;
                DiskType = diskType;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Name of the disk type to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("diskType", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string DiskType { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/diskTypes/{diskType}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "diskType", new Google.Apis.Discovery.Parameter
                    {
                        Name = "diskType",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Retrieves a list of disk types available to the specified project.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        public virtual ListRequest List(string project, string zone)
        {
            return new ListRequest(service, project, zone);
        }

        /// <summary>Retrieves a list of disk types available to the specified project.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.DiskTypeList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project, string zone)
                : base(service)
            {
                Project = project;
                Zone = zone;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/diskTypes"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "disks" collection of methods.</summary>
    public class DisksResource
    {
        private const string Resource = "disks";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public DisksResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Retrieves an aggregated list of persistent disks.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual AggregatedListRequest AggregatedList(string project)
        {
            return new AggregatedListRequest(service, project);
        }

        /// <summary>Retrieves an aggregated list of persistent disks.</summary>
        public class AggregatedListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.DiskAggregatedList>
        {
            /// <summary>Constructs a new AggregatedList request.</summary>
            public AggregatedListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "aggregatedList"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/aggregated/disks"; }
            }

            /// <summary>Initializes AggregatedList parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Creates a snapshot of a specified persistent disk.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        /// <param name="disk">Name of the persistent disk to snapshot.</param>
        public virtual CreateSnapshotRequest CreateSnapshot(Google.Apis.Compute.v1.Data.Snapshot body, string project, string zone, string disk)
        {
            return new CreateSnapshotRequest(service, body, project, zone, disk);
        }

        /// <summary>Creates a snapshot of a specified persistent disk.</summary>
        public class CreateSnapshotRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new CreateSnapshot request.</summary>
            public CreateSnapshotRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.Snapshot body, string project, string zone, string disk)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Disk = disk;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Name of the persistent disk to snapshot.</summary>
            [Google.Apis.Util.RequestParameterAttribute("disk", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Disk { get; private set; }


            [Google.Apis.Util.RequestParameterAttribute("guestFlush", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> GuestFlush { get; set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.Snapshot Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "createSnapshot"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/disks/{disk}/createSnapshot"; }
            }

            /// <summary>Initializes CreateSnapshot parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "disk", new Google.Apis.Discovery.Parameter
                    {
                        Name = "disk",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "guestFlush", new Google.Apis.Discovery.Parameter
                    {
                        Name = "guestFlush",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Deletes the specified persistent disk. Deleting a disk removes its data permanently and is
        /// irreversible. However, deleting a disk does not delete any snapshots previously made from the disk. You must
        /// separately delete snapshots.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        /// <param name="disk">Name of the persistent disk to delete.</param>
        public virtual DeleteRequest Delete(string project, string zone, string disk)
        {
            return new DeleteRequest(service, project, zone, disk);
        }

        /// <summary>Deletes the specified persistent disk. Deleting a disk removes its data permanently and is
        /// irreversible. However, deleting a disk does not delete any snapshots previously made from the disk. You must
        /// separately delete snapshots.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string zone, string disk)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Disk = disk;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Name of the persistent disk to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("disk", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Disk { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/disks/{disk}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "disk", new Google.Apis.Discovery.Parameter
                    {
                        Name = "disk",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Returns a specified persistent disk. Get a list of available persistent disks by making a list()
        /// request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        /// <param name="disk">Name of the persistent disk to return.</param>
        public virtual GetRequest Get(string project, string zone, string disk)
        {
            return new GetRequest(service, project, zone, disk);
        }

        /// <summary>Returns a specified persistent disk. Get a list of available persistent disks by making a list()
        /// request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Disk>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string zone, string disk)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Disk = disk;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Name of the persistent disk to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("disk", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Disk { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/disks/{disk}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "disk", new Google.Apis.Discovery.Parameter
                    {
                        Name = "disk",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates a persistent disk in the specified project using the data in the request. You can create a
        /// disk with a sourceImage, a sourceSnapshot, or create an empty 500 GB data disk by omitting all properties.
        /// You can also create a disk that is larger than the default size by specifying the sizeGb property.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.Disk body, string project, string zone)
        {
            return new InsertRequest(service, body, project, zone);
        }

        /// <summary>Creates a persistent disk in the specified project using the data in the request. You can create a
        /// disk with a sourceImage, a sourceSnapshot, or create an empty 500 GB data disk by omitting all properties.
        /// You can also create a disk that is larger than the default size by specifying the sizeGb property.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.Disk body, string project, string zone)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Optional. Source image to restore onto a disk.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sourceImage", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SourceImage { get; set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.Disk Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/disks"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "sourceImage", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sourceImage",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of persistent disks contained within the specified zone.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        public virtual ListRequest List(string project, string zone)
        {
            return new ListRequest(service, project, zone);
        }

        /// <summary>Retrieves a list of persistent disks contained within the specified zone.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.DiskList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project, string zone)
                : base(service)
            {
                Project = project;
                Zone = zone;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/disks"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Resizes the specified persistent disk.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        /// <param name="disk">The name of the persistent disk.</param>
        public virtual ResizeRequest Resize(Google.Apis.Compute.v1.Data.DisksResizeRequest body, string project, string zone, string disk)
        {
            return new ResizeRequest(service, body, project, zone, disk);
        }

        /// <summary>Resizes the specified persistent disk.</summary>
        public class ResizeRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Resize request.</summary>
            public ResizeRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.DisksResizeRequest body, string project, string zone, string disk)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Disk = disk;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>The name of the persistent disk.</summary>
            [Google.Apis.Util.RequestParameterAttribute("disk", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Disk { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.DisksResizeRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "resize"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/disks/{disk}/resize"; }
            }

            /// <summary>Initializes Resize parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "disk", new Google.Apis.Discovery.Parameter
                    {
                        Name = "disk",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Sets the labels on a disk. To learn more about labels, read the Labeling Resources
        /// documentation.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        /// <param name="resource">Name of the resource for this request.</param>
        public virtual SetLabelsRequest SetLabels(Google.Apis.Compute.v1.Data.ZoneSetLabelsRequest body, string project, string zone, string resource)
        {
            return new SetLabelsRequest(service, body, project, zone, resource);
        }

        /// <summary>Sets the labels on a disk. To learn more about labels, read the Labeling Resources
        /// documentation.</summary>
        public class SetLabelsRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetLabels request.</summary>
            public SetLabelsRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.ZoneSetLabelsRequest body, string project, string zone, string resource)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Resource = resource;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Name of the resource for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("resource", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Resource { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.ZoneSetLabelsRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setLabels"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/disks/{resource}/setLabels"; }
            }

            /// <summary>Initializes SetLabels parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "resource", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resource",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }
    }

    /// <summary>The "firewalls" collection of methods.</summary>
    public class FirewallsResource
    {
        private const string Resource = "firewalls";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public FirewallsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes the specified firewall.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="firewall">Name of the firewall rule
        /// to delete.</param>
        public virtual DeleteRequest Delete(string project, string firewall)
        {
            return new DeleteRequest(service, project, firewall);
        }

        /// <summary>Deletes the specified firewall.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string firewall)
                : base(service)
            {
                Project = project;
                Firewall = firewall;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the firewall rule to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("firewall", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Firewall { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/firewalls/{firewall}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "firewall", new Google.Apis.Discovery.Parameter
                    {
                        Name = "firewall",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified firewall.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="firewall">Name of the firewall rule
        /// to return.</param>
        public virtual GetRequest Get(string project, string firewall)
        {
            return new GetRequest(service, project, firewall);
        }

        /// <summary>Returns the specified firewall.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Firewall>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string firewall)
                : base(service)
            {
                Project = project;
                Firewall = firewall;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the firewall rule to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("firewall", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Firewall { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/firewalls/{firewall}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "firewall", new Google.Apis.Discovery.Parameter
                    {
                        Name = "firewall",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates a firewall rule in the specified project using the data included in the request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.Firewall body, string project)
        {
            return new InsertRequest(service, body, project);
        }

        /// <summary>Creates a firewall rule in the specified project using the data included in the request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.Firewall body, string project)
                : base(service)
            {
                Project = project;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.Firewall Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/firewalls"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }

        /// <summary>Retrieves the list of firewall rules available to the specified project.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual ListRequest List(string project)
        {
            return new ListRequest(service, project);
        }

        /// <summary>Retrieves the list of firewall rules available to the specified project.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.FirewallList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/firewalls"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the specified firewall rule with the data included in the request. Using PUT method, can
        /// only update following fields of firewall rule: allowed, description, sourceRanges, sourceTags, targetTags.
        /// This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="firewall">Name of the firewall rule
        /// to update.</param>
        public virtual PatchRequest Patch(Google.Apis.Compute.v1.Data.Firewall body, string project, string firewall)
        {
            return new PatchRequest(service, body, project, firewall);
        }

        /// <summary>Updates the specified firewall rule with the data included in the request. Using PUT method, can
        /// only update following fields of firewall rule: allowed, description, sourceRanges, sourceTags, targetTags.
        /// This method supports patch semantics.</summary>
        public class PatchRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.Firewall body, string project, string firewall)
                : base(service)
            {
                Project = project;
                Firewall = firewall;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the firewall rule to update.</summary>
            [Google.Apis.Util.RequestParameterAttribute("firewall", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Firewall { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.Firewall Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/firewalls/{firewall}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "firewall", new Google.Apis.Discovery.Parameter
                    {
                        Name = "firewall",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Updates the specified firewall rule with the data included in the request. Using PUT method, can
        /// only update following fields of firewall rule: allowed, description, sourceRanges, sourceTags,
        /// targetTags.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="firewall">Name of the firewall rule
        /// to update.</param>
        public virtual UpdateRequest Update(Google.Apis.Compute.v1.Data.Firewall body, string project, string firewall)
        {
            return new UpdateRequest(service, body, project, firewall);
        }

        /// <summary>Updates the specified firewall rule with the data included in the request. Using PUT method, can
        /// only update following fields of firewall rule: allowed, description, sourceRanges, sourceTags,
        /// targetTags.</summary>
        public class UpdateRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.Firewall body, string project, string firewall)
                : base(service)
            {
                Project = project;
                Firewall = firewall;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the firewall rule to update.</summary>
            [Google.Apis.Util.RequestParameterAttribute("firewall", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Firewall { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.Firewall Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/firewalls/{firewall}"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "firewall", new Google.Apis.Discovery.Parameter
                    {
                        Name = "firewall",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }
    }

    /// <summary>The "forwardingRules" collection of methods.</summary>
    public class ForwardingRulesResource
    {
        private const string Resource = "forwardingRules";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ForwardingRulesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Retrieves an aggregated list of forwarding rules.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual AggregatedListRequest AggregatedList(string project)
        {
            return new AggregatedListRequest(service, project);
        }

        /// <summary>Retrieves an aggregated list of forwarding rules.</summary>
        public class AggregatedListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.ForwardingRuleAggregatedList>
        {
            /// <summary>Constructs a new AggregatedList request.</summary>
            public AggregatedListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "aggregatedList"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/aggregated/forwardingRules"; }
            }

            /// <summary>Initializes AggregatedList parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Deletes the specified ForwardingRule resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="forwardingRule">Name of the ForwardingRule resource to
        /// delete.</param>
        public virtual DeleteRequest Delete(string project, string region, string forwardingRule)
        {
            return new DeleteRequest(service, project, region, forwardingRule);
        }

        /// <summary>Deletes the specified ForwardingRule resource.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string region, string forwardingRule)
                : base(service)
            {
                Project = project;
                Region = region;
                ForwardingRule = forwardingRule;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the ForwardingRule resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("forwardingRule", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ForwardingRule { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/forwardingRules/{forwardingRule}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "forwardingRule", new Google.Apis.Discovery.Parameter
                    {
                        Name = "forwardingRule",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified ForwardingRule resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="forwardingRule">Name of the ForwardingRule resource to
        /// return.</param>
        public virtual GetRequest Get(string project, string region, string forwardingRule)
        {
            return new GetRequest(service, project, region, forwardingRule);
        }

        /// <summary>Returns the specified ForwardingRule resource.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.ForwardingRule>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string region, string forwardingRule)
                : base(service)
            {
                Project = project;
                Region = region;
                ForwardingRule = forwardingRule;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the ForwardingRule resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("forwardingRule", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ForwardingRule { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/forwardingRules/{forwardingRule}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "forwardingRule", new Google.Apis.Discovery.Parameter
                    {
                        Name = "forwardingRule",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates a ForwardingRule resource in the specified project and region using the data included in
        /// the request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.ForwardingRule body, string project, string region)
        {
            return new InsertRequest(service, body, project, region);
        }

        /// <summary>Creates a ForwardingRule resource in the specified project and region using the data included in
        /// the request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.ForwardingRule body, string project, string region)
                : base(service)
            {
                Project = project;
                Region = region;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.ForwardingRule Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/forwardingRules"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Retrieves a list of ForwardingRule resources available to the specified project and
        /// region.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        public virtual ListRequest List(string project, string region)
        {
            return new ListRequest(service, project, region);
        }

        /// <summary>Retrieves a list of ForwardingRule resources available to the specified project and
        /// region.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.ForwardingRuleList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project, string region)
                : base(service)
            {
                Project = project;
                Region = region;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/forwardingRules"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Changes target URL for forwarding rule. The new target should be of the same type as the old
        /// target.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="forwardingRule">Name of the ForwardingRule resource in which target is to
        /// be set.</param>
        public virtual SetTargetRequest SetTarget(Google.Apis.Compute.v1.Data.TargetReference body, string project, string region, string forwardingRule)
        {
            return new SetTargetRequest(service, body, project, region, forwardingRule);
        }

        /// <summary>Changes target URL for forwarding rule. The new target should be of the same type as the old
        /// target.</summary>
        public class SetTargetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetTarget request.</summary>
            public SetTargetRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.TargetReference body, string project, string region, string forwardingRule)
                : base(service)
            {
                Project = project;
                Region = region;
                ForwardingRule = forwardingRule;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the ForwardingRule resource in which target is to be set.</summary>
            [Google.Apis.Util.RequestParameterAttribute("forwardingRule", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ForwardingRule { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.TargetReference Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setTarget"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/forwardingRules/{forwardingRule}/setTarget"; }
            }

            /// <summary>Initializes SetTarget parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "forwardingRule", new Google.Apis.Discovery.Parameter
                    {
                        Name = "forwardingRule",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }
    }

    /// <summary>The "globalAddresses" collection of methods.</summary>
    public class GlobalAddressesResource
    {
        private const string Resource = "globalAddresses";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public GlobalAddressesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes the specified address resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="address">Name of the address
        /// resource to delete.</param>
        public virtual DeleteRequest Delete(string project, string address)
        {
            return new DeleteRequest(service, project, address);
        }

        /// <summary>Deletes the specified address resource.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string address)
                : base(service)
            {
                Project = project;
                Address = address;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the address resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("address", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Address { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/addresses/{address}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "address", new Google.Apis.Discovery.Parameter
                    {
                        Name = "address",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified address resource. Get a list of available addresses by making a list()
        /// request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="address">Name of the address
        /// resource to return.</param>
        public virtual GetRequest Get(string project, string address)
        {
            return new GetRequest(service, project, address);
        }

        /// <summary>Returns the specified address resource. Get a list of available addresses by making a list()
        /// request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Address>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string address)
                : base(service)
            {
                Project = project;
                Address = address;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the address resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("address", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Address { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/addresses/{address}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "address", new Google.Apis.Discovery.Parameter
                    {
                        Name = "address",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates an address resource in the specified project using the data included in the
        /// request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.Address body, string project)
        {
            return new InsertRequest(service, body, project);
        }

        /// <summary>Creates an address resource in the specified project using the data included in the
        /// request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.Address body, string project)
                : base(service)
            {
                Project = project;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.Address Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/addresses"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }

        /// <summary>Retrieves a list of global addresses.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual ListRequest List(string project)
        {
            return new ListRequest(service, project);
        }

        /// <summary>Retrieves a list of global addresses.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.AddressList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/addresses"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "globalForwardingRules" collection of methods.</summary>
    public class GlobalForwardingRulesResource
    {
        private const string Resource = "globalForwardingRules";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public GlobalForwardingRulesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes the specified GlobalForwardingRule resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="forwardingRule">Name of the
        /// ForwardingRule resource to delete.</param>
        public virtual DeleteRequest Delete(string project, string forwardingRule)
        {
            return new DeleteRequest(service, project, forwardingRule);
        }

        /// <summary>Deletes the specified GlobalForwardingRule resource.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string forwardingRule)
                : base(service)
            {
                Project = project;
                ForwardingRule = forwardingRule;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the ForwardingRule resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("forwardingRule", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ForwardingRule { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/forwardingRules/{forwardingRule}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "forwardingRule", new Google.Apis.Discovery.Parameter
                    {
                        Name = "forwardingRule",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified GlobalForwardingRule resource. Get a list of available forwarding rules by
        /// making a list() request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="forwardingRule">Name of the
        /// ForwardingRule resource to return.</param>
        public virtual GetRequest Get(string project, string forwardingRule)
        {
            return new GetRequest(service, project, forwardingRule);
        }

        /// <summary>Returns the specified GlobalForwardingRule resource. Get a list of available forwarding rules by
        /// making a list() request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.ForwardingRule>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string forwardingRule)
                : base(service)
            {
                Project = project;
                ForwardingRule = forwardingRule;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the ForwardingRule resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("forwardingRule", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ForwardingRule { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/forwardingRules/{forwardingRule}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "forwardingRule", new Google.Apis.Discovery.Parameter
                    {
                        Name = "forwardingRule",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates a GlobalForwardingRule resource in the specified project using the data included in the
        /// request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.ForwardingRule body, string project)
        {
            return new InsertRequest(service, body, project);
        }

        /// <summary>Creates a GlobalForwardingRule resource in the specified project using the data included in the
        /// request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.ForwardingRule body, string project)
                : base(service)
            {
                Project = project;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.ForwardingRule Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/forwardingRules"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }

        /// <summary>Retrieves a list of GlobalForwardingRule resources available to the specified project.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual ListRequest List(string project)
        {
            return new ListRequest(service, project);
        }

        /// <summary>Retrieves a list of GlobalForwardingRule resources available to the specified project.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.ForwardingRuleList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/forwardingRules"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Changes target URL for the GlobalForwardingRule resource. The new target should be of the same type
        /// as the old target.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="forwardingRule">Name of the
        /// ForwardingRule resource in which target is to be set.</param>
        public virtual SetTargetRequest SetTarget(Google.Apis.Compute.v1.Data.TargetReference body, string project, string forwardingRule)
        {
            return new SetTargetRequest(service, body, project, forwardingRule);
        }

        /// <summary>Changes target URL for the GlobalForwardingRule resource. The new target should be of the same type
        /// as the old target.</summary>
        public class SetTargetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetTarget request.</summary>
            public SetTargetRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.TargetReference body, string project, string forwardingRule)
                : base(service)
            {
                Project = project;
                ForwardingRule = forwardingRule;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the ForwardingRule resource in which target is to be set.</summary>
            [Google.Apis.Util.RequestParameterAttribute("forwardingRule", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ForwardingRule { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.TargetReference Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setTarget"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/forwardingRules/{forwardingRule}/setTarget"; }
            }

            /// <summary>Initializes SetTarget parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "forwardingRule", new Google.Apis.Discovery.Parameter
                    {
                        Name = "forwardingRule",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }
    }

    /// <summary>The "globalOperations" collection of methods.</summary>
    public class GlobalOperationsResource
    {
        private const string Resource = "globalOperations";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public GlobalOperationsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Retrieves an aggregated list of all operations.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual AggregatedListRequest AggregatedList(string project)
        {
            return new AggregatedListRequest(service, project);
        }

        /// <summary>Retrieves an aggregated list of all operations.</summary>
        public class AggregatedListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.OperationAggregatedList>
        {
            /// <summary>Constructs a new AggregatedList request.</summary>
            public AggregatedListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "aggregatedList"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/aggregated/operations"; }
            }

            /// <summary>Initializes AggregatedList parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Deletes the specified Operations resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="operation">Name of the Operations
        /// resource to delete.</param>
        public virtual DeleteRequest Delete(string project, string operation)
        {
            return new DeleteRequest(service, project, operation);
        }

        /// <summary>Deletes the specified Operations resource.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string operation)
                : base(service)
            {
                Project = project;
                Operation = operation;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the Operations resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("operation", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Operation { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/operations/{operation}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "operation", new Google.Apis.Discovery.Parameter
                    {
                        Name = "operation",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Retrieves the specified Operations resource. Get a list of operations by making a list()
        /// request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="operation">Name of the Operations
        /// resource to return.</param>
        public virtual GetRequest Get(string project, string operation)
        {
            return new GetRequest(service, project, operation);
        }

        /// <summary>Retrieves the specified Operations resource. Get a list of operations by making a list()
        /// request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string operation)
                : base(service)
            {
                Project = project;
                Operation = operation;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the Operations resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("operation", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Operation { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/operations/{operation}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "operation", new Google.Apis.Discovery.Parameter
                    {
                        Name = "operation",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Retrieves a list of Operation resources contained within the specified project.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual ListRequest List(string project)
        {
            return new ListRequest(service, project);
        }

        /// <summary>Retrieves a list of Operation resources contained within the specified project.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.OperationList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/operations"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "healthChecks" collection of methods.</summary>
    public class HealthChecksResource
    {
        private const string Resource = "healthChecks";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public HealthChecksResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes the specified HealthCheck resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="healthCheck">Name of the HealthCheck
        /// resource to delete.</param>
        public virtual DeleteRequest Delete(string project, string healthCheck)
        {
            return new DeleteRequest(service, project, healthCheck);
        }

        /// <summary>Deletes the specified HealthCheck resource.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string healthCheck)
                : base(service)
            {
                Project = project;
                HealthCheck = healthCheck;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the HealthCheck resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("healthCheck", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string HealthCheck { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/healthChecks/{healthCheck}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "healthCheck", new Google.Apis.Discovery.Parameter
                    {
                        Name = "healthCheck",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified HealthCheck resource. Get a list of available health checks by making a
        /// list() request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="healthCheck">Name of the HealthCheck
        /// resource to return.</param>
        public virtual GetRequest Get(string project, string healthCheck)
        {
            return new GetRequest(service, project, healthCheck);
        }

        /// <summary>Returns the specified HealthCheck resource. Get a list of available health checks by making a
        /// list() request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.HealthCheck>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string healthCheck)
                : base(service)
            {
                Project = project;
                HealthCheck = healthCheck;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the HealthCheck resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("healthCheck", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string HealthCheck { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/healthChecks/{healthCheck}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "healthCheck", new Google.Apis.Discovery.Parameter
                    {
                        Name = "healthCheck",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates a HealthCheck resource in the specified project using the data included in the
        /// request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.HealthCheck body, string project)
        {
            return new InsertRequest(service, body, project);
        }

        /// <summary>Creates a HealthCheck resource in the specified project using the data included in the
        /// request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.HealthCheck body, string project)
                : base(service)
            {
                Project = project;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.HealthCheck Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/healthChecks"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }

        /// <summary>Retrieves the list of HealthCheck resources available to the specified project.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual ListRequest List(string project)
        {
            return new ListRequest(service, project);
        }

        /// <summary>Retrieves the list of HealthCheck resources available to the specified project.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.HealthCheckList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/healthChecks"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates a HealthCheck resource in the specified project using the data included in the request.
        /// This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="healthCheck">Name of the HealthCheck
        /// resource to patch.</param>
        public virtual PatchRequest Patch(Google.Apis.Compute.v1.Data.HealthCheck body, string project, string healthCheck)
        {
            return new PatchRequest(service, body, project, healthCheck);
        }

        /// <summary>Updates a HealthCheck resource in the specified project using the data included in the request.
        /// This method supports patch semantics.</summary>
        public class PatchRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.HealthCheck body, string project, string healthCheck)
                : base(service)
            {
                Project = project;
                HealthCheck = healthCheck;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the HealthCheck resource to patch.</summary>
            [Google.Apis.Util.RequestParameterAttribute("healthCheck", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string HealthCheck { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.HealthCheck Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/healthChecks/{healthCheck}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "healthCheck", new Google.Apis.Discovery.Parameter
                    {
                        Name = "healthCheck",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Updates a HealthCheck resource in the specified project using the data included in the
        /// request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="healthCheck">Name of the HealthCheck
        /// resource to update.</param>
        public virtual UpdateRequest Update(Google.Apis.Compute.v1.Data.HealthCheck body, string project, string healthCheck)
        {
            return new UpdateRequest(service, body, project, healthCheck);
        }

        /// <summary>Updates a HealthCheck resource in the specified project using the data included in the
        /// request.</summary>
        public class UpdateRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.HealthCheck body, string project, string healthCheck)
                : base(service)
            {
                Project = project;
                HealthCheck = healthCheck;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the HealthCheck resource to update.</summary>
            [Google.Apis.Util.RequestParameterAttribute("healthCheck", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string HealthCheck { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.HealthCheck Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/healthChecks/{healthCheck}"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "healthCheck", new Google.Apis.Discovery.Parameter
                    {
                        Name = "healthCheck",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }
    }

    /// <summary>The "httpHealthChecks" collection of methods.</summary>
    public class HttpHealthChecksResource
    {
        private const string Resource = "httpHealthChecks";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public HttpHealthChecksResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes the specified HttpHealthCheck resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="httpHealthCheck">Name of the
        /// HttpHealthCheck resource to delete.</param>
        public virtual DeleteRequest Delete(string project, string httpHealthCheck)
        {
            return new DeleteRequest(service, project, httpHealthCheck);
        }

        /// <summary>Deletes the specified HttpHealthCheck resource.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string httpHealthCheck)
                : base(service)
            {
                Project = project;
                HttpHealthCheck = httpHealthCheck;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the HttpHealthCheck resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("httpHealthCheck", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string HttpHealthCheck { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/httpHealthChecks/{httpHealthCheck}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "httpHealthCheck", new Google.Apis.Discovery.Parameter
                    {
                        Name = "httpHealthCheck",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified HttpHealthCheck resource. Get a list of available HTTP health checks by
        /// making a list() request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="httpHealthCheck">Name of the
        /// HttpHealthCheck resource to return.</param>
        public virtual GetRequest Get(string project, string httpHealthCheck)
        {
            return new GetRequest(service, project, httpHealthCheck);
        }

        /// <summary>Returns the specified HttpHealthCheck resource. Get a list of available HTTP health checks by
        /// making a list() request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.HttpHealthCheck>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string httpHealthCheck)
                : base(service)
            {
                Project = project;
                HttpHealthCheck = httpHealthCheck;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the HttpHealthCheck resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("httpHealthCheck", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string HttpHealthCheck { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/httpHealthChecks/{httpHealthCheck}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "httpHealthCheck", new Google.Apis.Discovery.Parameter
                    {
                        Name = "httpHealthCheck",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates a HttpHealthCheck resource in the specified project using the data included in the
        /// request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.HttpHealthCheck body, string project)
        {
            return new InsertRequest(service, body, project);
        }

        /// <summary>Creates a HttpHealthCheck resource in the specified project using the data included in the
        /// request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.HttpHealthCheck body, string project)
                : base(service)
            {
                Project = project;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.HttpHealthCheck Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/httpHealthChecks"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }

        /// <summary>Retrieves the list of HttpHealthCheck resources available to the specified project.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual ListRequest List(string project)
        {
            return new ListRequest(service, project);
        }

        /// <summary>Retrieves the list of HttpHealthCheck resources available to the specified project.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.HttpHealthCheckList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/httpHealthChecks"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates a HttpHealthCheck resource in the specified project using the data included in the request.
        /// This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="httpHealthCheck">Name of the
        /// HttpHealthCheck resource to patch.</param>
        public virtual PatchRequest Patch(Google.Apis.Compute.v1.Data.HttpHealthCheck body, string project, string httpHealthCheck)
        {
            return new PatchRequest(service, body, project, httpHealthCheck);
        }

        /// <summary>Updates a HttpHealthCheck resource in the specified project using the data included in the request.
        /// This method supports patch semantics.</summary>
        public class PatchRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.HttpHealthCheck body, string project, string httpHealthCheck)
                : base(service)
            {
                Project = project;
                HttpHealthCheck = httpHealthCheck;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the HttpHealthCheck resource to patch.</summary>
            [Google.Apis.Util.RequestParameterAttribute("httpHealthCheck", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string HttpHealthCheck { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.HttpHealthCheck Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/httpHealthChecks/{httpHealthCheck}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "httpHealthCheck", new Google.Apis.Discovery.Parameter
                    {
                        Name = "httpHealthCheck",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Updates a HttpHealthCheck resource in the specified project using the data included in the
        /// request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="httpHealthCheck">Name of the
        /// HttpHealthCheck resource to update.</param>
        public virtual UpdateRequest Update(Google.Apis.Compute.v1.Data.HttpHealthCheck body, string project, string httpHealthCheck)
        {
            return new UpdateRequest(service, body, project, httpHealthCheck);
        }

        /// <summary>Updates a HttpHealthCheck resource in the specified project using the data included in the
        /// request.</summary>
        public class UpdateRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.HttpHealthCheck body, string project, string httpHealthCheck)
                : base(service)
            {
                Project = project;
                HttpHealthCheck = httpHealthCheck;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the HttpHealthCheck resource to update.</summary>
            [Google.Apis.Util.RequestParameterAttribute("httpHealthCheck", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string HttpHealthCheck { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.HttpHealthCheck Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/httpHealthChecks/{httpHealthCheck}"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "httpHealthCheck", new Google.Apis.Discovery.Parameter
                    {
                        Name = "httpHealthCheck",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }
    }

    /// <summary>The "httpsHealthChecks" collection of methods.</summary>
    public class HttpsHealthChecksResource
    {
        private const string Resource = "httpsHealthChecks";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public HttpsHealthChecksResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes the specified HttpsHealthCheck resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="httpsHealthCheck">Name of the
        /// HttpsHealthCheck resource to delete.</param>
        public virtual DeleteRequest Delete(string project, string httpsHealthCheck)
        {
            return new DeleteRequest(service, project, httpsHealthCheck);
        }

        /// <summary>Deletes the specified HttpsHealthCheck resource.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string httpsHealthCheck)
                : base(service)
            {
                Project = project;
                HttpsHealthCheck = httpsHealthCheck;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the HttpsHealthCheck resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("httpsHealthCheck", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string HttpsHealthCheck { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/httpsHealthChecks/{httpsHealthCheck}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "httpsHealthCheck", new Google.Apis.Discovery.Parameter
                    {
                        Name = "httpsHealthCheck",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified HttpsHealthCheck resource. Get a list of available HTTPS health checks by
        /// making a list() request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="httpsHealthCheck">Name of the
        /// HttpsHealthCheck resource to return.</param>
        public virtual GetRequest Get(string project, string httpsHealthCheck)
        {
            return new GetRequest(service, project, httpsHealthCheck);
        }

        /// <summary>Returns the specified HttpsHealthCheck resource. Get a list of available HTTPS health checks by
        /// making a list() request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.HttpsHealthCheck>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string httpsHealthCheck)
                : base(service)
            {
                Project = project;
                HttpsHealthCheck = httpsHealthCheck;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the HttpsHealthCheck resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("httpsHealthCheck", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string HttpsHealthCheck { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/httpsHealthChecks/{httpsHealthCheck}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "httpsHealthCheck", new Google.Apis.Discovery.Parameter
                    {
                        Name = "httpsHealthCheck",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates a HttpsHealthCheck resource in the specified project using the data included in the
        /// request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.HttpsHealthCheck body, string project)
        {
            return new InsertRequest(service, body, project);
        }

        /// <summary>Creates a HttpsHealthCheck resource in the specified project using the data included in the
        /// request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.HttpsHealthCheck body, string project)
                : base(service)
            {
                Project = project;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.HttpsHealthCheck Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/httpsHealthChecks"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }

        /// <summary>Retrieves the list of HttpsHealthCheck resources available to the specified project.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual ListRequest List(string project)
        {
            return new ListRequest(service, project);
        }

        /// <summary>Retrieves the list of HttpsHealthCheck resources available to the specified project.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.HttpsHealthCheckList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/httpsHealthChecks"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates a HttpsHealthCheck resource in the specified project using the data included in the
        /// request. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="httpsHealthCheck">Name of the
        /// HttpsHealthCheck resource to patch.</param>
        public virtual PatchRequest Patch(Google.Apis.Compute.v1.Data.HttpsHealthCheck body, string project, string httpsHealthCheck)
        {
            return new PatchRequest(service, body, project, httpsHealthCheck);
        }

        /// <summary>Updates a HttpsHealthCheck resource in the specified project using the data included in the
        /// request. This method supports patch semantics.</summary>
        public class PatchRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.HttpsHealthCheck body, string project, string httpsHealthCheck)
                : base(service)
            {
                Project = project;
                HttpsHealthCheck = httpsHealthCheck;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the HttpsHealthCheck resource to patch.</summary>
            [Google.Apis.Util.RequestParameterAttribute("httpsHealthCheck", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string HttpsHealthCheck { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.HttpsHealthCheck Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/httpsHealthChecks/{httpsHealthCheck}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "httpsHealthCheck", new Google.Apis.Discovery.Parameter
                    {
                        Name = "httpsHealthCheck",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Updates a HttpsHealthCheck resource in the specified project using the data included in the
        /// request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="httpsHealthCheck">Name of the
        /// HttpsHealthCheck resource to update.</param>
        public virtual UpdateRequest Update(Google.Apis.Compute.v1.Data.HttpsHealthCheck body, string project, string httpsHealthCheck)
        {
            return new UpdateRequest(service, body, project, httpsHealthCheck);
        }

        /// <summary>Updates a HttpsHealthCheck resource in the specified project using the data included in the
        /// request.</summary>
        public class UpdateRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.HttpsHealthCheck body, string project, string httpsHealthCheck)
                : base(service)
            {
                Project = project;
                HttpsHealthCheck = httpsHealthCheck;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the HttpsHealthCheck resource to update.</summary>
            [Google.Apis.Util.RequestParameterAttribute("httpsHealthCheck", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string HttpsHealthCheck { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.HttpsHealthCheck Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/httpsHealthChecks/{httpsHealthCheck}"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "httpsHealthCheck", new Google.Apis.Discovery.Parameter
                    {
                        Name = "httpsHealthCheck",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }
    }

    /// <summary>The "images" collection of methods.</summary>
    public class ImagesResource
    {
        private const string Resource = "images";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ImagesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes the specified image.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="image">Name of the image resource to
        /// delete.</param>
        public virtual DeleteRequest Delete(string project, string image)
        {
            return new DeleteRequest(service, project, image);
        }

        /// <summary>Deletes the specified image.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string image)
                : base(service)
            {
                Project = project;
                Image = image;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the image resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("image", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Image { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/images/{image}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "image", new Google.Apis.Discovery.Parameter
                    {
                        Name = "image",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Sets the deprecation status of an image.
        ///
        /// If an empty request body is given, clears the deprecation status instead.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="image">Image name.</param>
        public virtual DeprecateRequest Deprecate(Google.Apis.Compute.v1.Data.DeprecationStatus body, string project, string image)
        {
            return new DeprecateRequest(service, body, project, image);
        }

        /// <summary>Sets the deprecation status of an image.
        ///
        /// If an empty request body is given, clears the deprecation status instead.</summary>
        public class DeprecateRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Deprecate request.</summary>
            public DeprecateRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.DeprecationStatus body, string project, string image)
                : base(service)
            {
                Project = project;
                Image = image;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Image name.</summary>
            [Google.Apis.Util.RequestParameterAttribute("image", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Image { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.DeprecationStatus Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "deprecate"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/images/{image}/deprecate"; }
            }

            /// <summary>Initializes Deprecate parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "image", new Google.Apis.Discovery.Parameter
                    {
                        Name = "image",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified image. Get a list of available images by making a list() request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="image">Name of the image resource to
        /// return.</param>
        public virtual GetRequest Get(string project, string image)
        {
            return new GetRequest(service, project, image);
        }

        /// <summary>Returns the specified image. Get a list of available images by making a list() request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Image>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string image)
                : base(service)
            {
                Project = project;
                Image = image;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the image resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("image", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Image { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/images/{image}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "image", new Google.Apis.Discovery.Parameter
                    {
                        Name = "image",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the latest image that is part of an image family and is not deprecated.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="family">Name of the image family to
        /// search for.</param>
        public virtual GetFromFamilyRequest GetFromFamily(string project, string family)
        {
            return new GetFromFamilyRequest(service, project, family);
        }

        /// <summary>Returns the latest image that is part of an image family and is not deprecated.</summary>
        public class GetFromFamilyRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Image>
        {
            /// <summary>Constructs a new GetFromFamily request.</summary>
            public GetFromFamilyRequest(Google.Apis.Services.IClientService service, string project, string family)
                : base(service)
            {
                Project = project;
                Family = family;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the image family to search for.</summary>
            [Google.Apis.Util.RequestParameterAttribute("family", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Family { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "getFromFamily"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/images/family/{family}"; }
            }

            /// <summary>Initializes GetFromFamily parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "family", new Google.Apis.Discovery.Parameter
                    {
                        Name = "family",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates an image in the specified project using the data included in the request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.Image body, string project)
        {
            return new InsertRequest(service, body, project);
        }

        /// <summary>Creates an image in the specified project using the data included in the request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.Image body, string project)
                : base(service)
            {
                Project = project;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.Image Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/images"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }

        /// <summary>Retrieves the list of private images available to the specified project. Private images are images
        /// you create that belong to your project. This method does not get any images that belong to other projects,
        /// including publicly-available images, like Debian 8. If you want to get a list of publicly-available images,
        /// use this method to make a request to the respective image project, such as debian-cloud or windows-
        /// cloud.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual ListRequest List(string project)
        {
            return new ListRequest(service, project);
        }

        /// <summary>Retrieves the list of private images available to the specified project. Private images are images
        /// you create that belong to your project. This method does not get any images that belong to other projects,
        /// including publicly-available images, like Debian 8. If you want to get a list of publicly-available images,
        /// use this method to make a request to the respective image project, such as debian-cloud or windows-
        /// cloud.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.ImageList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/images"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Sets the labels on an image. To learn more about labels, read the Labeling Resources
        /// documentation.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="resource">Name of the resource for
        /// this request.</param>
        public virtual SetLabelsRequest SetLabels(Google.Apis.Compute.v1.Data.GlobalSetLabelsRequest body, string project, string resource)
        {
            return new SetLabelsRequest(service, body, project, resource);
        }

        /// <summary>Sets the labels on an image. To learn more about labels, read the Labeling Resources
        /// documentation.</summary>
        public class SetLabelsRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetLabels request.</summary>
            public SetLabelsRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.GlobalSetLabelsRequest body, string project, string resource)
                : base(service)
            {
                Project = project;
                Resource = resource;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the resource for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("resource", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Resource { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.GlobalSetLabelsRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setLabels"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/images/{resource}/setLabels"; }
            }

            /// <summary>Initializes SetLabels parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "resource", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resource",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9_]{0,61}[a-z0-9])?",
                    });
            }

        }
    }

    /// <summary>The "instanceGroupManagers" collection of methods.</summary>
    public class InstanceGroupManagersResource
    {
        private const string Resource = "instanceGroupManagers";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public InstanceGroupManagersResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Schedules a group action to remove the specified instances from the managed instance group.
        /// Abandoning an instance does not delete the instance, but it does remove the instance from any target pools
        /// that are applied by the managed instance group. This method reduces the targetSize of the managed instance
        /// group by the number of instances that you abandon. This operation is marked as DONE when the action is
        /// scheduled even if the instances have not yet been removed from the group. You must separately verify the
        /// status of the abandoning action with the listmanagedinstances method.
        ///
        /// If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds
        /// after the connection draining duration has elapsed before the VM instance is removed or deleted.
        ///
        /// You can specify a maximum of 1000 instances with this method per request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone where the
        /// managed instance group is located.</param>
        /// <param name="instanceGroupManager">The name of the managed
        /// instance group.</param>
        public virtual AbandonInstancesRequest AbandonInstances(Google.Apis.Compute.v1.Data.InstanceGroupManagersAbandonInstancesRequest body, string project, string zone, string instanceGroupManager)
        {
            return new AbandonInstancesRequest(service, body, project, zone, instanceGroupManager);
        }

        /// <summary>Schedules a group action to remove the specified instances from the managed instance group.
        /// Abandoning an instance does not delete the instance, but it does remove the instance from any target pools
        /// that are applied by the managed instance group. This method reduces the targetSize of the managed instance
        /// group by the number of instances that you abandon. This operation is marked as DONE when the action is
        /// scheduled even if the instances have not yet been removed from the group. You must separately verify the
        /// status of the abandoning action with the listmanagedinstances method.
        ///
        /// If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds
        /// after the connection draining duration has elapsed before the VM instance is removed or deleted.
        ///
        /// You can specify a maximum of 1000 instances with this method per request.</summary>
        public class AbandonInstancesRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new AbandonInstances request.</summary>
            public AbandonInstancesRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.InstanceGroupManagersAbandonInstancesRequest body, string project, string zone, string instanceGroupManager)
                : base(service)
            {
                Project = project;
                Zone = zone;
                InstanceGroupManager = instanceGroupManager;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone where the managed instance group is located.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>The name of the managed instance group.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceGroupManager", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceGroupManager { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.InstanceGroupManagersAbandonInstancesRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "abandonInstances"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/abandonInstances"; }
            }

            /// <summary>Initializes AbandonInstances parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "instanceGroupManager", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceGroupManager",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves the list of managed instance groups and groups them by zone.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual AggregatedListRequest AggregatedList(string project)
        {
            return new AggregatedListRequest(service, project);
        }

        /// <summary>Retrieves the list of managed instance groups and groups them by zone.</summary>
        public class AggregatedListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.InstanceGroupManagerAggregatedList>
        {
            /// <summary>Constructs a new AggregatedList request.</summary>
            public AggregatedListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "aggregatedList"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/aggregated/instanceGroupManagers"; }
            }

            /// <summary>Initializes AggregatedList parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Deletes the specified managed instance group and all of the instances in that group. Note that the
        /// instance group must not belong to a backend service. Read  Deleting an instance group for more
        /// information.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone where the
        /// managed instance group is located.</param>
        /// <param name="instanceGroupManager">The name of the managed
        /// instance group to delete.</param>
        public virtual DeleteRequest Delete(string project, string zone, string instanceGroupManager)
        {
            return new DeleteRequest(service, project, zone, instanceGroupManager);
        }

        /// <summary>Deletes the specified managed instance group and all of the instances in that group. Note that the
        /// instance group must not belong to a backend service. Read  Deleting an instance group for more
        /// information.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string zone, string instanceGroupManager)
                : base(service)
            {
                Project = project;
                Zone = zone;
                InstanceGroupManager = instanceGroupManager;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone where the managed instance group is located.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>The name of the managed instance group to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceGroupManager", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceGroupManager { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "instanceGroupManager", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceGroupManager",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Schedules a group action to delete the specified instances in the managed instance group. The
        /// instances are also removed from any target pools of which they were a member. This method reduces the
        /// targetSize of the managed instance group by the number of instances that you delete. This operation is
        /// marked as DONE when the action is scheduled even if the instances are still being deleted. You must
        /// separately verify the status of the deleting action with the listmanagedinstances method.
        ///
        /// If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds
        /// after the connection draining duration has elapsed before the VM instance is removed or deleted.
        ///
        /// You can specify a maximum of 1000 instances with this method per request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone where the
        /// managed instance group is located.</param>
        /// <param name="instanceGroupManager">The name of the managed
        /// instance group.</param>
        public virtual DeleteInstancesRequest DeleteInstances(Google.Apis.Compute.v1.Data.InstanceGroupManagersDeleteInstancesRequest body, string project, string zone, string instanceGroupManager)
        {
            return new DeleteInstancesRequest(service, body, project, zone, instanceGroupManager);
        }

        /// <summary>Schedules a group action to delete the specified instances in the managed instance group. The
        /// instances are also removed from any target pools of which they were a member. This method reduces the
        /// targetSize of the managed instance group by the number of instances that you delete. This operation is
        /// marked as DONE when the action is scheduled even if the instances are still being deleted. You must
        /// separately verify the status of the deleting action with the listmanagedinstances method.
        ///
        /// If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds
        /// after the connection draining duration has elapsed before the VM instance is removed or deleted.
        ///
        /// You can specify a maximum of 1000 instances with this method per request.</summary>
        public class DeleteInstancesRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new DeleteInstances request.</summary>
            public DeleteInstancesRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.InstanceGroupManagersDeleteInstancesRequest body, string project, string zone, string instanceGroupManager)
                : base(service)
            {
                Project = project;
                Zone = zone;
                InstanceGroupManager = instanceGroupManager;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone where the managed instance group is located.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>The name of the managed instance group.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceGroupManager", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceGroupManager { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.InstanceGroupManagersDeleteInstancesRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "deleteInstances"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/deleteInstances"; }
            }

            /// <summary>Initializes DeleteInstances parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "instanceGroupManager", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceGroupManager",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Returns all of the details about the specified managed instance group. Get a list of available
        /// managed instance groups by making a list() request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone where the
        /// managed instance group is located.</param>
        /// <param name="instanceGroupManager">The name of the managed
        /// instance group.</param>
        public virtual GetRequest Get(string project, string zone, string instanceGroupManager)
        {
            return new GetRequest(service, project, zone, instanceGroupManager);
        }

        /// <summary>Returns all of the details about the specified managed instance group. Get a list of available
        /// managed instance groups by making a list() request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.InstanceGroupManager>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string zone, string instanceGroupManager)
                : base(service)
            {
                Project = project;
                Zone = zone;
                InstanceGroupManager = instanceGroupManager;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone where the managed instance group is located.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>The name of the managed instance group.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceGroupManager", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceGroupManager { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "instanceGroupManager", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceGroupManager",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Creates a managed instance group using the information that you specify in the request. After the
        /// group is created, it schedules an action to create instances in the group using the specified instance
        /// template. This operation is marked as DONE when the group is created even if the instances in the group have
        /// not yet been created. You must separately verify the status of the individual instances with the
        /// listmanagedinstances method.
        ///
        /// A managed instance group can have up to 1000 VM instances per group. Please contact Cloud Support if you
        /// need an increase in this limit.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone where you
        /// want to create the managed instance group.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.InstanceGroupManager body, string project, string zone)
        {
            return new InsertRequest(service, body, project, zone);
        }

        /// <summary>Creates a managed instance group using the information that you specify in the request. After the
        /// group is created, it schedules an action to create instances in the group using the specified instance
        /// template. This operation is marked as DONE when the group is created even if the instances in the group have
        /// not yet been created. You must separately verify the status of the individual instances with the
        /// listmanagedinstances method.
        ///
        /// A managed instance group can have up to 1000 VM instances per group. Please contact Cloud Support if you
        /// need an increase in this limit.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.InstanceGroupManager body, string project, string zone)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone where you want to create the managed instance group.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.InstanceGroupManager Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instanceGroupManagers"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves a list of managed instance groups that are contained within the specified project and
        /// zone.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone where the
        /// managed instance group is located.</param>
        public virtual ListRequest List(string project, string zone)
        {
            return new ListRequest(service, project, zone);
        }

        /// <summary>Retrieves a list of managed instance groups that are contained within the specified project and
        /// zone.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.InstanceGroupManagerList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project, string zone)
                : base(service)
            {
                Project = project;
                Zone = zone;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone where the managed instance group is located.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instanceGroupManagers"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Lists all of the instances in the managed instance group. Each instance in the list has a
        /// currentAction, which indicates the action that the managed instance group is performing on the instance. For
        /// example, if the group is still creating an instance, the currentAction is CREATING. If a previous action
        /// failed, the list displays the errors for that failed action.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone where the
        /// managed instance group is located.</param>
        /// <param name="instanceGroupManager">The name of the managed
        /// instance group.</param>
        public virtual ListManagedInstancesRequest ListManagedInstances(string project, string zone, string instanceGroupManager)
        {
            return new ListManagedInstancesRequest(service, project, zone, instanceGroupManager);
        }

        /// <summary>Lists all of the instances in the managed instance group. Each instance in the list has a
        /// currentAction, which indicates the action that the managed instance group is performing on the instance. For
        /// example, if the group is still creating an instance, the currentAction is CREATING. If a previous action
        /// failed, the list displays the errors for that failed action.</summary>
        public class ListManagedInstancesRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.InstanceGroupManagersListManagedInstancesResponse>
        {
            /// <summary>Constructs a new ListManagedInstances request.</summary>
            public ListManagedInstancesRequest(Google.Apis.Services.IClientService service, string project, string zone, string instanceGroupManager)
                : base(service)
            {
                Project = project;
                Zone = zone;
                InstanceGroupManager = instanceGroupManager;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone where the managed instance group is located.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>The name of the managed instance group.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceGroupManager", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceGroupManager { get; private set; }


            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }


            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }


            [Google.Apis.Util.RequestParameterAttribute("order_by", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }


            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "listManagedInstances"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/listManagedInstances"; }
            }

            /// <summary>Initializes ListManagedInstances parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "instanceGroupManager", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceGroupManager",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "order_by", new Google.Apis.Discovery.Parameter
                    {
                        Name = "order_by",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Schedules a group action to recreate the specified instances in the managed instance group. The
        /// instances are deleted and recreated using the current instance template for the managed instance group. This
        /// operation is marked as DONE when the action is scheduled even if the instances have not yet been recreated.
        /// You must separately verify the status of the recreating action with the listmanagedinstances method.
        ///
        /// If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds
        /// after the connection draining duration has elapsed before the VM instance is removed or deleted.
        ///
        /// You can specify a maximum of 1000 instances with this method per request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone where the
        /// managed instance group is located.</param>
        /// <param name="instanceGroupManager">The name of the managed
        /// instance group.</param>
        public virtual RecreateInstancesRequest RecreateInstances(Google.Apis.Compute.v1.Data.InstanceGroupManagersRecreateInstancesRequest body, string project, string zone, string instanceGroupManager)
        {
            return new RecreateInstancesRequest(service, body, project, zone, instanceGroupManager);
        }

        /// <summary>Schedules a group action to recreate the specified instances in the managed instance group. The
        /// instances are deleted and recreated using the current instance template for the managed instance group. This
        /// operation is marked as DONE when the action is scheduled even if the instances have not yet been recreated.
        /// You must separately verify the status of the recreating action with the listmanagedinstances method.
        ///
        /// If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds
        /// after the connection draining duration has elapsed before the VM instance is removed or deleted.
        ///
        /// You can specify a maximum of 1000 instances with this method per request.</summary>
        public class RecreateInstancesRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new RecreateInstances request.</summary>
            public RecreateInstancesRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.InstanceGroupManagersRecreateInstancesRequest body, string project, string zone, string instanceGroupManager)
                : base(service)
            {
                Project = project;
                Zone = zone;
                InstanceGroupManager = instanceGroupManager;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone where the managed instance group is located.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>The name of the managed instance group.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceGroupManager", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceGroupManager { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.InstanceGroupManagersRecreateInstancesRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "recreateInstances"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/recreateInstances"; }
            }

            /// <summary>Initializes RecreateInstances parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "instanceGroupManager", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceGroupManager",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Resizes the managed instance group. If you increase the size, the group creates new instances using
        /// the current instance template. If you decrease the size, the group deletes instances. The resize operation
        /// is marked DONE when the resize actions are scheduled even if the group has not yet added or deleted any
        /// instances. You must separately verify the status of the creating or deleting actions with the
        /// listmanagedinstances method.
        ///
        /// If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds
        /// after the connection draining duration has elapsed before the VM instance is removed or deleted.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone where the
        /// managed instance group is located.</param>
        /// <param name="instanceGroupManager">The name of the managed
        /// instance group.</param>
        /// <param name="size">The number of running instances that the managed instance group
        /// should maintain at any given time. The group automatically adds or removes instances to maintain the number of
        /// instances specified by this parameter.</param>
        public virtual ResizeRequest Resize(string project, string zone, string instanceGroupManager, int size)
        {
            return new ResizeRequest(service, project, zone, instanceGroupManager, size);
        }

        /// <summary>Resizes the managed instance group. If you increase the size, the group creates new instances using
        /// the current instance template. If you decrease the size, the group deletes instances. The resize operation
        /// is marked DONE when the resize actions are scheduled even if the group has not yet added or deleted any
        /// instances. You must separately verify the status of the creating or deleting actions with the
        /// listmanagedinstances method.
        ///
        /// If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds
        /// after the connection draining duration has elapsed before the VM instance is removed or deleted.</summary>
        public class ResizeRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Resize request.</summary>
            public ResizeRequest(Google.Apis.Services.IClientService service, string project, string zone, string instanceGroupManager, int size)
                : base(service)
            {
                Project = project;
                Zone = zone;
                InstanceGroupManager = instanceGroupManager;
                Size = size;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone where the managed instance group is located.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>The name of the managed instance group.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceGroupManager", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceGroupManager { get; private set; }

            /// <summary>The number of running instances that the managed instance group should maintain at any given
            /// time. The group automatically adds or removes instances to maintain the number of instances specified by
            /// this parameter.</summary>
            [Google.Apis.Util.RequestParameterAttribute("size", Google.Apis.Util.RequestParameterType.Query)]
            public virtual int Size { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "resize"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/resize"; }
            }

            /// <summary>Initializes Resize parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "instanceGroupManager", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceGroupManager",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "size", new Google.Apis.Discovery.Parameter
                    {
                        Name = "size",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Specifies the instance template to use when creating new instances in this group. The templates for
        /// existing instances in the group do not change unless you recreate them.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone where the
        /// managed instance group is located.</param>
        /// <param name="instanceGroupManager">The name of the managed
        /// instance group.</param>
        public virtual SetInstanceTemplateRequest SetInstanceTemplate(Google.Apis.Compute.v1.Data.InstanceGroupManagersSetInstanceTemplateRequest body, string project, string zone, string instanceGroupManager)
        {
            return new SetInstanceTemplateRequest(service, body, project, zone, instanceGroupManager);
        }

        /// <summary>Specifies the instance template to use when creating new instances in this group. The templates for
        /// existing instances in the group do not change unless you recreate them.</summary>
        public class SetInstanceTemplateRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetInstanceTemplate request.</summary>
            public SetInstanceTemplateRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.InstanceGroupManagersSetInstanceTemplateRequest body, string project, string zone, string instanceGroupManager)
                : base(service)
            {
                Project = project;
                Zone = zone;
                InstanceGroupManager = instanceGroupManager;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone where the managed instance group is located.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>The name of the managed instance group.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceGroupManager", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceGroupManager { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.InstanceGroupManagersSetInstanceTemplateRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setInstanceTemplate"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/setInstanceTemplate"; }
            }

            /// <summary>Initializes SetInstanceTemplate parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "instanceGroupManager", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceGroupManager",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Modifies the target pools to which all instances in this managed instance group are assigned. The
        /// target pools automatically apply to all of the instances in the managed instance group. This operation is
        /// marked DONE when you make the request even if the instances have not yet been added to their target pools.
        /// The change might take some time to apply to all of the instances in the group depending on the size of the
        /// group.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone where the
        /// managed instance group is located.</param>
        /// <param name="instanceGroupManager">The name of the managed
        /// instance group.</param>
        public virtual SetTargetPoolsRequest SetTargetPools(Google.Apis.Compute.v1.Data.InstanceGroupManagersSetTargetPoolsRequest body, string project, string zone, string instanceGroupManager)
        {
            return new SetTargetPoolsRequest(service, body, project, zone, instanceGroupManager);
        }

        /// <summary>Modifies the target pools to which all instances in this managed instance group are assigned. The
        /// target pools automatically apply to all of the instances in the managed instance group. This operation is
        /// marked DONE when you make the request even if the instances have not yet been added to their target pools.
        /// The change might take some time to apply to all of the instances in the group depending on the size of the
        /// group.</summary>
        public class SetTargetPoolsRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetTargetPools request.</summary>
            public SetTargetPoolsRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.InstanceGroupManagersSetTargetPoolsRequest body, string project, string zone, string instanceGroupManager)
                : base(service)
            {
                Project = project;
                Zone = zone;
                InstanceGroupManager = instanceGroupManager;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone where the managed instance group is located.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>The name of the managed instance group.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceGroupManager", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceGroupManager { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.InstanceGroupManagersSetTargetPoolsRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setTargetPools"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/setTargetPools"; }
            }

            /// <summary>Initializes SetTargetPools parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "instanceGroupManager", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceGroupManager",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "instanceGroups" collection of methods.</summary>
    public class InstanceGroupsResource
    {
        private const string Resource = "instanceGroups";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public InstanceGroupsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Adds a list of instances to the specified instance group. All of the instances in the instance
        /// group must be in the same network/subnetwork. Read  Adding instances for more information.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone where the
        /// instance group is located.</param>
        /// <param name="instanceGroup">The name of the instance group where you are
        /// adding instances.</param>
        public virtual AddInstancesRequest AddInstances(Google.Apis.Compute.v1.Data.InstanceGroupsAddInstancesRequest body, string project, string zone, string instanceGroup)
        {
            return new AddInstancesRequest(service, body, project, zone, instanceGroup);
        }

        /// <summary>Adds a list of instances to the specified instance group. All of the instances in the instance
        /// group must be in the same network/subnetwork. Read  Adding instances for more information.</summary>
        public class AddInstancesRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new AddInstances request.</summary>
            public AddInstancesRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.InstanceGroupsAddInstancesRequest body, string project, string zone, string instanceGroup)
                : base(service)
            {
                Project = project;
                Zone = zone;
                InstanceGroup = instanceGroup;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone where the instance group is located.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>The name of the instance group where you are adding instances.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceGroup", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceGroup { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.InstanceGroupsAddInstancesRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "addInstances"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instanceGroups/{instanceGroup}/addInstances"; }
            }

            /// <summary>Initializes AddInstances parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "instanceGroup", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceGroup",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves the list of instance groups and sorts them by zone.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual AggregatedListRequest AggregatedList(string project)
        {
            return new AggregatedListRequest(service, project);
        }

        /// <summary>Retrieves the list of instance groups and sorts them by zone.</summary>
        public class AggregatedListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.InstanceGroupAggregatedList>
        {
            /// <summary>Constructs a new AggregatedList request.</summary>
            public AggregatedListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "aggregatedList"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/aggregated/instanceGroups"; }
            }

            /// <summary>Initializes AggregatedList parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Deletes the specified instance group. The instances in the group are not deleted. Note that
        /// instance group must not belong to a backend service. Read  Deleting an instance group for more
        /// information.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone where the
        /// instance group is located.</param>
        /// <param name="instanceGroup">The name of the instance group to
        /// delete.</param>
        public virtual DeleteRequest Delete(string project, string zone, string instanceGroup)
        {
            return new DeleteRequest(service, project, zone, instanceGroup);
        }

        /// <summary>Deletes the specified instance group. The instances in the group are not deleted. Note that
        /// instance group must not belong to a backend service. Read  Deleting an instance group for more
        /// information.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string zone, string instanceGroup)
                : base(service)
            {
                Project = project;
                Zone = zone;
                InstanceGroup = instanceGroup;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone where the instance group is located.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>The name of the instance group to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceGroup", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceGroup { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instanceGroups/{instanceGroup}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "instanceGroup", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceGroup",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Returns the specified instance group. Get a list of available instance groups by making a list()
        /// request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone where the
        /// instance group is located.</param>
        /// <param name="instanceGroup">The name of the instance group.</param>
        public virtual GetRequest Get(string project, string zone, string instanceGroup)
        {
            return new GetRequest(service, project, zone, instanceGroup);
        }

        /// <summary>Returns the specified instance group. Get a list of available instance groups by making a list()
        /// request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.InstanceGroup>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string zone, string instanceGroup)
                : base(service)
            {
                Project = project;
                Zone = zone;
                InstanceGroup = instanceGroup;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone where the instance group is located.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>The name of the instance group.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceGroup", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceGroup { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instanceGroups/{instanceGroup}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "instanceGroup", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceGroup",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Creates an instance group in the specified project using the parameters that are included in the
        /// request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone where you
        /// want to create the instance group.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.InstanceGroup body, string project, string zone)
        {
            return new InsertRequest(service, body, project, zone);
        }

        /// <summary>Creates an instance group in the specified project using the parameters that are included in the
        /// request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.InstanceGroup body, string project, string zone)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone where you want to create the instance group.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.InstanceGroup Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instanceGroups"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves the list of instance groups that are located in the specified project and zone.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone where the
        /// instance group is located.</param>
        public virtual ListRequest List(string project, string zone)
        {
            return new ListRequest(service, project, zone);
        }

        /// <summary>Retrieves the list of instance groups that are located in the specified project and zone.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.InstanceGroupList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project, string zone)
                : base(service)
            {
                Project = project;
                Zone = zone;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone where the instance group is located.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instanceGroups"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Lists the instances in the specified instance group.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone where the
        /// instance group is located.</param>
        /// <param name="instanceGroup">The name of the instance group from which you
        /// want to generate a list of included instances.</param>
        public virtual ListInstancesRequest ListInstances(Google.Apis.Compute.v1.Data.InstanceGroupsListInstancesRequest body, string project, string zone, string instanceGroup)
        {
            return new ListInstancesRequest(service, body, project, zone, instanceGroup);
        }

        /// <summary>Lists the instances in the specified instance group.</summary>
        public class ListInstancesRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.InstanceGroupsListInstances>
        {
            /// <summary>Constructs a new ListInstances request.</summary>
            public ListInstancesRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.InstanceGroupsListInstancesRequest body, string project, string zone, string instanceGroup)
                : base(service)
            {
                Project = project;
                Zone = zone;
                InstanceGroup = instanceGroup;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone where the instance group is located.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>The name of the instance group from which you want to generate a list of included
            /// instances.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceGroup", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceGroup { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.InstanceGroupsListInstancesRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "listInstances"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instanceGroups/{instanceGroup}/listInstances"; }
            }

            /// <summary>Initializes ListInstances parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "instanceGroup", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceGroup",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Removes one or more instances from the specified instance group, but does not delete those
        /// instances.
        ///
        /// If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds
        /// after the connection draining duration before the VM instance is removed or deleted.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone where the
        /// instance group is located.</param>
        /// <param name="instanceGroup">The name of the instance group where the
        /// specified instances will be removed.</param>
        public virtual RemoveInstancesRequest RemoveInstances(Google.Apis.Compute.v1.Data.InstanceGroupsRemoveInstancesRequest body, string project, string zone, string instanceGroup)
        {
            return new RemoveInstancesRequest(service, body, project, zone, instanceGroup);
        }

        /// <summary>Removes one or more instances from the specified instance group, but does not delete those
        /// instances.
        ///
        /// If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds
        /// after the connection draining duration before the VM instance is removed or deleted.</summary>
        public class RemoveInstancesRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new RemoveInstances request.</summary>
            public RemoveInstancesRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.InstanceGroupsRemoveInstancesRequest body, string project, string zone, string instanceGroup)
                : base(service)
            {
                Project = project;
                Zone = zone;
                InstanceGroup = instanceGroup;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone where the instance group is located.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>The name of the instance group where the specified instances will be removed.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceGroup", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceGroup { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.InstanceGroupsRemoveInstancesRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "removeInstances"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instanceGroups/{instanceGroup}/removeInstances"; }
            }

            /// <summary>Initializes RemoveInstances parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "instanceGroup", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceGroup",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Sets the named ports for the specified instance group.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone where the
        /// instance group is located.</param>
        /// <param name="instanceGroup">The name of the instance group where the
        /// named ports are updated.</param>
        public virtual SetNamedPortsRequest SetNamedPorts(Google.Apis.Compute.v1.Data.InstanceGroupsSetNamedPortsRequest body, string project, string zone, string instanceGroup)
        {
            return new SetNamedPortsRequest(service, body, project, zone, instanceGroup);
        }

        /// <summary>Sets the named ports for the specified instance group.</summary>
        public class SetNamedPortsRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetNamedPorts request.</summary>
            public SetNamedPortsRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.InstanceGroupsSetNamedPortsRequest body, string project, string zone, string instanceGroup)
                : base(service)
            {
                Project = project;
                Zone = zone;
                InstanceGroup = instanceGroup;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone where the instance group is located.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>The name of the instance group where the named ports are updated.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceGroup", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceGroup { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.InstanceGroupsSetNamedPortsRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setNamedPorts"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instanceGroups/{instanceGroup}/setNamedPorts"; }
            }

            /// <summary>Initializes SetNamedPorts parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "instanceGroup", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceGroup",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "instanceTemplates" collection of methods.</summary>
    public class InstanceTemplatesResource
    {
        private const string Resource = "instanceTemplates";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public InstanceTemplatesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes the specified instance template. If you delete an instance template that is being
        /// referenced from another instance group, the instance group will not be able to create or recreate virtual
        /// machine instances. Deleting an instance template is permanent and cannot be undone.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="instanceTemplate">The name of the
        /// instance template to delete.</param>
        public virtual DeleteRequest Delete(string project, string instanceTemplate)
        {
            return new DeleteRequest(service, project, instanceTemplate);
        }

        /// <summary>Deletes the specified instance template. If you delete an instance template that is being
        /// referenced from another instance group, the instance group will not be able to create or recreate virtual
        /// machine instances. Deleting an instance template is permanent and cannot be undone.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string instanceTemplate)
                : base(service)
            {
                Project = project;
                InstanceTemplate = instanceTemplate;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the instance template to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceTemplate", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceTemplate { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/instanceTemplates/{instanceTemplate}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "instanceTemplate", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceTemplate",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified instance template. Get a list of available instance templates by making a
        /// list() request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="instanceTemplate">The name of the
        /// instance template.</param>
        public virtual GetRequest Get(string project, string instanceTemplate)
        {
            return new GetRequest(service, project, instanceTemplate);
        }

        /// <summary>Returns the specified instance template. Get a list of available instance templates by making a
        /// list() request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.InstanceTemplate>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string instanceTemplate)
                : base(service)
            {
                Project = project;
                InstanceTemplate = instanceTemplate;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the instance template.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceTemplate", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceTemplate { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/instanceTemplates/{instanceTemplate}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "instanceTemplate", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceTemplate",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates an instance template in the specified project using the data that is included in the
        /// request. If you are creating a new template to update an existing instance group, your new instance template
        /// must use the same network or, if applicable, the same subnetwork as the original template.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.InstanceTemplate body, string project)
        {
            return new InsertRequest(service, body, project);
        }

        /// <summary>Creates an instance template in the specified project using the data that is included in the
        /// request. If you are creating a new template to update an existing instance group, your new instance template
        /// must use the same network or, if applicable, the same subnetwork as the original template.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.InstanceTemplate body, string project)
                : base(service)
            {
                Project = project;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.InstanceTemplate Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/instanceTemplates"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }

        /// <summary>Retrieves a list of instance templates that are contained within the specified project and
        /// zone.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual ListRequest List(string project)
        {
            return new ListRequest(service, project);
        }

        /// <summary>Retrieves a list of instance templates that are contained within the specified project and
        /// zone.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.InstanceTemplateList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/instanceTemplates"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "instances" collection of methods.</summary>
    public class InstancesResource
    {
        private const string Resource = "instances";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public InstancesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Adds an access config to an instance's network interface.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        /// <param name="instance">The instance name for this request.</param>
        /// <param
        /// name="networkInterface">The name of the network interface to add to this instance.</param>
        public virtual AddAccessConfigRequest AddAccessConfig(Google.Apis.Compute.v1.Data.AccessConfig body, string project, string zone, string instance, string networkInterface)
        {
            return new AddAccessConfigRequest(service, body, project, zone, instance, networkInterface);
        }

        /// <summary>Adds an access config to an instance's network interface.</summary>
        public class AddAccessConfigRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new AddAccessConfig request.</summary>
            public AddAccessConfigRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.AccessConfig body, string project, string zone, string instance, string networkInterface)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Instance = instance;
                NetworkInterface = networkInterface;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>The instance name for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instance", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Instance { get; private set; }

            /// <summary>The name of the network interface to add to this instance.</summary>
            [Google.Apis.Util.RequestParameterAttribute("networkInterface", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string NetworkInterface { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.AccessConfig Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "addAccessConfig"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instances/{instance}/addAccessConfig"; }
            }

            /// <summary>Initializes AddAccessConfig parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "instance", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instance",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "networkInterface", new Google.Apis.Discovery.Parameter
                    {
                        Name = "networkInterface",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves aggregated list of instances.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual AggregatedListRequest AggregatedList(string project)
        {
            return new AggregatedListRequest(service, project);
        }

        /// <summary>Retrieves aggregated list of instances.</summary>
        public class AggregatedListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.InstanceAggregatedList>
        {
            /// <summary>Constructs a new AggregatedList request.</summary>
            public AggregatedListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "aggregatedList"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/aggregated/instances"; }
            }

            /// <summary>Initializes AggregatedList parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Attaches an existing Disk resource to an instance. You must first create the disk before you can
        /// attach it. It is not possible to create and attach a disk at the same time. For more information, read
        /// Adding a persistent disk to your instance.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        /// <param name="instance">The instance name for this request.</param>
        public virtual AttachDiskRequest AttachDisk(Google.Apis.Compute.v1.Data.AttachedDisk body, string project, string zone, string instance)
        {
            return new AttachDiskRequest(service, body, project, zone, instance);
        }

        /// <summary>Attaches an existing Disk resource to an instance. You must first create the disk before you can
        /// attach it. It is not possible to create and attach a disk at the same time. For more information, read
        /// Adding a persistent disk to your instance.</summary>
        public class AttachDiskRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new AttachDisk request.</summary>
            public AttachDiskRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.AttachedDisk body, string project, string zone, string instance)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Instance = instance;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>The instance name for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instance", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Instance { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.AttachedDisk Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "attachDisk"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instances/{instance}/attachDisk"; }
            }

            /// <summary>Initializes AttachDisk parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "instance", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instance",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Deletes the specified Instance resource. For more information, see Stopping or Deleting an
        /// Instance.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        /// <param name="instance">Name of the instance resource to delete.</param>
        public virtual DeleteRequest Delete(string project, string zone, string instance)
        {
            return new DeleteRequest(service, project, zone, instance);
        }

        /// <summary>Deletes the specified Instance resource. For more information, see Stopping or Deleting an
        /// Instance.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string zone, string instance)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Instance = instance;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Name of the instance resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instance", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Instance { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instances/{instance}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "instance", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instance",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Deletes an access config from an instance's network interface.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        /// <param name="instance">The instance name for this request.</param>
        /// <param
        /// name="accessConfig">The name of the access config to delete.</param>
        /// <param name="networkInterface">The name
        /// of the network interface.</param>
        public virtual DeleteAccessConfigRequest DeleteAccessConfig(string project, string zone, string instance, string accessConfig, string networkInterface)
        {
            return new DeleteAccessConfigRequest(service, project, zone, instance, accessConfig, networkInterface);
        }

        /// <summary>Deletes an access config from an instance's network interface.</summary>
        public class DeleteAccessConfigRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new DeleteAccessConfig request.</summary>
            public DeleteAccessConfigRequest(Google.Apis.Services.IClientService service, string project, string zone, string instance, string accessConfig, string networkInterface)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Instance = instance;
                AccessConfig = accessConfig;
                NetworkInterface = networkInterface;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>The instance name for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instance", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Instance { get; private set; }

            /// <summary>The name of the access config to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("accessConfig", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string AccessConfig { get; private set; }

            /// <summary>The name of the network interface.</summary>
            [Google.Apis.Util.RequestParameterAttribute("networkInterface", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string NetworkInterface { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "deleteAccessConfig"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instances/{instance}/deleteAccessConfig"; }
            }

            /// <summary>Initializes DeleteAccessConfig parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "instance", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instance",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "accessConfig", new Google.Apis.Discovery.Parameter
                    {
                        Name = "accessConfig",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "networkInterface", new Google.Apis.Discovery.Parameter
                    {
                        Name = "networkInterface",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Detaches a disk from an instance.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        /// <param name="instance">Instance name.</param>
        /// <param name="deviceName">Disk device
        /// name to detach.</param>
        public virtual DetachDiskRequest DetachDisk(string project, string zone, string instance, string deviceName)
        {
            return new DetachDiskRequest(service, project, zone, instance, deviceName);
        }

        /// <summary>Detaches a disk from an instance.</summary>
        public class DetachDiskRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new DetachDisk request.</summary>
            public DetachDiskRequest(Google.Apis.Services.IClientService service, string project, string zone, string instance, string deviceName)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Instance = instance;
                DeviceName = deviceName;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Instance name.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instance", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Instance { get; private set; }

            /// <summary>Disk device name to detach.</summary>
            [Google.Apis.Util.RequestParameterAttribute("deviceName", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string DeviceName { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "detachDisk"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instances/{instance}/detachDisk"; }
            }

            /// <summary>Initializes DetachDisk parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "instance", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instance",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "deviceName", new Google.Apis.Discovery.Parameter
                    {
                        Name = "deviceName",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Returns the specified Instance resource. Get a list of available instances by making a list()
        /// request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        /// <param name="instance">Name of the instance resource to return.</param>
        public virtual GetRequest Get(string project, string zone, string instance)
        {
            return new GetRequest(service, project, zone, instance);
        }

        /// <summary>Returns the specified Instance resource. Get a list of available instances by making a list()
        /// request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Instance>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string zone, string instance)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Instance = instance;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Name of the instance resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instance", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Instance { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instances/{instance}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "instance", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instance",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified instance's serial port output.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        /// <param name="instance">Name of the instance scoping this request.</param>
        public virtual GetSerialPortOutputRequest GetSerialPortOutput(string project, string zone, string instance)
        {
            return new GetSerialPortOutputRequest(service, project, zone, instance);
        }

        /// <summary>Returns the specified instance's serial port output.</summary>
        public class GetSerialPortOutputRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.SerialPortOutput>
        {
            /// <summary>Constructs a new GetSerialPortOutput request.</summary>
            public GetSerialPortOutputRequest(Google.Apis.Services.IClientService service, string project, string zone, string instance)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Instance = instance;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Name of the instance scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instance", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Instance { get; private set; }

            /// <summary>Specifies which COM or serial port to retrieve data from.</summary>
            /// [default: 1]
            /// [minimum: 1]
            /// [maximum: 4]
            [Google.Apis.Util.RequestParameterAttribute("port", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> Port { get; set; }

            /// <summary>Returns output starting from a specific byte position. Use this to page through output when the
            /// output is too large to return in a single request. For the initial request, leave this field
            /// unspecified. For subsequent calls, this field should be set to the next value returned in the previous
            /// call.</summary>
            [Google.Apis.Util.RequestParameterAttribute("start", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> Start { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "getSerialPortOutput"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instances/{instance}/serialPort"; }
            }

            /// <summary>Initializes GetSerialPortOutput parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "instance", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instance",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "port", new Google.Apis.Discovery.Parameter
                    {
                        Name = "port",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "1",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "start", new Google.Apis.Discovery.Parameter
                    {
                        Name = "start",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Creates an instance resource in the specified project using the data included in the
        /// request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.Instance body, string project, string zone)
        {
            return new InsertRequest(service, body, project, zone);
        }

        /// <summary>Creates an instance resource in the specified project using the data included in the
        /// request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.Instance body, string project, string zone)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.Instance Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instances"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Retrieves the list of instances contained within the specified zone.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        public virtual ListRequest List(string project, string zone)
        {
            return new ListRequest(service, project, zone);
        }

        /// <summary>Retrieves the list of instances contained within the specified zone.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.InstanceList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project, string zone)
                : base(service)
            {
                Project = project;
                Zone = zone;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instances"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Performs a reset on the instance. For more information, see Resetting an instance.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        /// <param name="instance">Name of the instance scoping this request.</param>
        public virtual ResetRequest Reset(string project, string zone, string instance)
        {
            return new ResetRequest(service, project, zone, instance);
        }

        /// <summary>Performs a reset on the instance. For more information, see Resetting an instance.</summary>
        public class ResetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Reset request.</summary>
            public ResetRequest(Google.Apis.Services.IClientService service, string project, string zone, string instance)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Instance = instance;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Name of the instance scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instance", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Instance { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "reset"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instances/{instance}/reset"; }
            }

            /// <summary>Initializes Reset parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "instance", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instance",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Sets the auto-delete flag for a disk attached to an instance.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        /// <param name="instance">The instance name.</param>
        /// <param name="autoDelete">Whether
        /// to auto-delete the disk when the instance is deleted.</param>
        /// <param name="deviceName">The device name of
        /// the disk to modify.</param>
        public virtual SetDiskAutoDeleteRequest SetDiskAutoDelete(string project, string zone, string instance, bool autoDelete, string deviceName)
        {
            return new SetDiskAutoDeleteRequest(service, project, zone, instance, autoDelete, deviceName);
        }

        /// <summary>Sets the auto-delete flag for a disk attached to an instance.</summary>
        public class SetDiskAutoDeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetDiskAutoDelete request.</summary>
            public SetDiskAutoDeleteRequest(Google.Apis.Services.IClientService service, string project, string zone, string instance, bool autoDelete, string deviceName)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Instance = instance;
                AutoDelete = autoDelete;
                DeviceName = deviceName;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>The instance name.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instance", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Instance { get; private set; }

            /// <summary>Whether to auto-delete the disk when the instance is deleted.</summary>
            [Google.Apis.Util.RequestParameterAttribute("autoDelete", Google.Apis.Util.RequestParameterType.Query)]
            public virtual bool AutoDelete { get; private set; }

            /// <summary>The device name of the disk to modify.</summary>
            [Google.Apis.Util.RequestParameterAttribute("deviceName", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string DeviceName { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setDiskAutoDelete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instances/{instance}/setDiskAutoDelete"; }
            }

            /// <summary>Initializes SetDiskAutoDelete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "instance", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instance",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "autoDelete", new Google.Apis.Discovery.Parameter
                    {
                        Name = "autoDelete",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "deviceName", new Google.Apis.Discovery.Parameter
                    {
                        Name = "deviceName",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = @"\w[\w.-]{0,254}",
                    });
            }

        }

        /// <summary>Sets labels on an instance. To learn more about labels, read the Labeling Resources
        /// documentation.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        /// <param name="instance">Name of the instance scoping this request.</param>
        public virtual SetLabelsRequest SetLabels(Google.Apis.Compute.v1.Data.InstancesSetLabelsRequest body, string project, string zone, string instance)
        {
            return new SetLabelsRequest(service, body, project, zone, instance);
        }

        /// <summary>Sets labels on an instance. To learn more about labels, read the Labeling Resources
        /// documentation.</summary>
        public class SetLabelsRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetLabels request.</summary>
            public SetLabelsRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.InstancesSetLabelsRequest body, string project, string zone, string instance)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Instance = instance;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Name of the instance scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instance", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Instance { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.InstancesSetLabelsRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setLabels"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instances/{instance}/setLabels"; }
            }

            /// <summary>Initializes SetLabels parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "instance", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instance",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Changes the machine type for a stopped instance to the machine type specified in the
        /// request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        /// <param name="instance">Name of the instance scoping this request.</param>
        public virtual SetMachineTypeRequest SetMachineType(Google.Apis.Compute.v1.Data.InstancesSetMachineTypeRequest body, string project, string zone, string instance)
        {
            return new SetMachineTypeRequest(service, body, project, zone, instance);
        }

        /// <summary>Changes the machine type for a stopped instance to the machine type specified in the
        /// request.</summary>
        public class SetMachineTypeRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetMachineType request.</summary>
            public SetMachineTypeRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.InstancesSetMachineTypeRequest body, string project, string zone, string instance)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Instance = instance;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Name of the instance scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instance", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Instance { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.InstancesSetMachineTypeRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setMachineType"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instances/{instance}/setMachineType"; }
            }

            /// <summary>Initializes SetMachineType parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "instance", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instance",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Sets metadata for the specified instance to the data included in the request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        /// <param name="instance">Name of the instance scoping this request.</param>
        public virtual SetMetadataRequest SetMetadata(Google.Apis.Compute.v1.Data.Metadata body, string project, string zone, string instance)
        {
            return new SetMetadataRequest(service, body, project, zone, instance);
        }

        /// <summary>Sets metadata for the specified instance to the data included in the request.</summary>
        public class SetMetadataRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetMetadata request.</summary>
            public SetMetadataRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.Metadata body, string project, string zone, string instance)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Instance = instance;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Name of the instance scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instance", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Instance { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.Metadata Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setMetadata"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instances/{instance}/setMetadata"; }
            }

            /// <summary>Initializes SetMetadata parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "instance", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instance",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Sets an instance's scheduling options.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        /// <param name="instance">Instance name.</param>
        public virtual SetSchedulingRequest SetScheduling(Google.Apis.Compute.v1.Data.Scheduling body, string project, string zone, string instance)
        {
            return new SetSchedulingRequest(service, body, project, zone, instance);
        }

        /// <summary>Sets an instance's scheduling options.</summary>
        public class SetSchedulingRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetScheduling request.</summary>
            public SetSchedulingRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.Scheduling body, string project, string zone, string instance)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Instance = instance;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Instance name.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instance", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Instance { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.Scheduling Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setScheduling"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instances/{instance}/setScheduling"; }
            }

            /// <summary>Initializes SetScheduling parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "instance", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instance",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Sets the service account on the instance. For more information, read Changing the service account
        /// and access scopes for an instance.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        /// <param name="instance">Name of the instance resource to start.</param>
        public virtual SetServiceAccountRequest SetServiceAccount(Google.Apis.Compute.v1.Data.InstancesSetServiceAccountRequest body, string project, string zone, string instance)
        {
            return new SetServiceAccountRequest(service, body, project, zone, instance);
        }

        /// <summary>Sets the service account on the instance. For more information, read Changing the service account
        /// and access scopes for an instance.</summary>
        public class SetServiceAccountRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetServiceAccount request.</summary>
            public SetServiceAccountRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.InstancesSetServiceAccountRequest body, string project, string zone, string instance)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Instance = instance;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Name of the instance resource to start.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instance", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Instance { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.InstancesSetServiceAccountRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setServiceAccount"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instances/{instance}/setServiceAccount"; }
            }

            /// <summary>Initializes SetServiceAccount parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "instance", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instance",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Sets tags for the specified instance to the data included in the request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        /// <param name="instance">Name of the instance scoping this request.</param>
        public virtual SetTagsRequest SetTags(Google.Apis.Compute.v1.Data.Tags body, string project, string zone, string instance)
        {
            return new SetTagsRequest(service, body, project, zone, instance);
        }

        /// <summary>Sets tags for the specified instance to the data included in the request.</summary>
        public class SetTagsRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetTags request.</summary>
            public SetTagsRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.Tags body, string project, string zone, string instance)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Instance = instance;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Name of the instance scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instance", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Instance { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.Tags Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setTags"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instances/{instance}/setTags"; }
            }

            /// <summary>Initializes SetTags parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "instance", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instance",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Starts an instance that was stopped using the using the instances().stop method. For more
        /// information, see Restart an instance.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        /// <param name="instance">Name of the instance resource to start.</param>
        public virtual StartRequest Start(string project, string zone, string instance)
        {
            return new StartRequest(service, project, zone, instance);
        }

        /// <summary>Starts an instance that was stopped using the using the instances().stop method. For more
        /// information, see Restart an instance.</summary>
        public class StartRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Start request.</summary>
            public StartRequest(Google.Apis.Services.IClientService service, string project, string zone, string instance)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Instance = instance;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Name of the instance resource to start.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instance", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Instance { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "start"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instances/{instance}/start"; }
            }

            /// <summary>Initializes Start parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "instance", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instance",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Starts an instance that was stopped using the using the instances().stop method. For more
        /// information, see Restart an instance.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        /// <param name="instance">Name of the instance resource to start.</param>
        public virtual StartWithEncryptionKeyRequest StartWithEncryptionKey(Google.Apis.Compute.v1.Data.InstancesStartWithEncryptionKeyRequest body, string project, string zone, string instance)
        {
            return new StartWithEncryptionKeyRequest(service, body, project, zone, instance);
        }

        /// <summary>Starts an instance that was stopped using the using the instances().stop method. For more
        /// information, see Restart an instance.</summary>
        public class StartWithEncryptionKeyRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new StartWithEncryptionKey request.</summary>
            public StartWithEncryptionKeyRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.InstancesStartWithEncryptionKeyRequest body, string project, string zone, string instance)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Instance = instance;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Name of the instance resource to start.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instance", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Instance { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.InstancesStartWithEncryptionKeyRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "startWithEncryptionKey"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instances/{instance}/startWithEncryptionKey"; }
            }

            /// <summary>Initializes StartWithEncryptionKey parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "instance", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instance",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Stops a running instance, shutting it down cleanly, and allows you to restart the instance at a
        /// later time. Stopped instances do not incur per-minute, virtual machine usage charges while they are stopped,
        /// but any resources that the virtual machine is using, such as persistent disks and static IP addresses, will
        /// continue to be charged until they are deleted. For more information, see Stopping an instance.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        /// <param name="instance">Name of the instance resource to stop.</param>
        public virtual StopRequest Stop(string project, string zone, string instance)
        {
            return new StopRequest(service, project, zone, instance);
        }

        /// <summary>Stops a running instance, shutting it down cleanly, and allows you to restart the instance at a
        /// later time. Stopped instances do not incur per-minute, virtual machine usage charges while they are stopped,
        /// but any resources that the virtual machine is using, such as persistent disks and static IP addresses, will
        /// continue to be charged until they are deleted. For more information, see Stopping an instance.</summary>
        public class StopRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Stop request.</summary>
            public StopRequest(Google.Apis.Services.IClientService service, string project, string zone, string instance)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Instance = instance;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Name of the instance resource to stop.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instance", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Instance { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "stop"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/instances/{instance}/stop"; }
            }

            /// <summary>Initializes Stop parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "instance", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instance",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }
    }

    /// <summary>The "licenses" collection of methods.</summary>
    public class LicensesResource
    {
        private const string Resource = "licenses";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public LicensesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Returns the specified License resource. Get a list of available licenses by making a list()
        /// request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="license">Name of the License
        /// resource to return.</param>
        public virtual GetRequest Get(string project, string license)
        {
            return new GetRequest(service, project, license);
        }

        /// <summary>Returns the specified License resource. Get a list of available licenses by making a list()
        /// request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.License>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string license)
                : base(service)
            {
                Project = project;
                License = license;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the License resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("license", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string License { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/licenses/{license}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "license", new Google.Apis.Discovery.Parameter
                    {
                        Name = "license",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }
    }

    /// <summary>The "machineTypes" collection of methods.</summary>
    public class MachineTypesResource
    {
        private const string Resource = "machineTypes";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public MachineTypesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Retrieves an aggregated list of machine types.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual AggregatedListRequest AggregatedList(string project)
        {
            return new AggregatedListRequest(service, project);
        }

        /// <summary>Retrieves an aggregated list of machine types.</summary>
        public class AggregatedListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.MachineTypeAggregatedList>
        {
            /// <summary>Constructs a new AggregatedList request.</summary>
            public AggregatedListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "aggregatedList"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/aggregated/machineTypes"; }
            }

            /// <summary>Initializes AggregatedList parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Returns the specified machine type. Get a list of available machine types by making a list()
        /// request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        /// <param name="machineType">Name of the machine type to return.</param>
        public virtual GetRequest Get(string project, string zone, string machineType)
        {
            return new GetRequest(service, project, zone, machineType);
        }

        /// <summary>Returns the specified machine type. Get a list of available machine types by making a list()
        /// request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.MachineType>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string zone, string machineType)
                : base(service)
            {
                Project = project;
                Zone = zone;
                MachineType = machineType;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Name of the machine type to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("machineType", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string MachineType { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/machineTypes/{machineType}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "machineType", new Google.Apis.Discovery.Parameter
                    {
                        Name = "machineType",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Retrieves a list of machine types available to the specified project.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">The name of the zone for this
        /// request.</param>
        public virtual ListRequest List(string project, string zone)
        {
            return new ListRequest(service, project, zone);
        }

        /// <summary>Retrieves a list of machine types available to the specified project.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.MachineTypeList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project, string zone)
                : base(service)
            {
                Project = project;
                Zone = zone;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>The name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/machineTypes"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "networks" collection of methods.</summary>
    public class NetworksResource
    {
        private const string Resource = "networks";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public NetworksResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Adds a peering to the specified network.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="network">Name of the network
        /// resource to add peering to.</param>
        public virtual AddPeeringRequest AddPeering(Google.Apis.Compute.v1.Data.NetworksAddPeeringRequest body, string project, string network)
        {
            return new AddPeeringRequest(service, body, project, network);
        }

        /// <summary>Adds a peering to the specified network.</summary>
        public class AddPeeringRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new AddPeering request.</summary>
            public AddPeeringRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.NetworksAddPeeringRequest body, string project, string network)
                : base(service)
            {
                Project = project;
                Network = network;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the network resource to add peering to.</summary>
            [Google.Apis.Util.RequestParameterAttribute("network", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Network { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.NetworksAddPeeringRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "addPeering"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/networks/{network}/addPeering"; }
            }

            /// <summary>Initializes AddPeering parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "network", new Google.Apis.Discovery.Parameter
                    {
                        Name = "network",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Deletes the specified network.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="network">Name of the network to
        /// delete.</param>
        public virtual DeleteRequest Delete(string project, string network)
        {
            return new DeleteRequest(service, project, network);
        }

        /// <summary>Deletes the specified network.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string network)
                : base(service)
            {
                Project = project;
                Network = network;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the network to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("network", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Network { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/networks/{network}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "network", new Google.Apis.Discovery.Parameter
                    {
                        Name = "network",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified network. Get a list of available networks by making a list()
        /// request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="network">Name of the network to
        /// return.</param>
        public virtual GetRequest Get(string project, string network)
        {
            return new GetRequest(service, project, network);
        }

        /// <summary>Returns the specified network. Get a list of available networks by making a list()
        /// request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Network>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string network)
                : base(service)
            {
                Project = project;
                Network = network;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the network to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("network", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Network { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/networks/{network}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "network", new Google.Apis.Discovery.Parameter
                    {
                        Name = "network",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates a network in the specified project using the data included in the request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.Network body, string project)
        {
            return new InsertRequest(service, body, project);
        }

        /// <summary>Creates a network in the specified project using the data included in the request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.Network body, string project)
                : base(service)
            {
                Project = project;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.Network Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/networks"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }

        /// <summary>Retrieves the list of networks available to the specified project.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual ListRequest List(string project)
        {
            return new ListRequest(service, project);
        }

        /// <summary>Retrieves the list of networks available to the specified project.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.NetworkList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/networks"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Removes a peering from the specified network.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="network">Name of the network
        /// resource to remove peering from.</param>
        public virtual RemovePeeringRequest RemovePeering(Google.Apis.Compute.v1.Data.NetworksRemovePeeringRequest body, string project, string network)
        {
            return new RemovePeeringRequest(service, body, project, network);
        }

        /// <summary>Removes a peering from the specified network.</summary>
        public class RemovePeeringRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new RemovePeering request.</summary>
            public RemovePeeringRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.NetworksRemovePeeringRequest body, string project, string network)
                : base(service)
            {
                Project = project;
                Network = network;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the network resource to remove peering from.</summary>
            [Google.Apis.Util.RequestParameterAttribute("network", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Network { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.NetworksRemovePeeringRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "removePeering"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/networks/{network}/removePeering"; }
            }

            /// <summary>Initializes RemovePeering parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "network", new Google.Apis.Discovery.Parameter
                    {
                        Name = "network",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Switches the network mode from auto subnet mode to custom subnet mode.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="network">Name of the network to be
        /// updated.</param>
        public virtual SwitchToCustomModeRequest SwitchToCustomMode(string project, string network)
        {
            return new SwitchToCustomModeRequest(service, project, network);
        }

        /// <summary>Switches the network mode from auto subnet mode to custom subnet mode.</summary>
        public class SwitchToCustomModeRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SwitchToCustomMode request.</summary>
            public SwitchToCustomModeRequest(Google.Apis.Services.IClientService service, string project, string network)
                : base(service)
            {
                Project = project;
                Network = network;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the network to be updated.</summary>
            [Google.Apis.Util.RequestParameterAttribute("network", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Network { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "switchToCustomMode"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/networks/{network}/switchToCustomMode"; }
            }

            /// <summary>Initializes SwitchToCustomMode parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "network", new Google.Apis.Discovery.Parameter
                    {
                        Name = "network",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }
    }

    /// <summary>The "projects" collection of methods.</summary>
    public class ProjectsResource
    {
        private const string Resource = "projects";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ProjectsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Disable this project as an XPN host project.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual DisableXpnHostRequest DisableXpnHost(string project)
        {
            return new DisableXpnHostRequest(service, project);
        }

        /// <summary>Disable this project as an XPN host project.</summary>
        public class DisableXpnHostRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new DisableXpnHost request.</summary>
            public DisableXpnHostRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "disableXpnHost"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/disableXpnHost"; }
            }

            /// <summary>Initializes DisableXpnHost parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }

        /// <summary>Disable an XPN resource associated with this host project.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        public virtual DisableXpnResourceRequest DisableXpnResource(Google.Apis.Compute.v1.Data.ProjectsDisableXpnResourceRequest body, string project)
        {
            return new DisableXpnResourceRequest(service, body, project);
        }

        /// <summary>Disable an XPN resource associated with this host project.</summary>
        public class DisableXpnResourceRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new DisableXpnResource request.</summary>
            public DisableXpnResourceRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.ProjectsDisableXpnResourceRequest body, string project)
                : base(service)
            {
                Project = project;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.ProjectsDisableXpnResourceRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "disableXpnResource"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/disableXpnResource"; }
            }

            /// <summary>Initializes DisableXpnResource parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }

        /// <summary>Enable this project as an XPN host project.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual EnableXpnHostRequest EnableXpnHost(string project)
        {
            return new EnableXpnHostRequest(service, project);
        }

        /// <summary>Enable this project as an XPN host project.</summary>
        public class EnableXpnHostRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new EnableXpnHost request.</summary>
            public EnableXpnHostRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "enableXpnHost"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/enableXpnHost"; }
            }

            /// <summary>Initializes EnableXpnHost parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }

        /// <summary>Enable XPN resource (a.k.a service project or service folder in the future) for a host project, so
        /// that subnetworks in the host project can be used by instances in the service project or folder.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        public virtual EnableXpnResourceRequest EnableXpnResource(Google.Apis.Compute.v1.Data.ProjectsEnableXpnResourceRequest body, string project)
        {
            return new EnableXpnResourceRequest(service, body, project);
        }

        /// <summary>Enable XPN resource (a.k.a service project or service folder in the future) for a host project, so
        /// that subnetworks in the host project can be used by instances in the service project or folder.</summary>
        public class EnableXpnResourceRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new EnableXpnResource request.</summary>
            public EnableXpnResourceRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.ProjectsEnableXpnResourceRequest body, string project)
                : base(service)
            {
                Project = project;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.ProjectsEnableXpnResourceRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "enableXpnResource"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/enableXpnResource"; }
            }

            /// <summary>Initializes EnableXpnResource parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }

        /// <summary>Returns the specified Project resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual GetRequest Get(string project)
        {
            return new GetRequest(service, project);
        }

        /// <summary>Returns the specified Project resource.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Project>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }

        /// <summary>Get the XPN host project that this project links to. May be empty if no link exists.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual GetXpnHostRequest GetXpnHost(string project)
        {
            return new GetXpnHostRequest(service, project);
        }

        /// <summary>Get the XPN host project that this project links to. May be empty if no link exists.</summary>
        public class GetXpnHostRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Project>
        {
            /// <summary>Constructs a new GetXpnHost request.</summary>
            public GetXpnHostRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "getXpnHost"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/getXpnHost"; }
            }

            /// <summary>Initializes GetXpnHost parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }

        /// <summary>Get XPN resources associated with this host project.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual GetXpnResourcesRequest GetXpnResources(string project)
        {
            return new GetXpnResourcesRequest(service, project);
        }

        /// <summary>Get XPN resources associated with this host project.</summary>
        public class GetXpnResourcesRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.ProjectsGetXpnResources>
        {
            /// <summary>Constructs a new GetXpnResources request.</summary>
            public GetXpnResourcesRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }


            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }


            [Google.Apis.Util.RequestParameterAttribute("order_by", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }


            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "getXpnResources"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/getXpnResources"; }
            }

            /// <summary>Initializes GetXpnResources parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "order_by", new Google.Apis.Discovery.Parameter
                    {
                        Name = "order_by",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>List all XPN host projects visible to the user in an organization.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        public virtual ListXpnHostsRequest ListXpnHosts(Google.Apis.Compute.v1.Data.ProjectsListXpnHostsRequest body, string project)
        {
            return new ListXpnHostsRequest(service, body, project);
        }

        /// <summary>List all XPN host projects visible to the user in an organization.</summary>
        public class ListXpnHostsRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.XpnHostList>
        {
            /// <summary>Constructs a new ListXpnHosts request.</summary>
            public ListXpnHostsRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.ProjectsListXpnHostsRequest body, string project)
                : base(service)
            {
                Project = project;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }


            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }


            [Google.Apis.Util.RequestParameterAttribute("order_by", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }


            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.ProjectsListXpnHostsRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "listXpnHosts"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/listXpnHosts"; }
            }

            /// <summary>Initializes ListXpnHosts parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "order_by", new Google.Apis.Discovery.Parameter
                    {
                        Name = "order_by",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Moves a persistent disk from one zone to another.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        public virtual MoveDiskRequest MoveDisk(Google.Apis.Compute.v1.Data.DiskMoveRequest body, string project)
        {
            return new MoveDiskRequest(service, body, project);
        }

        /// <summary>Moves a persistent disk from one zone to another.</summary>
        public class MoveDiskRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new MoveDisk request.</summary>
            public MoveDiskRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.DiskMoveRequest body, string project)
                : base(service)
            {
                Project = project;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.DiskMoveRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "moveDisk"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/moveDisk"; }
            }

            /// <summary>Initializes MoveDisk parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }

        /// <summary>Moves an instance and its attached persistent disks from one zone to another.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        public virtual MoveInstanceRequest MoveInstance(Google.Apis.Compute.v1.Data.InstanceMoveRequest body, string project)
        {
            return new MoveInstanceRequest(service, body, project);
        }

        /// <summary>Moves an instance and its attached persistent disks from one zone to another.</summary>
        public class MoveInstanceRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new MoveInstance request.</summary>
            public MoveInstanceRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.InstanceMoveRequest body, string project)
                : base(service)
            {
                Project = project;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.InstanceMoveRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "moveInstance"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/moveInstance"; }
            }

            /// <summary>Initializes MoveInstance parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }

        /// <summary>Sets metadata common to all instances within the specified project using the data included in the
        /// request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        public virtual SetCommonInstanceMetadataRequest SetCommonInstanceMetadata(Google.Apis.Compute.v1.Data.Metadata body, string project)
        {
            return new SetCommonInstanceMetadataRequest(service, body, project);
        }

        /// <summary>Sets metadata common to all instances within the specified project using the data included in the
        /// request.</summary>
        public class SetCommonInstanceMetadataRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetCommonInstanceMetadata request.</summary>
            public SetCommonInstanceMetadataRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.Metadata body, string project)
                : base(service)
            {
                Project = project;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.Metadata Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setCommonInstanceMetadata"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/setCommonInstanceMetadata"; }
            }

            /// <summary>Initializes SetCommonInstanceMetadata parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }

        /// <summary>Enables the usage export feature and sets the usage export bucket where reports are stored. If you
        /// provide an empty request body using this method, the usage export feature will be disabled.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        public virtual SetUsageExportBucketRequest SetUsageExportBucket(Google.Apis.Compute.v1.Data.UsageExportLocation body, string project)
        {
            return new SetUsageExportBucketRequest(service, body, project);
        }

        /// <summary>Enables the usage export feature and sets the usage export bucket where reports are stored. If you
        /// provide an empty request body using this method, the usage export feature will be disabled.</summary>
        public class SetUsageExportBucketRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetUsageExportBucket request.</summary>
            public SetUsageExportBucketRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.UsageExportLocation body, string project)
                : base(service)
            {
                Project = project;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.UsageExportLocation Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setUsageExportBucket"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/setUsageExportBucket"; }
            }

            /// <summary>Initializes SetUsageExportBucket parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }
    }

    /// <summary>The "regionAutoscalers" collection of methods.</summary>
    public class RegionAutoscalersResource
    {
        private const string Resource = "regionAutoscalers";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public RegionAutoscalersResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes the specified autoscaler.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="autoscaler">Name of the autoscaler to delete.</param>
        public virtual DeleteRequest Delete(string project, string region, string autoscaler)
        {
            return new DeleteRequest(service, project, region, autoscaler);
        }

        /// <summary>Deletes the specified autoscaler.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string region, string autoscaler)
                : base(service)
            {
                Project = project;
                Region = region;
                Autoscaler = autoscaler;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the autoscaler to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("autoscaler", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Autoscaler { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/autoscalers/{autoscaler}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "autoscaler", new Google.Apis.Discovery.Parameter
                    {
                        Name = "autoscaler",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified autoscaler.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="autoscaler">Name of the autoscaler to return.</param>
        public virtual GetRequest Get(string project, string region, string autoscaler)
        {
            return new GetRequest(service, project, region, autoscaler);
        }

        /// <summary>Returns the specified autoscaler.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Autoscaler>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string region, string autoscaler)
                : base(service)
            {
                Project = project;
                Region = region;
                Autoscaler = autoscaler;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the autoscaler to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("autoscaler", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Autoscaler { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/autoscalers/{autoscaler}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "autoscaler", new Google.Apis.Discovery.Parameter
                    {
                        Name = "autoscaler",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates an autoscaler in the specified project using the data included in the request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.Autoscaler body, string project, string region)
        {
            return new InsertRequest(service, body, project, region);
        }

        /// <summary>Creates an autoscaler in the specified project using the data included in the request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.Autoscaler body, string project, string region)
                : base(service)
            {
                Project = project;
                Region = region;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.Autoscaler Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/autoscalers"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Retrieves a list of autoscalers contained within the specified region.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        public virtual ListRequest List(string project, string region)
        {
            return new ListRequest(service, project, region);
        }

        /// <summary>Retrieves a list of autoscalers contained within the specified region.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.RegionAutoscalerList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project, string region)
                : base(service)
            {
                Project = project;
                Region = region;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/autoscalers"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates an autoscaler in the specified project using the data included in the request. This method
        /// supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        public virtual PatchRequest Patch(Google.Apis.Compute.v1.Data.Autoscaler body, string project, string region)
        {
            return new PatchRequest(service, body, project, region);
        }

        /// <summary>Updates an autoscaler in the specified project using the data included in the request. This method
        /// supports patch semantics.</summary>
        public class PatchRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.Autoscaler body, string project, string region)
                : base(service)
            {
                Project = project;
                Region = region;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the autoscaler to patch.</summary>
            [Google.Apis.Util.RequestParameterAttribute("autoscaler", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Autoscaler { get; set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.Autoscaler Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/autoscalers"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "autoscaler", new Google.Apis.Discovery.Parameter
                    {
                        Name = "autoscaler",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Updates an autoscaler in the specified project using the data included in the request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Compute.v1.Data.Autoscaler body, string project, string region)
        {
            return new UpdateRequest(service, body, project, region);
        }

        /// <summary>Updates an autoscaler in the specified project using the data included in the request.</summary>
        public class UpdateRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.Autoscaler body, string project, string region)
                : base(service)
            {
                Project = project;
                Region = region;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the autoscaler to update.</summary>
            [Google.Apis.Util.RequestParameterAttribute("autoscaler", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Autoscaler { get; set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.Autoscaler Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/autoscalers"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "autoscaler", new Google.Apis.Discovery.Parameter
                    {
                        Name = "autoscaler",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }
    }

    /// <summary>The "regionBackendServices" collection of methods.</summary>
    public class RegionBackendServicesResource
    {
        private const string Resource = "regionBackendServices";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public RegionBackendServicesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes the specified regional BackendService resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="backendService">Name of the BackendService resource to
        /// delete.</param>
        public virtual DeleteRequest Delete(string project, string region, string backendService)
        {
            return new DeleteRequest(service, project, region, backendService);
        }

        /// <summary>Deletes the specified regional BackendService resource.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string region, string backendService)
                : base(service)
            {
                Project = project;
                Region = region;
                BackendService = backendService;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the BackendService resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("backendService", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string BackendService { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/backendServices/{backendService}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "backendService", new Google.Apis.Discovery.Parameter
                    {
                        Name = "backendService",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified regional BackendService resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="backendService">Name of the BackendService resource to
        /// return.</param>
        public virtual GetRequest Get(string project, string region, string backendService)
        {
            return new GetRequest(service, project, region, backendService);
        }

        /// <summary>Returns the specified regional BackendService resource.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.BackendService>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string region, string backendService)
                : base(service)
            {
                Project = project;
                Region = region;
                BackendService = backendService;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the BackendService resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("backendService", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string BackendService { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/backendServices/{backendService}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "backendService", new Google.Apis.Discovery.Parameter
                    {
                        Name = "backendService",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Gets the most recent health check results for this regional BackendService.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project"></param>
        /// <param name="region">Name of the region scoping this request.</param>
        ///
        /// <param name="backendService">Name of the BackendService resource to which the queried instance belongs.</param>
        public virtual GetHealthRequest GetHealth(Google.Apis.Compute.v1.Data.ResourceGroupReference body, string project, string region, string backendService)
        {
            return new GetHealthRequest(service, body, project, region, backendService);
        }

        /// <summary>Gets the most recent health check results for this regional BackendService.</summary>
        public class GetHealthRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.BackendServiceGroupHealth>
        {
            /// <summary>Constructs a new GetHealth request.</summary>
            public GetHealthRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.ResourceGroupReference body, string project, string region, string backendService)
                : base(service)
            {
                Project = project;
                Region = region;
                BackendService = backendService;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the BackendService resource to which the queried instance belongs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("backendService", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string BackendService { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.ResourceGroupReference Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "getHealth"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/backendServices/{backendService}/getHealth"; }
            }

            /// <summary>Initializes GetHealth parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "backendService", new Google.Apis.Discovery.Parameter
                    {
                        Name = "backendService",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates a regional BackendService resource in the specified project using the data included in the
        /// request. There are several restrictions and guidelines to keep in mind when creating a regional backend
        /// service. Read  Restrictions and Guidelines for more information.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.BackendService body, string project, string region)
        {
            return new InsertRequest(service, body, project, region);
        }

        /// <summary>Creates a regional BackendService resource in the specified project using the data included in the
        /// request. There are several restrictions and guidelines to keep in mind when creating a regional backend
        /// service. Read  Restrictions and Guidelines for more information.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.BackendService body, string project, string region)
                : base(service)
            {
                Project = project;
                Region = region;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.BackendService Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/backendServices"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Retrieves the list of regional BackendService resources available to the specified project in the
        /// given region.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        public virtual ListRequest List(string project, string region)
        {
            return new ListRequest(service, project, region);
        }

        /// <summary>Retrieves the list of regional BackendService resources available to the specified project in the
        /// given region.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.BackendServiceList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project, string region)
                : base(service)
            {
                Project = project;
                Region = region;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/backendServices"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the specified regional BackendService resource with the data included in the request. There
        /// are several restrictions and guidelines to keep in mind when updating a backend service. Read  Restrictions
        /// and Guidelines for more information. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="backendService">Name of the BackendService resource to
        /// patch.</param>
        public virtual PatchRequest Patch(Google.Apis.Compute.v1.Data.BackendService body, string project, string region, string backendService)
        {
            return new PatchRequest(service, body, project, region, backendService);
        }

        /// <summary>Updates the specified regional BackendService resource with the data included in the request. There
        /// are several restrictions and guidelines to keep in mind when updating a backend service. Read  Restrictions
        /// and Guidelines for more information. This method supports patch semantics.</summary>
        public class PatchRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.BackendService body, string project, string region, string backendService)
                : base(service)
            {
                Project = project;
                Region = region;
                BackendService = backendService;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the BackendService resource to patch.</summary>
            [Google.Apis.Util.RequestParameterAttribute("backendService", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string BackendService { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.BackendService Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/backendServices/{backendService}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "backendService", new Google.Apis.Discovery.Parameter
                    {
                        Name = "backendService",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Updates the specified regional BackendService resource with the data included in the request. There
        /// are several restrictions and guidelines to keep in mind when updating a backend service. Read  Restrictions
        /// and Guidelines for more information.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="backendService">Name of the BackendService resource to
        /// update.</param>
        public virtual UpdateRequest Update(Google.Apis.Compute.v1.Data.BackendService body, string project, string region, string backendService)
        {
            return new UpdateRequest(service, body, project, region, backendService);
        }

        /// <summary>Updates the specified regional BackendService resource with the data included in the request. There
        /// are several restrictions and guidelines to keep in mind when updating a backend service. Read  Restrictions
        /// and Guidelines for more information.</summary>
        public class UpdateRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.BackendService body, string project, string region, string backendService)
                : base(service)
            {
                Project = project;
                Region = region;
                BackendService = backendService;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the BackendService resource to update.</summary>
            [Google.Apis.Util.RequestParameterAttribute("backendService", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string BackendService { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.BackendService Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/backendServices/{backendService}"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "backendService", new Google.Apis.Discovery.Parameter
                    {
                        Name = "backendService",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }
    }

    /// <summary>The "regionInstanceGroupManagers" collection of methods.</summary>
    public class RegionInstanceGroupManagersResource
    {
        private const string Resource = "regionInstanceGroupManagers";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public RegionInstanceGroupManagersResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Schedules a group action to remove the specified instances from the managed instance group.
        /// Abandoning an instance does not delete the instance, but it does remove the instance from any target pools
        /// that are applied by the managed instance group. This method reduces the targetSize of the managed instance
        /// group by the number of instances that you abandon. This operation is marked as DONE when the action is
        /// scheduled even if the instances have not yet been removed from the group. You must separately verify the
        /// status of the abandoning action with the listmanagedinstances method.
        ///
        /// If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds
        /// after the connection draining duration has elapsed before the VM instance is removed or deleted.
        ///
        /// You can specify a maximum of 1000 instances with this method per request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="instanceGroupManager">Name of the managed instance group.</param>
        public virtual AbandonInstancesRequest AbandonInstances(Google.Apis.Compute.v1.Data.RegionInstanceGroupManagersAbandonInstancesRequest body, string project, string region, string instanceGroupManager)
        {
            return new AbandonInstancesRequest(service, body, project, region, instanceGroupManager);
        }

        /// <summary>Schedules a group action to remove the specified instances from the managed instance group.
        /// Abandoning an instance does not delete the instance, but it does remove the instance from any target pools
        /// that are applied by the managed instance group. This method reduces the targetSize of the managed instance
        /// group by the number of instances that you abandon. This operation is marked as DONE when the action is
        /// scheduled even if the instances have not yet been removed from the group. You must separately verify the
        /// status of the abandoning action with the listmanagedinstances method.
        ///
        /// If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds
        /// after the connection draining duration has elapsed before the VM instance is removed or deleted.
        ///
        /// You can specify a maximum of 1000 instances with this method per request.</summary>
        public class AbandonInstancesRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new AbandonInstances request.</summary>
            public AbandonInstancesRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.RegionInstanceGroupManagersAbandonInstancesRequest body, string project, string region, string instanceGroupManager)
                : base(service)
            {
                Project = project;
                Region = region;
                InstanceGroupManager = instanceGroupManager;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the managed instance group.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceGroupManager", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceGroupManager { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.RegionInstanceGroupManagersAbandonInstancesRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "abandonInstances"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/abandonInstances"; }
            }

            /// <summary>Initializes AbandonInstances parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "instanceGroupManager", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceGroupManager",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Deletes the specified managed instance group and all of the instances in that group.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="instanceGroupManager">Name of the managed instance group to
        /// delete.</param>
        public virtual DeleteRequest Delete(string project, string region, string instanceGroupManager)
        {
            return new DeleteRequest(service, project, region, instanceGroupManager);
        }

        /// <summary>Deletes the specified managed instance group and all of the instances in that group.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string region, string instanceGroupManager)
                : base(service)
            {
                Project = project;
                Region = region;
                InstanceGroupManager = instanceGroupManager;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the managed instance group to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceGroupManager", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceGroupManager { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "instanceGroupManager", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceGroupManager",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Schedules a group action to delete the specified instances in the managed instance group. The
        /// instances are also removed from any target pools of which they were a member. This method reduces the
        /// targetSize of the managed instance group by the number of instances that you delete. This operation is
        /// marked as DONE when the action is scheduled even if the instances are still being deleted. You must
        /// separately verify the status of the deleting action with the listmanagedinstances method.
        ///
        /// If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds
        /// after the connection draining duration has elapsed before the VM instance is removed or deleted.
        ///
        /// You can specify a maximum of 1000 instances with this method per request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="instanceGroupManager">Name of the managed instance group.</param>
        public virtual DeleteInstancesRequest DeleteInstances(Google.Apis.Compute.v1.Data.RegionInstanceGroupManagersDeleteInstancesRequest body, string project, string region, string instanceGroupManager)
        {
            return new DeleteInstancesRequest(service, body, project, region, instanceGroupManager);
        }

        /// <summary>Schedules a group action to delete the specified instances in the managed instance group. The
        /// instances are also removed from any target pools of which they were a member. This method reduces the
        /// targetSize of the managed instance group by the number of instances that you delete. This operation is
        /// marked as DONE when the action is scheduled even if the instances are still being deleted. You must
        /// separately verify the status of the deleting action with the listmanagedinstances method.
        ///
        /// If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds
        /// after the connection draining duration has elapsed before the VM instance is removed or deleted.
        ///
        /// You can specify a maximum of 1000 instances with this method per request.</summary>
        public class DeleteInstancesRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new DeleteInstances request.</summary>
            public DeleteInstancesRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.RegionInstanceGroupManagersDeleteInstancesRequest body, string project, string region, string instanceGroupManager)
                : base(service)
            {
                Project = project;
                Region = region;
                InstanceGroupManager = instanceGroupManager;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the managed instance group.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceGroupManager", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceGroupManager { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.RegionInstanceGroupManagersDeleteInstancesRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "deleteInstances"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/deleteInstances"; }
            }

            /// <summary>Initializes DeleteInstances parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "instanceGroupManager", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceGroupManager",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Returns all of the details about the specified managed instance group.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="instanceGroupManager">Name of the managed instance group to
        /// return.</param>
        public virtual GetRequest Get(string project, string region, string instanceGroupManager)
        {
            return new GetRequest(service, project, region, instanceGroupManager);
        }

        /// <summary>Returns all of the details about the specified managed instance group.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.InstanceGroupManager>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string region, string instanceGroupManager)
                : base(service)
            {
                Project = project;
                Region = region;
                InstanceGroupManager = instanceGroupManager;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the managed instance group to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceGroupManager", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceGroupManager { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "instanceGroupManager", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceGroupManager",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Creates a managed instance group using the information that you specify in the request. After the
        /// group is created, it schedules an action to create instances in the group using the specified instance
        /// template. This operation is marked as DONE when the group is created even if the instances in the group have
        /// not yet been created. You must separately verify the status of the individual instances with the
        /// listmanagedinstances method.
        ///
        /// A regional managed instance group can contain up to 2000 instances.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.InstanceGroupManager body, string project, string region)
        {
            return new InsertRequest(service, body, project, region);
        }

        /// <summary>Creates a managed instance group using the information that you specify in the request. After the
        /// group is created, it schedules an action to create instances in the group using the specified instance
        /// template. This operation is marked as DONE when the group is created even if the instances in the group have
        /// not yet been created. You must separately verify the status of the individual instances with the
        /// listmanagedinstances method.
        ///
        /// A regional managed instance group can contain up to 2000 instances.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.InstanceGroupManager body, string project, string region)
                : base(service)
            {
                Project = project;
                Region = region;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.InstanceGroupManager Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/instanceGroupManagers"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves the list of managed instance groups that are contained within the specified
        /// region.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        public virtual ListRequest List(string project, string region)
        {
            return new ListRequest(service, project, region);
        }

        /// <summary>Retrieves the list of managed instance groups that are contained within the specified
        /// region.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.RegionInstanceGroupManagerList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project, string region)
                : base(service)
            {
                Project = project;
                Region = region;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/instanceGroupManagers"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Lists the instances in the managed instance group and instances that are scheduled to be created.
        /// The list includes any current actions that the group has scheduled for its instances.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="instanceGroupManager">The name of the managed instance
        /// group.</param>
        public virtual ListManagedInstancesRequest ListManagedInstances(string project, string region, string instanceGroupManager)
        {
            return new ListManagedInstancesRequest(service, project, region, instanceGroupManager);
        }

        /// <summary>Lists the instances in the managed instance group and instances that are scheduled to be created.
        /// The list includes any current actions that the group has scheduled for its instances.</summary>
        public class ListManagedInstancesRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.RegionInstanceGroupManagersListInstancesResponse>
        {
            /// <summary>Constructs a new ListManagedInstances request.</summary>
            public ListManagedInstancesRequest(Google.Apis.Services.IClientService service, string project, string region, string instanceGroupManager)
                : base(service)
            {
                Project = project;
                Region = region;
                InstanceGroupManager = instanceGroupManager;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>The name of the managed instance group.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceGroupManager", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceGroupManager { get; private set; }


            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }


            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }


            [Google.Apis.Util.RequestParameterAttribute("order_by", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }


            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "listManagedInstances"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/listManagedInstances"; }
            }

            /// <summary>Initializes ListManagedInstances parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "instanceGroupManager", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceGroupManager",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "order_by", new Google.Apis.Discovery.Parameter
                    {
                        Name = "order_by",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Schedules a group action to recreate the specified instances in the managed instance group. The
        /// instances are deleted and recreated using the current instance template for the managed instance group. This
        /// operation is marked as DONE when the action is scheduled even if the instances have not yet been recreated.
        /// You must separately verify the status of the recreating action with the listmanagedinstances method.
        ///
        /// If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds
        /// after the connection draining duration has elapsed before the VM instance is removed or deleted.
        ///
        /// You can specify a maximum of 1000 instances with this method per request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="instanceGroupManager">Name of the managed instance group.</param>
        public virtual RecreateInstancesRequest RecreateInstances(Google.Apis.Compute.v1.Data.RegionInstanceGroupManagersRecreateRequest body, string project, string region, string instanceGroupManager)
        {
            return new RecreateInstancesRequest(service, body, project, region, instanceGroupManager);
        }

        /// <summary>Schedules a group action to recreate the specified instances in the managed instance group. The
        /// instances are deleted and recreated using the current instance template for the managed instance group. This
        /// operation is marked as DONE when the action is scheduled even if the instances have not yet been recreated.
        /// You must separately verify the status of the recreating action with the listmanagedinstances method.
        ///
        /// If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds
        /// after the connection draining duration has elapsed before the VM instance is removed or deleted.
        ///
        /// You can specify a maximum of 1000 instances with this method per request.</summary>
        public class RecreateInstancesRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new RecreateInstances request.</summary>
            public RecreateInstancesRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.RegionInstanceGroupManagersRecreateRequest body, string project, string region, string instanceGroupManager)
                : base(service)
            {
                Project = project;
                Region = region;
                InstanceGroupManager = instanceGroupManager;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the managed instance group.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceGroupManager", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceGroupManager { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.RegionInstanceGroupManagersRecreateRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "recreateInstances"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/recreateInstances"; }
            }

            /// <summary>Initializes RecreateInstances parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "instanceGroupManager", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceGroupManager",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Changes the intended size for the managed instance group. If you increase the size, the group
        /// schedules actions to create new instances using the current instance template. If you decrease the size, the
        /// group schedules delete actions on one or more instances. The resize operation is marked DONE when the resize
        /// actions are scheduled even if the group has not yet added or deleted any instances. You must separately
        /// verify the status of the creating or deleting actions with the listmanagedinstances method.
        ///
        /// If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds
        /// after the connection draining duration has elapsed before the VM instance is removed or deleted.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="instanceGroupManager">Name of the managed instance group.</param>
        ///
        /// <param name="size">Number of instances that should exist in this instance group manager.</param>
        public virtual ResizeRequest Resize(string project, string region, string instanceGroupManager, int size)
        {
            return new ResizeRequest(service, project, region, instanceGroupManager, size);
        }

        /// <summary>Changes the intended size for the managed instance group. If you increase the size, the group
        /// schedules actions to create new instances using the current instance template. If you decrease the size, the
        /// group schedules delete actions on one or more instances. The resize operation is marked DONE when the resize
        /// actions are scheduled even if the group has not yet added or deleted any instances. You must separately
        /// verify the status of the creating or deleting actions with the listmanagedinstances method.
        ///
        /// If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds
        /// after the connection draining duration has elapsed before the VM instance is removed or deleted.</summary>
        public class ResizeRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Resize request.</summary>
            public ResizeRequest(Google.Apis.Services.IClientService service, string project, string region, string instanceGroupManager, int size)
                : base(service)
            {
                Project = project;
                Region = region;
                InstanceGroupManager = instanceGroupManager;
                Size = size;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the managed instance group.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceGroupManager", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceGroupManager { get; private set; }

            /// <summary>Number of instances that should exist in this instance group manager.</summary>
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("size", Google.Apis.Util.RequestParameterType.Query)]
            public virtual int Size { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "resize"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/resize"; }
            }

            /// <summary>Initializes Resize parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "instanceGroupManager", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceGroupManager",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "size", new Google.Apis.Discovery.Parameter
                    {
                        Name = "size",
                        IsRequired = true,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Sets the instance template to use when creating new instances or recreating instances in this
        /// group. Existing instances are not affected.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="instanceGroupManager">The name of the managed instance
        /// group.</param>
        public virtual SetInstanceTemplateRequest SetInstanceTemplate(Google.Apis.Compute.v1.Data.RegionInstanceGroupManagersSetTemplateRequest body, string project, string region, string instanceGroupManager)
        {
            return new SetInstanceTemplateRequest(service, body, project, region, instanceGroupManager);
        }

        /// <summary>Sets the instance template to use when creating new instances or recreating instances in this
        /// group. Existing instances are not affected.</summary>
        public class SetInstanceTemplateRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetInstanceTemplate request.</summary>
            public SetInstanceTemplateRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.RegionInstanceGroupManagersSetTemplateRequest body, string project, string region, string instanceGroupManager)
                : base(service)
            {
                Project = project;
                Region = region;
                InstanceGroupManager = instanceGroupManager;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>The name of the managed instance group.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceGroupManager", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceGroupManager { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.RegionInstanceGroupManagersSetTemplateRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setInstanceTemplate"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/setInstanceTemplate"; }
            }

            /// <summary>Initializes SetInstanceTemplate parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "instanceGroupManager", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceGroupManager",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Modifies the target pools to which all new instances in this group are assigned. Existing instances
        /// in the group are not affected.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="instanceGroupManager">Name of the managed instance group.</param>
        public virtual SetTargetPoolsRequest SetTargetPools(Google.Apis.Compute.v1.Data.RegionInstanceGroupManagersSetTargetPoolsRequest body, string project, string region, string instanceGroupManager)
        {
            return new SetTargetPoolsRequest(service, body, project, region, instanceGroupManager);
        }

        /// <summary>Modifies the target pools to which all new instances in this group are assigned. Existing instances
        /// in the group are not affected.</summary>
        public class SetTargetPoolsRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetTargetPools request.</summary>
            public SetTargetPoolsRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.RegionInstanceGroupManagersSetTargetPoolsRequest body, string project, string region, string instanceGroupManager)
                : base(service)
            {
                Project = project;
                Region = region;
                InstanceGroupManager = instanceGroupManager;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the managed instance group.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceGroupManager", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceGroupManager { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.RegionInstanceGroupManagersSetTargetPoolsRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setTargetPools"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/setTargetPools"; }
            }

            /// <summary>Initializes SetTargetPools parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "instanceGroupManager", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceGroupManager",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "regionInstanceGroups" collection of methods.</summary>
    public class RegionInstanceGroupsResource
    {
        private const string Resource = "regionInstanceGroups";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public RegionInstanceGroupsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Returns the specified instance group resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="instanceGroup">Name of the instance group resource to
        /// return.</param>
        public virtual GetRequest Get(string project, string region, string instanceGroup)
        {
            return new GetRequest(service, project, region, instanceGroup);
        }

        /// <summary>Returns the specified instance group resource.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.InstanceGroup>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string region, string instanceGroup)
                : base(service)
            {
                Project = project;
                Region = region;
                InstanceGroup = instanceGroup;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the instance group resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceGroup", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceGroup { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/instanceGroups/{instanceGroup}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "instanceGroup", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceGroup",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Retrieves the list of instance group resources contained within the specified region.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        public virtual ListRequest List(string project, string region)
        {
            return new ListRequest(service, project, region);
        }

        /// <summary>Retrieves the list of instance group resources contained within the specified region.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.RegionInstanceGroupList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project, string region)
                : base(service)
            {
                Project = project;
                Region = region;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/instanceGroups"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Lists the instances in the specified instance group and displays information about the named ports.
        /// Depending on the specified options, this method can list all instances or only the instances that are
        /// running.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="instanceGroup">Name of the regional instance group for which we want to
        /// list the instances.</param>
        public virtual ListInstancesRequest ListInstances(Google.Apis.Compute.v1.Data.RegionInstanceGroupsListInstancesRequest body, string project, string region, string instanceGroup)
        {
            return new ListInstancesRequest(service, body, project, region, instanceGroup);
        }

        /// <summary>Lists the instances in the specified instance group and displays information about the named ports.
        /// Depending on the specified options, this method can list all instances or only the instances that are
        /// running.</summary>
        public class ListInstancesRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.RegionInstanceGroupsListInstances>
        {
            /// <summary>Constructs a new ListInstances request.</summary>
            public ListInstancesRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.RegionInstanceGroupsListInstancesRequest body, string project, string region, string instanceGroup)
                : base(service)
            {
                Project = project;
                Region = region;
                InstanceGroup = instanceGroup;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the regional instance group for which we want to list the instances.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceGroup", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceGroup { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.RegionInstanceGroupsListInstancesRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "listInstances"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/instanceGroups/{instanceGroup}/listInstances"; }
            }

            /// <summary>Initializes ListInstances parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "instanceGroup", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceGroup",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Sets the named ports for the specified regional instance group.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="instanceGroup">The name of the regional instance group where the named
        /// ports are updated.</param>
        public virtual SetNamedPortsRequest SetNamedPorts(Google.Apis.Compute.v1.Data.RegionInstanceGroupsSetNamedPortsRequest body, string project, string region, string instanceGroup)
        {
            return new SetNamedPortsRequest(service, body, project, region, instanceGroup);
        }

        /// <summary>Sets the named ports for the specified regional instance group.</summary>
        public class SetNamedPortsRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetNamedPorts request.</summary>
            public SetNamedPortsRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.RegionInstanceGroupsSetNamedPortsRequest body, string project, string region, string instanceGroup)
                : base(service)
            {
                Project = project;
                Region = region;
                InstanceGroup = instanceGroup;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>The name of the regional instance group where the named ports are updated.</summary>
            [Google.Apis.Util.RequestParameterAttribute("instanceGroup", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string InstanceGroup { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.RegionInstanceGroupsSetNamedPortsRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setNamedPorts"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/instanceGroups/{instanceGroup}/setNamedPorts"; }
            }

            /// <summary>Initializes SetNamedPorts parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "instanceGroup", new Google.Apis.Discovery.Parameter
                    {
                        Name = "instanceGroup",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "regionOperations" collection of methods.</summary>
    public class RegionOperationsResource
    {
        private const string Resource = "regionOperations";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public RegionOperationsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes the specified region-specific Operations resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region for this
        /// request.</param>
        /// <param name="operation">Name of the Operations resource to delete.</param>
        public virtual DeleteRequest Delete(string project, string region, string operation)
        {
            return new DeleteRequest(service, project, region, operation);
        }

        /// <summary>Deletes the specified region-specific Operations resource.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string region, string operation)
                : base(service)
            {
                Project = project;
                Region = region;
                Operation = operation;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the Operations resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("operation", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Operation { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/operations/{operation}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "operation", new Google.Apis.Discovery.Parameter
                    {
                        Name = "operation",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Retrieves the specified region-specific Operations resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region for this
        /// request.</param>
        /// <param name="operation">Name of the Operations resource to return.</param>
        public virtual GetRequest Get(string project, string region, string operation)
        {
            return new GetRequest(service, project, region, operation);
        }

        /// <summary>Retrieves the specified region-specific Operations resource.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string region, string operation)
                : base(service)
            {
                Project = project;
                Region = region;
                Operation = operation;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the Operations resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("operation", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Operation { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/operations/{operation}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "operation", new Google.Apis.Discovery.Parameter
                    {
                        Name = "operation",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Retrieves a list of Operation resources contained within the specified region.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region for this
        /// request.</param>
        public virtual ListRequest List(string project, string region)
        {
            return new ListRequest(service, project, region);
        }

        /// <summary>Retrieves a list of Operation resources contained within the specified region.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.OperationList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project, string region)
                : base(service)
            {
                Project = project;
                Region = region;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/operations"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "regions" collection of methods.</summary>
    public class RegionsResource
    {
        private const string Resource = "regions";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public RegionsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Returns the specified Region resource. Get a list of available regions by making a list()
        /// request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region resource
        /// to return.</param>
        public virtual GetRequest Get(string project, string region)
        {
            return new GetRequest(service, project, region);
        }

        /// <summary>Returns the specified Region resource. Get a list of available regions by making a list()
        /// request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Region>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string region)
                : base(service)
            {
                Project = project;
                Region = region;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Retrieves the list of region resources available to the specified project.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual ListRequest List(string project)
        {
            return new ListRequest(service, project);
        }

        /// <summary>Retrieves the list of region resources available to the specified project.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.RegionList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "routers" collection of methods.</summary>
    public class RoutersResource
    {
        private const string Resource = "routers";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public RoutersResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Retrieves an aggregated list of routers.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual AggregatedListRequest AggregatedList(string project)
        {
            return new AggregatedListRequest(service, project);
        }

        /// <summary>Retrieves an aggregated list of routers.</summary>
        public class AggregatedListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.RouterAggregatedList>
        {
            /// <summary>Constructs a new AggregatedList request.</summary>
            public AggregatedListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "aggregatedList"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/aggregated/routers"; }
            }

            /// <summary>Initializes AggregatedList parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Deletes the specified Router resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region for this
        /// request.</param>
        /// <param name="router">Name of the Router resource to delete.</param>
        public virtual DeleteRequest Delete(string project, string region, string router)
        {
            return new DeleteRequest(service, project, region, router);
        }

        /// <summary>Deletes the specified Router resource.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string region, string router)
                : base(service)
            {
                Project = project;
                Region = region;
                Router = router;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the Router resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("router", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Router { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/routers/{router}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "router", new Google.Apis.Discovery.Parameter
                    {
                        Name = "router",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified Router resource. Get a list of available routers by making a list()
        /// request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region for this
        /// request.</param>
        /// <param name="router">Name of the Router resource to return.</param>
        public virtual GetRequest Get(string project, string region, string router)
        {
            return new GetRequest(service, project, region, router);
        }

        /// <summary>Returns the specified Router resource. Get a list of available routers by making a list()
        /// request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Router>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string region, string router)
                : base(service)
            {
                Project = project;
                Region = region;
                Router = router;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the Router resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("router", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Router { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/routers/{router}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "router", new Google.Apis.Discovery.Parameter
                    {
                        Name = "router",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Retrieves runtime information of the specified router.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region for this
        /// request.</param>
        /// <param name="router">Name of the Router resource to query.</param>
        public virtual GetRouterStatusRequest GetRouterStatus(string project, string region, string router)
        {
            return new GetRouterStatusRequest(service, project, region, router);
        }

        /// <summary>Retrieves runtime information of the specified router.</summary>
        public class GetRouterStatusRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.RouterStatusResponse>
        {
            /// <summary>Constructs a new GetRouterStatus request.</summary>
            public GetRouterStatusRequest(Google.Apis.Services.IClientService service, string project, string region, string router)
                : base(service)
            {
                Project = project;
                Region = region;
                Router = router;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the Router resource to query.</summary>
            [Google.Apis.Util.RequestParameterAttribute("router", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Router { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "getRouterStatus"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/routers/{router}/getRouterStatus"; }
            }

            /// <summary>Initializes GetRouterStatus parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "router", new Google.Apis.Discovery.Parameter
                    {
                        Name = "router",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates a Router resource in the specified project and region using the data included in the
        /// request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region for this
        /// request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.Router body, string project, string region)
        {
            return new InsertRequest(service, body, project, region);
        }

        /// <summary>Creates a Router resource in the specified project and region using the data included in the
        /// request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.Router body, string project, string region)
                : base(service)
            {
                Project = project;
                Region = region;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.Router Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/routers"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Retrieves a list of Router resources available to the specified project.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region for this
        /// request.</param>
        public virtual ListRequest List(string project, string region)
        {
            return new ListRequest(service, project, region);
        }

        /// <summary>Retrieves a list of Router resources available to the specified project.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.RouterList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project, string region)
                : base(service)
            {
                Project = project;
                Region = region;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/routers"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Patches the specified Router resource with the data included in the request. This method supports
        /// patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region for this
        /// request.</param>
        /// <param name="router">Name of the Router resource to patch.</param>
        public virtual PatchRequest Patch(Google.Apis.Compute.v1.Data.Router body, string project, string region, string router)
        {
            return new PatchRequest(service, body, project, region, router);
        }

        /// <summary>Patches the specified Router resource with the data included in the request. This method supports
        /// patch semantics.</summary>
        public class PatchRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.Router body, string project, string region, string router)
                : base(service)
            {
                Project = project;
                Region = region;
                Router = router;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the Router resource to patch.</summary>
            [Google.Apis.Util.RequestParameterAttribute("router", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Router { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.Router Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/routers/{router}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "router", new Google.Apis.Discovery.Parameter
                    {
                        Name = "router",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Preview fields auto-generated during router create and update operations. Calling this method does
        /// NOT create or update the router.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region for this
        /// request.</param>
        /// <param name="router">Name of the Router resource to query.</param>
        public virtual PreviewRequest Preview(Google.Apis.Compute.v1.Data.Router body, string project, string region, string router)
        {
            return new PreviewRequest(service, body, project, region, router);
        }

        /// <summary>Preview fields auto-generated during router create and update operations. Calling this method does
        /// NOT create or update the router.</summary>
        public class PreviewRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.RoutersPreviewResponse>
        {
            /// <summary>Constructs a new Preview request.</summary>
            public PreviewRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.Router body, string project, string region, string router)
                : base(service)
            {
                Project = project;
                Region = region;
                Router = router;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the Router resource to query.</summary>
            [Google.Apis.Util.RequestParameterAttribute("router", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Router { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.Router Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "preview"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/routers/{router}/preview"; }
            }

            /// <summary>Initializes Preview parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "router", new Google.Apis.Discovery.Parameter
                    {
                        Name = "router",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Updates the specified Router resource with the data included in the request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region for this
        /// request.</param>
        /// <param name="router">Name of the Router resource to update.</param>
        public virtual UpdateRequest Update(Google.Apis.Compute.v1.Data.Router body, string project, string region, string router)
        {
            return new UpdateRequest(service, body, project, region, router);
        }

        /// <summary>Updates the specified Router resource with the data included in the request.</summary>
        public class UpdateRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.Router body, string project, string region, string router)
                : base(service)
            {
                Project = project;
                Region = region;
                Router = router;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the Router resource to update.</summary>
            [Google.Apis.Util.RequestParameterAttribute("router", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Router { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.Router Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/routers/{router}"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "router", new Google.Apis.Discovery.Parameter
                    {
                        Name = "router",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }
    }

    /// <summary>The "routes" collection of methods.</summary>
    public class RoutesResource
    {
        private const string Resource = "routes";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public RoutesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes the specified Route resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="route">Name of the Route resource to
        /// delete.</param>
        public virtual DeleteRequest Delete(string project, string route)
        {
            return new DeleteRequest(service, project, route);
        }

        /// <summary>Deletes the specified Route resource.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string route)
                : base(service)
            {
                Project = project;
                Route = route;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the Route resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("route", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Route { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/routes/{route}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "route", new Google.Apis.Discovery.Parameter
                    {
                        Name = "route",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified Route resource. Get a list of available routes by making a list()
        /// request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="route">Name of the Route resource to
        /// return.</param>
        public virtual GetRequest Get(string project, string route)
        {
            return new GetRequest(service, project, route);
        }

        /// <summary>Returns the specified Route resource. Get a list of available routes by making a list()
        /// request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Route>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string route)
                : base(service)
            {
                Project = project;
                Route = route;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the Route resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("route", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Route { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/routes/{route}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "route", new Google.Apis.Discovery.Parameter
                    {
                        Name = "route",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates a Route resource in the specified project using the data included in the request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.Route body, string project)
        {
            return new InsertRequest(service, body, project);
        }

        /// <summary>Creates a Route resource in the specified project using the data included in the request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.Route body, string project)
                : base(service)
            {
                Project = project;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.Route Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/routes"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }

        /// <summary>Retrieves the list of Route resources available to the specified project.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual ListRequest List(string project)
        {
            return new ListRequest(service, project);
        }

        /// <summary>Retrieves the list of Route resources available to the specified project.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.RouteList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/routes"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "snapshots" collection of methods.</summary>
    public class SnapshotsResource
    {
        private const string Resource = "snapshots";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public SnapshotsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes the specified Snapshot resource. Keep in mind that deleting a single snapshot might not
        /// necessarily delete all the data on that snapshot. If any data on the snapshot that is marked for deletion is
        /// needed for subsequent snapshots, the data will be moved to the next corresponding snapshot.
        ///
        /// For more information, see Deleting snaphots.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="snapshot">Name of the Snapshot
        /// resource to delete.</param>
        public virtual DeleteRequest Delete(string project, string snapshot)
        {
            return new DeleteRequest(service, project, snapshot);
        }

        /// <summary>Deletes the specified Snapshot resource. Keep in mind that deleting a single snapshot might not
        /// necessarily delete all the data on that snapshot. If any data on the snapshot that is marked for deletion is
        /// needed for subsequent snapshots, the data will be moved to the next corresponding snapshot.
        ///
        /// For more information, see Deleting snaphots.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string snapshot)
                : base(service)
            {
                Project = project;
                Snapshot = snapshot;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the Snapshot resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("snapshot", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Snapshot { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/snapshots/{snapshot}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "snapshot", new Google.Apis.Discovery.Parameter
                    {
                        Name = "snapshot",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified Snapshot resource. Get a list of available snapshots by making a list()
        /// request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="snapshot">Name of the Snapshot
        /// resource to return.</param>
        public virtual GetRequest Get(string project, string snapshot)
        {
            return new GetRequest(service, project, snapshot);
        }

        /// <summary>Returns the specified Snapshot resource. Get a list of available snapshots by making a list()
        /// request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Snapshot>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string snapshot)
                : base(service)
            {
                Project = project;
                Snapshot = snapshot;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the Snapshot resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("snapshot", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Snapshot { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/snapshots/{snapshot}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "snapshot", new Google.Apis.Discovery.Parameter
                    {
                        Name = "snapshot",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Retrieves the list of Snapshot resources contained within the specified project.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual ListRequest List(string project)
        {
            return new ListRequest(service, project);
        }

        /// <summary>Retrieves the list of Snapshot resources contained within the specified project.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.SnapshotList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/snapshots"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Sets the labels on a snapshot. To learn more about labels, read the Labeling Resources
        /// documentation.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="resource">Name of the resource for
        /// this request.</param>
        public virtual SetLabelsRequest SetLabels(Google.Apis.Compute.v1.Data.GlobalSetLabelsRequest body, string project, string resource)
        {
            return new SetLabelsRequest(service, body, project, resource);
        }

        /// <summary>Sets the labels on a snapshot. To learn more about labels, read the Labeling Resources
        /// documentation.</summary>
        public class SetLabelsRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetLabels request.</summary>
            public SetLabelsRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.GlobalSetLabelsRequest body, string project, string resource)
                : base(service)
            {
                Project = project;
                Resource = resource;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the resource for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("resource", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Resource { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.GlobalSetLabelsRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setLabels"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/snapshots/{resource}/setLabels"; }
            }

            /// <summary>Initializes SetLabels parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "resource", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resource",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9_]{0,61}[a-z0-9])?",
                    });
            }

        }
    }

    /// <summary>The "sslCertificates" collection of methods.</summary>
    public class SslCertificatesResource
    {
        private const string Resource = "sslCertificates";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public SslCertificatesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes the specified SslCertificate resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="sslCertificate">Name of the
        /// SslCertificate resource to delete.</param>
        public virtual DeleteRequest Delete(string project, string sslCertificate)
        {
            return new DeleteRequest(service, project, sslCertificate);
        }

        /// <summary>Deletes the specified SslCertificate resource.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string sslCertificate)
                : base(service)
            {
                Project = project;
                SslCertificate = sslCertificate;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the SslCertificate resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sslCertificate", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string SslCertificate { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/sslCertificates/{sslCertificate}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "sslCertificate", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sslCertificate",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified SslCertificate resource. Get a list of available SSL certificates by making a
        /// list() request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="sslCertificate">Name of the
        /// SslCertificate resource to return.</param>
        public virtual GetRequest Get(string project, string sslCertificate)
        {
            return new GetRequest(service, project, sslCertificate);
        }

        /// <summary>Returns the specified SslCertificate resource. Get a list of available SSL certificates by making a
        /// list() request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.SslCertificate>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string sslCertificate)
                : base(service)
            {
                Project = project;
                SslCertificate = sslCertificate;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the SslCertificate resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sslCertificate", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string SslCertificate { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/sslCertificates/{sslCertificate}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "sslCertificate", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sslCertificate",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates a SslCertificate resource in the specified project using the data included in the
        /// request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.SslCertificate body, string project)
        {
            return new InsertRequest(service, body, project);
        }

        /// <summary>Creates a SslCertificate resource in the specified project using the data included in the
        /// request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.SslCertificate body, string project)
                : base(service)
            {
                Project = project;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.SslCertificate Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/sslCertificates"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }

        /// <summary>Retrieves the list of SslCertificate resources available to the specified project.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual ListRequest List(string project)
        {
            return new ListRequest(service, project);
        }

        /// <summary>Retrieves the list of SslCertificate resources available to the specified project.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.SslCertificateList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/sslCertificates"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "subnetworks" collection of methods.</summary>
    public class SubnetworksResource
    {
        private const string Resource = "subnetworks";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public SubnetworksResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Retrieves an aggregated list of subnetworks.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual AggregatedListRequest AggregatedList(string project)
        {
            return new AggregatedListRequest(service, project);
        }

        /// <summary>Retrieves an aggregated list of subnetworks.</summary>
        public class AggregatedListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.SubnetworkAggregatedList>
        {
            /// <summary>Constructs a new AggregatedList request.</summary>
            public AggregatedListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "aggregatedList"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/aggregated/subnetworks"; }
            }

            /// <summary>Initializes AggregatedList parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Deletes the specified subnetwork.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="subnetwork">Name of the Subnetwork resource to delete.</param>
        public virtual DeleteRequest Delete(string project, string region, string subnetwork)
        {
            return new DeleteRequest(service, project, region, subnetwork);
        }

        /// <summary>Deletes the specified subnetwork.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string region, string subnetwork)
                : base(service)
            {
                Project = project;
                Region = region;
                Subnetwork = subnetwork;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the Subnetwork resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("subnetwork", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Subnetwork { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/subnetworks/{subnetwork}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "subnetwork", new Google.Apis.Discovery.Parameter
                    {
                        Name = "subnetwork",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Expands the IP CIDR range of the subnetwork to a specified value.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="subnetwork">Name of the Subnetwork resource to update.</param>
        public virtual ExpandIpCidrRangeRequest ExpandIpCidrRange(Google.Apis.Compute.v1.Data.SubnetworksExpandIpCidrRangeRequest body, string project, string region, string subnetwork)
        {
            return new ExpandIpCidrRangeRequest(service, body, project, region, subnetwork);
        }

        /// <summary>Expands the IP CIDR range of the subnetwork to a specified value.</summary>
        public class ExpandIpCidrRangeRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new ExpandIpCidrRange request.</summary>
            public ExpandIpCidrRangeRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.SubnetworksExpandIpCidrRangeRequest body, string project, string region, string subnetwork)
                : base(service)
            {
                Project = project;
                Region = region;
                Subnetwork = subnetwork;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the Subnetwork resource to update.</summary>
            [Google.Apis.Util.RequestParameterAttribute("subnetwork", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Subnetwork { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.SubnetworksExpandIpCidrRangeRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "expandIpCidrRange"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/subnetworks/{subnetwork}/expandIpCidrRange"; }
            }

            /// <summary>Initializes ExpandIpCidrRange parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "subnetwork", new Google.Apis.Discovery.Parameter
                    {
                        Name = "subnetwork",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified subnetwork. Get a list of available subnetworks list() request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="subnetwork">Name of the Subnetwork resource to return.</param>
        public virtual GetRequest Get(string project, string region, string subnetwork)
        {
            return new GetRequest(service, project, region, subnetwork);
        }

        /// <summary>Returns the specified subnetwork. Get a list of available subnetworks list() request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Subnetwork>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string region, string subnetwork)
                : base(service)
            {
                Project = project;
                Region = region;
                Subnetwork = subnetwork;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the Subnetwork resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("subnetwork", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Subnetwork { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/subnetworks/{subnetwork}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "subnetwork", new Google.Apis.Discovery.Parameter
                    {
                        Name = "subnetwork",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates a subnetwork in the specified project using the data included in the request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.Subnetwork body, string project, string region)
        {
            return new InsertRequest(service, body, project, region);
        }

        /// <summary>Creates a subnetwork in the specified project using the data included in the request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.Subnetwork body, string project, string region)
                : base(service)
            {
                Project = project;
                Region = region;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.Subnetwork Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/subnetworks"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Retrieves a list of subnetworks available to the specified project.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        public virtual ListRequest List(string project, string region)
        {
            return new ListRequest(service, project, region);
        }

        /// <summary>Retrieves a list of subnetworks available to the specified project.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.SubnetworkList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project, string region)
                : base(service)
            {
                Project = project;
                Region = region;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/subnetworks"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Set whether VMs in this subnet can access Google services without assigning external IP addresses
        /// through Private Google Access.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="subnetwork">Name of the Subnetwork resource.</param>
        public virtual SetPrivateIpGoogleAccessRequest SetPrivateIpGoogleAccess(Google.Apis.Compute.v1.Data.SubnetworksSetPrivateIpGoogleAccessRequest body, string project, string region, string subnetwork)
        {
            return new SetPrivateIpGoogleAccessRequest(service, body, project, region, subnetwork);
        }

        /// <summary>Set whether VMs in this subnet can access Google services without assigning external IP addresses
        /// through Private Google Access.</summary>
        public class SetPrivateIpGoogleAccessRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetPrivateIpGoogleAccess request.</summary>
            public SetPrivateIpGoogleAccessRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.SubnetworksSetPrivateIpGoogleAccessRequest body, string project, string region, string subnetwork)
                : base(service)
            {
                Project = project;
                Region = region;
                Subnetwork = subnetwork;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the Subnetwork resource.</summary>
            [Google.Apis.Util.RequestParameterAttribute("subnetwork", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Subnetwork { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.SubnetworksSetPrivateIpGoogleAccessRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setPrivateIpGoogleAccess"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/subnetworks/{subnetwork}/setPrivateIpGoogleAccess"; }
            }

            /// <summary>Initializes SetPrivateIpGoogleAccess parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "subnetwork", new Google.Apis.Discovery.Parameter
                    {
                        Name = "subnetwork",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }
    }

    /// <summary>The "targetHttpProxies" collection of methods.</summary>
    public class TargetHttpProxiesResource
    {
        private const string Resource = "targetHttpProxies";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public TargetHttpProxiesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes the specified TargetHttpProxy resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="targetHttpProxy">Name of the
        /// TargetHttpProxy resource to delete.</param>
        public virtual DeleteRequest Delete(string project, string targetHttpProxy)
        {
            return new DeleteRequest(service, project, targetHttpProxy);
        }

        /// <summary>Deletes the specified TargetHttpProxy resource.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string targetHttpProxy)
                : base(service)
            {
                Project = project;
                TargetHttpProxy = targetHttpProxy;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the TargetHttpProxy resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetHttpProxy", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetHttpProxy { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/targetHttpProxies/{targetHttpProxy}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "targetHttpProxy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetHttpProxy",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified TargetHttpProxy resource. Get a list of available target HTTP proxies by
        /// making a list() request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="targetHttpProxy">Name of the
        /// TargetHttpProxy resource to return.</param>
        public virtual GetRequest Get(string project, string targetHttpProxy)
        {
            return new GetRequest(service, project, targetHttpProxy);
        }

        /// <summary>Returns the specified TargetHttpProxy resource. Get a list of available target HTTP proxies by
        /// making a list() request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.TargetHttpProxy>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string targetHttpProxy)
                : base(service)
            {
                Project = project;
                TargetHttpProxy = targetHttpProxy;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the TargetHttpProxy resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetHttpProxy", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetHttpProxy { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/targetHttpProxies/{targetHttpProxy}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "targetHttpProxy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetHttpProxy",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates a TargetHttpProxy resource in the specified project using the data included in the
        /// request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.TargetHttpProxy body, string project)
        {
            return new InsertRequest(service, body, project);
        }

        /// <summary>Creates a TargetHttpProxy resource in the specified project using the data included in the
        /// request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.TargetHttpProxy body, string project)
                : base(service)
            {
                Project = project;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.TargetHttpProxy Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/targetHttpProxies"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }

        /// <summary>Retrieves the list of TargetHttpProxy resources available to the specified project.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual ListRequest List(string project)
        {
            return new ListRequest(service, project);
        }

        /// <summary>Retrieves the list of TargetHttpProxy resources available to the specified project.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.TargetHttpProxyList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/targetHttpProxies"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Changes the URL map for TargetHttpProxy.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="targetHttpProxy">Name of the
        /// TargetHttpProxy to set a URL map for.</param>
        public virtual SetUrlMapRequest SetUrlMap(Google.Apis.Compute.v1.Data.UrlMapReference body, string project, string targetHttpProxy)
        {
            return new SetUrlMapRequest(service, body, project, targetHttpProxy);
        }

        /// <summary>Changes the URL map for TargetHttpProxy.</summary>
        public class SetUrlMapRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetUrlMap request.</summary>
            public SetUrlMapRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.UrlMapReference body, string project, string targetHttpProxy)
                : base(service)
            {
                Project = project;
                TargetHttpProxy = targetHttpProxy;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the TargetHttpProxy to set a URL map for.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetHttpProxy", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetHttpProxy { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.UrlMapReference Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setUrlMap"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/targetHttpProxies/{targetHttpProxy}/setUrlMap"; }
            }

            /// <summary>Initializes SetUrlMap parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "targetHttpProxy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetHttpProxy",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }
    }

    /// <summary>The "targetHttpsProxies" collection of methods.</summary>
    public class TargetHttpsProxiesResource
    {
        private const string Resource = "targetHttpsProxies";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public TargetHttpsProxiesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes the specified TargetHttpsProxy resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="targetHttpsProxy">Name of the
        /// TargetHttpsProxy resource to delete.</param>
        public virtual DeleteRequest Delete(string project, string targetHttpsProxy)
        {
            return new DeleteRequest(service, project, targetHttpsProxy);
        }

        /// <summary>Deletes the specified TargetHttpsProxy resource.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string targetHttpsProxy)
                : base(service)
            {
                Project = project;
                TargetHttpsProxy = targetHttpsProxy;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the TargetHttpsProxy resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetHttpsProxy", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetHttpsProxy { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/targetHttpsProxies/{targetHttpsProxy}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "targetHttpsProxy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetHttpsProxy",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified TargetHttpsProxy resource. Get a list of available target HTTPS proxies by
        /// making a list() request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="targetHttpsProxy">Name of the
        /// TargetHttpsProxy resource to return.</param>
        public virtual GetRequest Get(string project, string targetHttpsProxy)
        {
            return new GetRequest(service, project, targetHttpsProxy);
        }

        /// <summary>Returns the specified TargetHttpsProxy resource. Get a list of available target HTTPS proxies by
        /// making a list() request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.TargetHttpsProxy>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string targetHttpsProxy)
                : base(service)
            {
                Project = project;
                TargetHttpsProxy = targetHttpsProxy;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the TargetHttpsProxy resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetHttpsProxy", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetHttpsProxy { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/targetHttpsProxies/{targetHttpsProxy}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "targetHttpsProxy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetHttpsProxy",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates a TargetHttpsProxy resource in the specified project using the data included in the
        /// request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.TargetHttpsProxy body, string project)
        {
            return new InsertRequest(service, body, project);
        }

        /// <summary>Creates a TargetHttpsProxy resource in the specified project using the data included in the
        /// request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.TargetHttpsProxy body, string project)
                : base(service)
            {
                Project = project;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.TargetHttpsProxy Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/targetHttpsProxies"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }

        /// <summary>Retrieves the list of TargetHttpsProxy resources available to the specified project.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual ListRequest List(string project)
        {
            return new ListRequest(service, project);
        }

        /// <summary>Retrieves the list of TargetHttpsProxy resources available to the specified project.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.TargetHttpsProxyList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/targetHttpsProxies"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Replaces SslCertificates for TargetHttpsProxy.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="targetHttpsProxy">Name of the
        /// TargetHttpsProxy resource to set an SslCertificates resource for.</param>
        public virtual SetSslCertificatesRequest SetSslCertificates(Google.Apis.Compute.v1.Data.TargetHttpsProxiesSetSslCertificatesRequest body, string project, string targetHttpsProxy)
        {
            return new SetSslCertificatesRequest(service, body, project, targetHttpsProxy);
        }

        /// <summary>Replaces SslCertificates for TargetHttpsProxy.</summary>
        public class SetSslCertificatesRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetSslCertificates request.</summary>
            public SetSslCertificatesRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.TargetHttpsProxiesSetSslCertificatesRequest body, string project, string targetHttpsProxy)
                : base(service)
            {
                Project = project;
                TargetHttpsProxy = targetHttpsProxy;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the TargetHttpsProxy resource to set an SslCertificates resource for.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetHttpsProxy", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetHttpsProxy { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.TargetHttpsProxiesSetSslCertificatesRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setSslCertificates"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/targetHttpsProxies/{targetHttpsProxy}/setSslCertificates"; }
            }

            /// <summary>Initializes SetSslCertificates parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "targetHttpsProxy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetHttpsProxy",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Changes the URL map for TargetHttpsProxy.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="targetHttpsProxy">Name of the
        /// TargetHttpsProxy resource whose URL map is to be set.</param>
        public virtual SetUrlMapRequest SetUrlMap(Google.Apis.Compute.v1.Data.UrlMapReference body, string project, string targetHttpsProxy)
        {
            return new SetUrlMapRequest(service, body, project, targetHttpsProxy);
        }

        /// <summary>Changes the URL map for TargetHttpsProxy.</summary>
        public class SetUrlMapRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetUrlMap request.</summary>
            public SetUrlMapRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.UrlMapReference body, string project, string targetHttpsProxy)
                : base(service)
            {
                Project = project;
                TargetHttpsProxy = targetHttpsProxy;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the TargetHttpsProxy resource whose URL map is to be set.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetHttpsProxy", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetHttpsProxy { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.UrlMapReference Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setUrlMap"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/targetHttpsProxies/{targetHttpsProxy}/setUrlMap"; }
            }

            /// <summary>Initializes SetUrlMap parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "targetHttpsProxy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetHttpsProxy",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }
    }

    /// <summary>The "targetInstances" collection of methods.</summary>
    public class TargetInstancesResource
    {
        private const string Resource = "targetInstances";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public TargetInstancesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Retrieves an aggregated list of target instances.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual AggregatedListRequest AggregatedList(string project)
        {
            return new AggregatedListRequest(service, project);
        }

        /// <summary>Retrieves an aggregated list of target instances.</summary>
        public class AggregatedListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.TargetInstanceAggregatedList>
        {
            /// <summary>Constructs a new AggregatedList request.</summary>
            public AggregatedListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "aggregatedList"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/aggregated/targetInstances"; }
            }

            /// <summary>Initializes AggregatedList parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Deletes the specified TargetInstance resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">Name of the zone scoping this
        /// request.</param>
        /// <param name="targetInstance">Name of the TargetInstance resource to delete.</param>
        public virtual DeleteRequest Delete(string project, string zone, string targetInstance)
        {
            return new DeleteRequest(service, project, zone, targetInstance);
        }

        /// <summary>Deletes the specified TargetInstance resource.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string zone, string targetInstance)
                : base(service)
            {
                Project = project;
                Zone = zone;
                TargetInstance = targetInstance;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the zone scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Name of the TargetInstance resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetInstance", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetInstance { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/targetInstances/{targetInstance}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "targetInstance", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetInstance",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified TargetInstance resource. Get a list of available target instances by making a
        /// list() request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">Name of the zone scoping this
        /// request.</param>
        /// <param name="targetInstance">Name of the TargetInstance resource to return.</param>
        public virtual GetRequest Get(string project, string zone, string targetInstance)
        {
            return new GetRequest(service, project, zone, targetInstance);
        }

        /// <summary>Returns the specified TargetInstance resource. Get a list of available target instances by making a
        /// list() request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.TargetInstance>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string zone, string targetInstance)
                : base(service)
            {
                Project = project;
                Zone = zone;
                TargetInstance = targetInstance;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the zone scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Name of the TargetInstance resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetInstance", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetInstance { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/targetInstances/{targetInstance}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "targetInstance", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetInstance",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates a TargetInstance resource in the specified project and zone using the data included in the
        /// request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">Name of the zone scoping this
        /// request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.TargetInstance body, string project, string zone)
        {
            return new InsertRequest(service, body, project, zone);
        }

        /// <summary>Creates a TargetInstance resource in the specified project and zone using the data included in the
        /// request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.TargetInstance body, string project, string zone)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the zone scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.TargetInstance Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/targetInstances"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Retrieves a list of TargetInstance resources available to the specified project and zone.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">Name of the zone scoping this
        /// request.</param>
        public virtual ListRequest List(string project, string zone)
        {
            return new ListRequest(service, project, zone);
        }

        /// <summary>Retrieves a list of TargetInstance resources available to the specified project and zone.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.TargetInstanceList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project, string zone)
                : base(service)
            {
                Project = project;
                Zone = zone;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the zone scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/targetInstances"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "targetPools" collection of methods.</summary>
    public class TargetPoolsResource
    {
        private const string Resource = "targetPools";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public TargetPoolsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Adds health check URLs to a target pool.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="targetPool">Name of the target pool to add a health check
        /// to.</param>
        public virtual AddHealthCheckRequest AddHealthCheck(Google.Apis.Compute.v1.Data.TargetPoolsAddHealthCheckRequest body, string project, string region, string targetPool)
        {
            return new AddHealthCheckRequest(service, body, project, region, targetPool);
        }

        /// <summary>Adds health check URLs to a target pool.</summary>
        public class AddHealthCheckRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new AddHealthCheck request.</summary>
            public AddHealthCheckRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.TargetPoolsAddHealthCheckRequest body, string project, string region, string targetPool)
                : base(service)
            {
                Project = project;
                Region = region;
                TargetPool = targetPool;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the target pool to add a health check to.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetPool", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetPool { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.TargetPoolsAddHealthCheckRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "addHealthCheck"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/targetPools/{targetPool}/addHealthCheck"; }
            }

            /// <summary>Initializes AddHealthCheck parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "targetPool", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetPool",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Adds an instance to a target pool.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="targetPool">Name of the TargetPool resource to add instances
        /// to.</param>
        public virtual AddInstanceRequest AddInstance(Google.Apis.Compute.v1.Data.TargetPoolsAddInstanceRequest body, string project, string region, string targetPool)
        {
            return new AddInstanceRequest(service, body, project, region, targetPool);
        }

        /// <summary>Adds an instance to a target pool.</summary>
        public class AddInstanceRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new AddInstance request.</summary>
            public AddInstanceRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.TargetPoolsAddInstanceRequest body, string project, string region, string targetPool)
                : base(service)
            {
                Project = project;
                Region = region;
                TargetPool = targetPool;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the TargetPool resource to add instances to.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetPool", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetPool { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.TargetPoolsAddInstanceRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "addInstance"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/targetPools/{targetPool}/addInstance"; }
            }

            /// <summary>Initializes AddInstance parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "targetPool", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetPool",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Retrieves an aggregated list of target pools.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual AggregatedListRequest AggregatedList(string project)
        {
            return new AggregatedListRequest(service, project);
        }

        /// <summary>Retrieves an aggregated list of target pools.</summary>
        public class AggregatedListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.TargetPoolAggregatedList>
        {
            /// <summary>Constructs a new AggregatedList request.</summary>
            public AggregatedListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "aggregatedList"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/aggregated/targetPools"; }
            }

            /// <summary>Initializes AggregatedList parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Deletes the specified target pool.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="targetPool">Name of the TargetPool resource to delete.</param>
        public virtual DeleteRequest Delete(string project, string region, string targetPool)
        {
            return new DeleteRequest(service, project, region, targetPool);
        }

        /// <summary>Deletes the specified target pool.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string region, string targetPool)
                : base(service)
            {
                Project = project;
                Region = region;
                TargetPool = targetPool;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the TargetPool resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetPool", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetPool { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/targetPools/{targetPool}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "targetPool", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetPool",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified target pool. Get a list of available target pools by making a list()
        /// request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="targetPool">Name of the TargetPool resource to return.</param>
        public virtual GetRequest Get(string project, string region, string targetPool)
        {
            return new GetRequest(service, project, region, targetPool);
        }

        /// <summary>Returns the specified target pool. Get a list of available target pools by making a list()
        /// request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.TargetPool>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string region, string targetPool)
                : base(service)
            {
                Project = project;
                Region = region;
                TargetPool = targetPool;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the TargetPool resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetPool", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetPool { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/targetPools/{targetPool}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "targetPool", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetPool",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Gets the most recent health check results for each IP for the instance that is referenced by the
        /// given target pool.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="targetPool">Name of the TargetPool resource to which the queried instance
        /// belongs.</param>
        public virtual GetHealthRequest GetHealth(Google.Apis.Compute.v1.Data.InstanceReference body, string project, string region, string targetPool)
        {
            return new GetHealthRequest(service, body, project, region, targetPool);
        }

        /// <summary>Gets the most recent health check results for each IP for the instance that is referenced by the
        /// given target pool.</summary>
        public class GetHealthRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.TargetPoolInstanceHealth>
        {
            /// <summary>Constructs a new GetHealth request.</summary>
            public GetHealthRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.InstanceReference body, string project, string region, string targetPool)
                : base(service)
            {
                Project = project;
                Region = region;
                TargetPool = targetPool;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the TargetPool resource to which the queried instance belongs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetPool", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetPool { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.InstanceReference Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "getHealth"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/targetPools/{targetPool}/getHealth"; }
            }

            /// <summary>Initializes GetHealth parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "targetPool", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetPool",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates a target pool in the specified project and region using the data included in the
        /// request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.TargetPool body, string project, string region)
        {
            return new InsertRequest(service, body, project, region);
        }

        /// <summary>Creates a target pool in the specified project and region using the data included in the
        /// request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.TargetPool body, string project, string region)
                : base(service)
            {
                Project = project;
                Region = region;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.TargetPool Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/targetPools"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Retrieves a list of target pools available to the specified project and region.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        public virtual ListRequest List(string project, string region)
        {
            return new ListRequest(service, project, region);
        }

        /// <summary>Retrieves a list of target pools available to the specified project and region.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.TargetPoolList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project, string region)
                : base(service)
            {
                Project = project;
                Region = region;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/targetPools"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Removes health check URL from a target pool.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region for this
        /// request.</param>
        /// <param name="targetPool">Name of the target pool to remove health checks from.</param>
        public virtual RemoveHealthCheckRequest RemoveHealthCheck(Google.Apis.Compute.v1.Data.TargetPoolsRemoveHealthCheckRequest body, string project, string region, string targetPool)
        {
            return new RemoveHealthCheckRequest(service, body, project, region, targetPool);
        }

        /// <summary>Removes health check URL from a target pool.</summary>
        public class RemoveHealthCheckRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new RemoveHealthCheck request.</summary>
            public RemoveHealthCheckRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.TargetPoolsRemoveHealthCheckRequest body, string project, string region, string targetPool)
                : base(service)
            {
                Project = project;
                Region = region;
                TargetPool = targetPool;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the target pool to remove health checks from.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetPool", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetPool { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.TargetPoolsRemoveHealthCheckRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "removeHealthCheck"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/targetPools/{targetPool}/removeHealthCheck"; }
            }

            /// <summary>Initializes RemoveHealthCheck parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "targetPool", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetPool",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Removes instance URL from a target pool.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="targetPool">Name of the TargetPool resource to remove instances
        /// from.</param>
        public virtual RemoveInstanceRequest RemoveInstance(Google.Apis.Compute.v1.Data.TargetPoolsRemoveInstanceRequest body, string project, string region, string targetPool)
        {
            return new RemoveInstanceRequest(service, body, project, region, targetPool);
        }

        /// <summary>Removes instance URL from a target pool.</summary>
        public class RemoveInstanceRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new RemoveInstance request.</summary>
            public RemoveInstanceRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.TargetPoolsRemoveInstanceRequest body, string project, string region, string targetPool)
                : base(service)
            {
                Project = project;
                Region = region;
                TargetPool = targetPool;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the TargetPool resource to remove instances from.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetPool", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetPool { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.TargetPoolsRemoveInstanceRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "removeInstance"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/targetPools/{targetPool}/removeInstance"; }
            }

            /// <summary>Initializes RemoveInstance parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "targetPool", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetPool",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Changes a backup target pool's configurations.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region scoping
        /// this request.</param>
        /// <param name="targetPool">Name of the TargetPool resource to set a backup pool
        /// for.</param>
        public virtual SetBackupRequest SetBackup(Google.Apis.Compute.v1.Data.TargetReference body, string project, string region, string targetPool)
        {
            return new SetBackupRequest(service, body, project, region, targetPool);
        }

        /// <summary>Changes a backup target pool's configurations.</summary>
        public class SetBackupRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetBackup request.</summary>
            public SetBackupRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.TargetReference body, string project, string region, string targetPool)
                : base(service)
            {
                Project = project;
                Region = region;
                TargetPool = targetPool;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the TargetPool resource to set a backup pool for.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetPool", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetPool { get; private set; }

            /// <summary>New failoverRatio value for the target pool.</summary>
            [Google.Apis.Util.RequestParameterAttribute("failoverRatio", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<float> FailoverRatio { get; set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.TargetReference Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setBackup"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/targetPools/{targetPool}/setBackup"; }
            }

            /// <summary>Initializes SetBackup parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "targetPool", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetPool",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "failoverRatio", new Google.Apis.Discovery.Parameter
                    {
                        Name = "failoverRatio",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "targetSslProxies" collection of methods.</summary>
    public class TargetSslProxiesResource
    {
        private const string Resource = "targetSslProxies";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public TargetSslProxiesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes the specified TargetSslProxy resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="targetSslProxy">Name of the
        /// TargetSslProxy resource to delete.</param>
        public virtual DeleteRequest Delete(string project, string targetSslProxy)
        {
            return new DeleteRequest(service, project, targetSslProxy);
        }

        /// <summary>Deletes the specified TargetSslProxy resource.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string targetSslProxy)
                : base(service)
            {
                Project = project;
                TargetSslProxy = targetSslProxy;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the TargetSslProxy resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetSslProxy", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetSslProxy { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/targetSslProxies/{targetSslProxy}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "targetSslProxy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetSslProxy",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified TargetSslProxy resource. Get a list of available target SSL proxies by making
        /// a list() request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="targetSslProxy">Name of the
        /// TargetSslProxy resource to return.</param>
        public virtual GetRequest Get(string project, string targetSslProxy)
        {
            return new GetRequest(service, project, targetSslProxy);
        }

        /// <summary>Returns the specified TargetSslProxy resource. Get a list of available target SSL proxies by making
        /// a list() request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.TargetSslProxy>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string targetSslProxy)
                : base(service)
            {
                Project = project;
                TargetSslProxy = targetSslProxy;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the TargetSslProxy resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetSslProxy", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetSslProxy { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/targetSslProxies/{targetSslProxy}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "targetSslProxy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetSslProxy",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates a TargetSslProxy resource in the specified project using the data included in the
        /// request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.TargetSslProxy body, string project)
        {
            return new InsertRequest(service, body, project);
        }

        /// <summary>Creates a TargetSslProxy resource in the specified project using the data included in the
        /// request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.TargetSslProxy body, string project)
                : base(service)
            {
                Project = project;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.TargetSslProxy Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/targetSslProxies"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }

        /// <summary>Retrieves the list of TargetSslProxy resources available to the specified project.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual ListRequest List(string project)
        {
            return new ListRequest(service, project);
        }

        /// <summary>Retrieves the list of TargetSslProxy resources available to the specified project.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.TargetSslProxyList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/targetSslProxies"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Changes the BackendService for TargetSslProxy.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="targetSslProxy">Name of the
        /// TargetSslProxy resource whose BackendService resource is to be set.</param>
        public virtual SetBackendServiceRequest SetBackendService(Google.Apis.Compute.v1.Data.TargetSslProxiesSetBackendServiceRequest body, string project, string targetSslProxy)
        {
            return new SetBackendServiceRequest(service, body, project, targetSslProxy);
        }

        /// <summary>Changes the BackendService for TargetSslProxy.</summary>
        public class SetBackendServiceRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetBackendService request.</summary>
            public SetBackendServiceRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.TargetSslProxiesSetBackendServiceRequest body, string project, string targetSslProxy)
                : base(service)
            {
                Project = project;
                TargetSslProxy = targetSslProxy;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the TargetSslProxy resource whose BackendService resource is to be set.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetSslProxy", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetSslProxy { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.TargetSslProxiesSetBackendServiceRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setBackendService"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/targetSslProxies/{targetSslProxy}/setBackendService"; }
            }

            /// <summary>Initializes SetBackendService parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "targetSslProxy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetSslProxy",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Changes the ProxyHeaderType for TargetSslProxy.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="targetSslProxy">Name of the
        /// TargetSslProxy resource whose ProxyHeader is to be set.</param>
        public virtual SetProxyHeaderRequest SetProxyHeader(Google.Apis.Compute.v1.Data.TargetSslProxiesSetProxyHeaderRequest body, string project, string targetSslProxy)
        {
            return new SetProxyHeaderRequest(service, body, project, targetSslProxy);
        }

        /// <summary>Changes the ProxyHeaderType for TargetSslProxy.</summary>
        public class SetProxyHeaderRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetProxyHeader request.</summary>
            public SetProxyHeaderRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.TargetSslProxiesSetProxyHeaderRequest body, string project, string targetSslProxy)
                : base(service)
            {
                Project = project;
                TargetSslProxy = targetSslProxy;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the TargetSslProxy resource whose ProxyHeader is to be set.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetSslProxy", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetSslProxy { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.TargetSslProxiesSetProxyHeaderRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setProxyHeader"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/targetSslProxies/{targetSslProxy}/setProxyHeader"; }
            }

            /// <summary>Initializes SetProxyHeader parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "targetSslProxy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetSslProxy",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Changes SslCertificates for TargetSslProxy.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="targetSslProxy">Name of the
        /// TargetSslProxy resource whose SslCertificate resource is to be set.</param>
        public virtual SetSslCertificatesRequest SetSslCertificates(Google.Apis.Compute.v1.Data.TargetSslProxiesSetSslCertificatesRequest body, string project, string targetSslProxy)
        {
            return new SetSslCertificatesRequest(service, body, project, targetSslProxy);
        }

        /// <summary>Changes SslCertificates for TargetSslProxy.</summary>
        public class SetSslCertificatesRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetSslCertificates request.</summary>
            public SetSslCertificatesRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.TargetSslProxiesSetSslCertificatesRequest body, string project, string targetSslProxy)
                : base(service)
            {
                Project = project;
                TargetSslProxy = targetSslProxy;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the TargetSslProxy resource whose SslCertificate resource is to be set.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetSslProxy", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetSslProxy { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.TargetSslProxiesSetSslCertificatesRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setSslCertificates"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/targetSslProxies/{targetSslProxy}/setSslCertificates"; }
            }

            /// <summary>Initializes SetSslCertificates parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "targetSslProxy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetSslProxy",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }
    }

    /// <summary>The "targetTcpProxies" collection of methods.</summary>
    public class TargetTcpProxiesResource
    {
        private const string Resource = "targetTcpProxies";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public TargetTcpProxiesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes the specified TargetTcpProxy resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="targetTcpProxy">Name of the
        /// TargetTcpProxy resource to delete.</param>
        public virtual DeleteRequest Delete(string project, string targetTcpProxy)
        {
            return new DeleteRequest(service, project, targetTcpProxy);
        }

        /// <summary>Deletes the specified TargetTcpProxy resource.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string targetTcpProxy)
                : base(service)
            {
                Project = project;
                TargetTcpProxy = targetTcpProxy;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the TargetTcpProxy resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetTcpProxy", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetTcpProxy { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/targetTcpProxies/{targetTcpProxy}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "targetTcpProxy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetTcpProxy",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified TargetTcpProxy resource. Get a list of available target TCP proxies by making
        /// a list() request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="targetTcpProxy">Name of the
        /// TargetTcpProxy resource to return.</param>
        public virtual GetRequest Get(string project, string targetTcpProxy)
        {
            return new GetRequest(service, project, targetTcpProxy);
        }

        /// <summary>Returns the specified TargetTcpProxy resource. Get a list of available target TCP proxies by making
        /// a list() request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.TargetTcpProxy>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string targetTcpProxy)
                : base(service)
            {
                Project = project;
                TargetTcpProxy = targetTcpProxy;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the TargetTcpProxy resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetTcpProxy", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetTcpProxy { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/targetTcpProxies/{targetTcpProxy}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "targetTcpProxy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetTcpProxy",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates a TargetTcpProxy resource in the specified project using the data included in the
        /// request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.TargetTcpProxy body, string project)
        {
            return new InsertRequest(service, body, project);
        }

        /// <summary>Creates a TargetTcpProxy resource in the specified project using the data included in the
        /// request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.TargetTcpProxy body, string project)
                : base(service)
            {
                Project = project;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.TargetTcpProxy Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/targetTcpProxies"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }

        /// <summary>Retrieves the list of TargetTcpProxy resources available to the specified project.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual ListRequest List(string project)
        {
            return new ListRequest(service, project);
        }

        /// <summary>Retrieves the list of TargetTcpProxy resources available to the specified project.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.TargetTcpProxyList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/targetTcpProxies"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Changes the BackendService for TargetTcpProxy.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="targetTcpProxy">Name of the
        /// TargetTcpProxy resource whose BackendService resource is to be set.</param>
        public virtual SetBackendServiceRequest SetBackendService(Google.Apis.Compute.v1.Data.TargetTcpProxiesSetBackendServiceRequest body, string project, string targetTcpProxy)
        {
            return new SetBackendServiceRequest(service, body, project, targetTcpProxy);
        }

        /// <summary>Changes the BackendService for TargetTcpProxy.</summary>
        public class SetBackendServiceRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetBackendService request.</summary>
            public SetBackendServiceRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.TargetTcpProxiesSetBackendServiceRequest body, string project, string targetTcpProxy)
                : base(service)
            {
                Project = project;
                TargetTcpProxy = targetTcpProxy;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the TargetTcpProxy resource whose BackendService resource is to be set.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetTcpProxy", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetTcpProxy { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.TargetTcpProxiesSetBackendServiceRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setBackendService"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/targetTcpProxies/{targetTcpProxy}/setBackendService"; }
            }

            /// <summary>Initializes SetBackendService parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "targetTcpProxy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetTcpProxy",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Changes the ProxyHeaderType for TargetTcpProxy.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="targetTcpProxy">Name of the
        /// TargetTcpProxy resource whose ProxyHeader is to be set.</param>
        public virtual SetProxyHeaderRequest SetProxyHeader(Google.Apis.Compute.v1.Data.TargetTcpProxiesSetProxyHeaderRequest body, string project, string targetTcpProxy)
        {
            return new SetProxyHeaderRequest(service, body, project, targetTcpProxy);
        }

        /// <summary>Changes the ProxyHeaderType for TargetTcpProxy.</summary>
        public class SetProxyHeaderRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new SetProxyHeader request.</summary>
            public SetProxyHeaderRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.TargetTcpProxiesSetProxyHeaderRequest body, string project, string targetTcpProxy)
                : base(service)
            {
                Project = project;
                TargetTcpProxy = targetTcpProxy;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the TargetTcpProxy resource whose ProxyHeader is to be set.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetTcpProxy", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetTcpProxy { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.TargetTcpProxiesSetProxyHeaderRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "setProxyHeader"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/targetTcpProxies/{targetTcpProxy}/setProxyHeader"; }
            }

            /// <summary>Initializes SetProxyHeader parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "targetTcpProxy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetTcpProxy",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }
    }

    /// <summary>The "targetVpnGateways" collection of methods.</summary>
    public class TargetVpnGatewaysResource
    {
        private const string Resource = "targetVpnGateways";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public TargetVpnGatewaysResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Retrieves an aggregated list of target VPN gateways.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual AggregatedListRequest AggregatedList(string project)
        {
            return new AggregatedListRequest(service, project);
        }

        /// <summary>Retrieves an aggregated list of target VPN gateways.</summary>
        public class AggregatedListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.TargetVpnGatewayAggregatedList>
        {
            /// <summary>Constructs a new AggregatedList request.</summary>
            public AggregatedListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "aggregatedList"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/aggregated/targetVpnGateways"; }
            }

            /// <summary>Initializes AggregatedList parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Deletes the specified target VPN gateway.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region for this
        /// request.</param>
        /// <param name="targetVpnGateway">Name of the target VPN gateway to delete.</param>
        public virtual DeleteRequest Delete(string project, string region, string targetVpnGateway)
        {
            return new DeleteRequest(service, project, region, targetVpnGateway);
        }

        /// <summary>Deletes the specified target VPN gateway.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string region, string targetVpnGateway)
                : base(service)
            {
                Project = project;
                Region = region;
                TargetVpnGateway = targetVpnGateway;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the target VPN gateway to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetVpnGateway", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetVpnGateway { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/targetVpnGateways/{targetVpnGateway}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "targetVpnGateway", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetVpnGateway",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified target VPN gateway. Get a list of available target VPN gateways by making a
        /// list() request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region for this
        /// request.</param>
        /// <param name="targetVpnGateway">Name of the target VPN gateway to return.</param>
        public virtual GetRequest Get(string project, string region, string targetVpnGateway)
        {
            return new GetRequest(service, project, region, targetVpnGateway);
        }

        /// <summary>Returns the specified target VPN gateway. Get a list of available target VPN gateways by making a
        /// list() request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.TargetVpnGateway>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string region, string targetVpnGateway)
                : base(service)
            {
                Project = project;
                Region = region;
                TargetVpnGateway = targetVpnGateway;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the target VPN gateway to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetVpnGateway", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetVpnGateway { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/targetVpnGateways/{targetVpnGateway}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "targetVpnGateway", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetVpnGateway",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates a target VPN gateway in the specified project and region using the data included in the
        /// request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region for this
        /// request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.TargetVpnGateway body, string project, string region)
        {
            return new InsertRequest(service, body, project, region);
        }

        /// <summary>Creates a target VPN gateway in the specified project and region using the data included in the
        /// request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.TargetVpnGateway body, string project, string region)
                : base(service)
            {
                Project = project;
                Region = region;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.TargetVpnGateway Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/targetVpnGateways"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Retrieves a list of target VPN gateways available to the specified project and region.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region for this
        /// request.</param>
        public virtual ListRequest List(string project, string region)
        {
            return new ListRequest(service, project, region);
        }

        /// <summary>Retrieves a list of target VPN gateways available to the specified project and region.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.TargetVpnGatewayList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project, string region)
                : base(service)
            {
                Project = project;
                Region = region;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/targetVpnGateways"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "urlMaps" collection of methods.</summary>
    public class UrlMapsResource
    {
        private const string Resource = "urlMaps";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public UrlMapsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes the specified UrlMap resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="urlMap">Name of the UrlMap resource
        /// to delete.</param>
        public virtual DeleteRequest Delete(string project, string urlMap)
        {
            return new DeleteRequest(service, project, urlMap);
        }

        /// <summary>Deletes the specified UrlMap resource.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string urlMap)
                : base(service)
            {
                Project = project;
                UrlMap = urlMap;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the UrlMap resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("urlMap", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string UrlMap { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/urlMaps/{urlMap}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "urlMap", new Google.Apis.Discovery.Parameter
                    {
                        Name = "urlMap",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified UrlMap resource. Get a list of available URL maps by making a list()
        /// request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="urlMap">Name of the UrlMap resource
        /// to return.</param>
        public virtual GetRequest Get(string project, string urlMap)
        {
            return new GetRequest(service, project, urlMap);
        }

        /// <summary>Returns the specified UrlMap resource. Get a list of available URL maps by making a list()
        /// request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.UrlMap>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string urlMap)
                : base(service)
            {
                Project = project;
                UrlMap = urlMap;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the UrlMap resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("urlMap", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string UrlMap { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/urlMaps/{urlMap}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "urlMap", new Google.Apis.Discovery.Parameter
                    {
                        Name = "urlMap",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates a UrlMap resource in the specified project using the data included in the
        /// request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.UrlMap body, string project)
        {
            return new InsertRequest(service, body, project);
        }

        /// <summary>Creates a UrlMap resource in the specified project using the data included in the
        /// request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.UrlMap body, string project)
                : base(service)
            {
                Project = project;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.UrlMap Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/urlMaps"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
            }

        }

        /// <summary>Initiates a cache invalidation operation, invalidating the specified path, scoped to the specified
        /// UrlMap.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="urlMap">Name of the UrlMap scoping
        /// this request.</param>
        public virtual InvalidateCacheRequest InvalidateCache(Google.Apis.Compute.v1.Data.CacheInvalidationRule body, string project, string urlMap)
        {
            return new InvalidateCacheRequest(service, body, project, urlMap);
        }

        /// <summary>Initiates a cache invalidation operation, invalidating the specified path, scoped to the specified
        /// UrlMap.</summary>
        public class InvalidateCacheRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new InvalidateCache request.</summary>
            public InvalidateCacheRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.CacheInvalidationRule body, string project, string urlMap)
                : base(service)
            {
                Project = project;
                UrlMap = urlMap;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the UrlMap scoping this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("urlMap", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string UrlMap { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.CacheInvalidationRule Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "invalidateCache"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/urlMaps/{urlMap}/invalidateCache"; }
            }

            /// <summary>Initializes InvalidateCache parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "urlMap", new Google.Apis.Discovery.Parameter
                    {
                        Name = "urlMap",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Retrieves the list of UrlMap resources available to the specified project.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual ListRequest List(string project)
        {
            return new ListRequest(service, project);
        }

        /// <summary>Retrieves the list of UrlMap resources available to the specified project.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.UrlMapList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/urlMaps"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Patches the specified UrlMap resource with the data included in the request. This method supports
        /// patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="urlMap">Name of the UrlMap resource
        /// to patch.</param>
        public virtual PatchRequest Patch(Google.Apis.Compute.v1.Data.UrlMap body, string project, string urlMap)
        {
            return new PatchRequest(service, body, project, urlMap);
        }

        /// <summary>Patches the specified UrlMap resource with the data included in the request. This method supports
        /// patch semantics.</summary>
        public class PatchRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.UrlMap body, string project, string urlMap)
                : base(service)
            {
                Project = project;
                UrlMap = urlMap;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the UrlMap resource to patch.</summary>
            [Google.Apis.Util.RequestParameterAttribute("urlMap", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string UrlMap { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.UrlMap Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/urlMaps/{urlMap}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "urlMap", new Google.Apis.Discovery.Parameter
                    {
                        Name = "urlMap",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Updates the specified UrlMap resource with the data included in the request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="urlMap">Name of the UrlMap resource
        /// to update.</param>
        public virtual UpdateRequest Update(Google.Apis.Compute.v1.Data.UrlMap body, string project, string urlMap)
        {
            return new UpdateRequest(service, body, project, urlMap);
        }

        /// <summary>Updates the specified UrlMap resource with the data included in the request.</summary>
        public class UpdateRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.UrlMap body, string project, string urlMap)
                : base(service)
            {
                Project = project;
                UrlMap = urlMap;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the UrlMap resource to update.</summary>
            [Google.Apis.Util.RequestParameterAttribute("urlMap", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string UrlMap { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.UrlMap Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/urlMaps/{urlMap}"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "urlMap", new Google.Apis.Discovery.Parameter
                    {
                        Name = "urlMap",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Runs static validation for the UrlMap. In particular, the tests of the provided UrlMap will be run.
        /// Calling this method does NOT create the UrlMap.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="urlMap">Name of the UrlMap resource
        /// to be validated as.</param>
        public virtual ValidateRequest Validate(Google.Apis.Compute.v1.Data.UrlMapsValidateRequest body, string project, string urlMap)
        {
            return new ValidateRequest(service, body, project, urlMap);
        }

        /// <summary>Runs static validation for the UrlMap. In particular, the tests of the provided UrlMap will be run.
        /// Calling this method does NOT create the UrlMap.</summary>
        public class ValidateRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.UrlMapsValidateResponse>
        {
            /// <summary>Constructs a new Validate request.</summary>
            public ValidateRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.UrlMapsValidateRequest body, string project, string urlMap)
                : base(service)
            {
                Project = project;
                UrlMap = urlMap;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the UrlMap resource to be validated as.</summary>
            [Google.Apis.Util.RequestParameterAttribute("urlMap", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string UrlMap { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.UrlMapsValidateRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "validate"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/global/urlMaps/{urlMap}/validate"; }
            }

            /// <summary>Initializes Validate parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "urlMap", new Google.Apis.Discovery.Parameter
                    {
                        Name = "urlMap",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }
    }

    /// <summary>The "vpnTunnels" collection of methods.</summary>
    public class VpnTunnelsResource
    {
        private const string Resource = "vpnTunnels";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public VpnTunnelsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Retrieves an aggregated list of VPN tunnels.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual AggregatedListRequest AggregatedList(string project)
        {
            return new AggregatedListRequest(service, project);
        }

        /// <summary>Retrieves an aggregated list of VPN tunnels.</summary>
        public class AggregatedListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.VpnTunnelAggregatedList>
        {
            /// <summary>Constructs a new AggregatedList request.</summary>
            public AggregatedListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "aggregatedList"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/aggregated/vpnTunnels"; }
            }

            /// <summary>Initializes AggregatedList parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Deletes the specified VpnTunnel resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region for this
        /// request.</param>
        /// <param name="vpnTunnel">Name of the VpnTunnel resource to delete.</param>
        public virtual DeleteRequest Delete(string project, string region, string vpnTunnel)
        {
            return new DeleteRequest(service, project, region, vpnTunnel);
        }

        /// <summary>Deletes the specified VpnTunnel resource.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string region, string vpnTunnel)
                : base(service)
            {
                Project = project;
                Region = region;
                VpnTunnel = vpnTunnel;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the VpnTunnel resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("vpnTunnel", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string VpnTunnel { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/vpnTunnels/{vpnTunnel}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "vpnTunnel", new Google.Apis.Discovery.Parameter
                    {
                        Name = "vpnTunnel",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Returns the specified VpnTunnel resource. Get a list of available VPN tunnels by making a list()
        /// request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region for this
        /// request.</param>
        /// <param name="vpnTunnel">Name of the VpnTunnel resource to return.</param>
        public virtual GetRequest Get(string project, string region, string vpnTunnel)
        {
            return new GetRequest(service, project, region, vpnTunnel);
        }

        /// <summary>Returns the specified VpnTunnel resource. Get a list of available VPN tunnels by making a list()
        /// request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.VpnTunnel>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string region, string vpnTunnel)
                : base(service)
            {
                Project = project;
                Region = region;
                VpnTunnel = vpnTunnel;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Name of the VpnTunnel resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("vpnTunnel", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string VpnTunnel { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/vpnTunnels/{vpnTunnel}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "vpnTunnel", new Google.Apis.Discovery.Parameter
                    {
                        Name = "vpnTunnel",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Creates a VpnTunnel resource in the specified project and region using the data included in the
        /// request.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region for this
        /// request.</param>
        public virtual InsertRequest Insert(Google.Apis.Compute.v1.Data.VpnTunnel body, string project, string region)
        {
            return new InsertRequest(service, body, project, region);
        }

        /// <summary>Creates a VpnTunnel resource in the specified project and region using the data included in the
        /// request.</summary>
        public class InsertRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Compute.v1.Data.VpnTunnel body, string project, string region)
                : base(service)
            {
                Project = project;
                Region = region;
                Body = body;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Compute.v1.Data.VpnTunnel Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/vpnTunnels"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Retrieves a list of VpnTunnel resources contained in the specified project and region.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="region">Name of the region for this
        /// request.</param>
        public virtual ListRequest List(string project, string region)
        {
            return new ListRequest(service, project, region);
        }

        /// <summary>Retrieves a list of VpnTunnel resources contained in the specified project and region.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.VpnTunnelList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project, string region)
                : base(service)
            {
                Project = project;
                Region = region;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the region for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("region", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Region { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/regions/{region}/vpnTunnels"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "region", new Google.Apis.Discovery.Parameter
                    {
                        Name = "region",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "zoneOperations" collection of methods.</summary>
    public class ZoneOperationsResource
    {
        private const string Resource = "zoneOperations";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ZoneOperationsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes the specified zone-specific Operations resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">Name of the zone for this
        /// request.</param>
        /// <param name="operation">Name of the Operations resource to delete.</param>
        public virtual DeleteRequest Delete(string project, string zone, string operation)
        {
            return new DeleteRequest(service, project, zone, operation);
        }

        /// <summary>Deletes the specified zone-specific Operations resource.</summary>
        public class DeleteRequest : ComputeBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string project, string zone, string operation)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Operation = operation;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Name of the Operations resource to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("operation", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Operation { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/operations/{operation}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "operation", new Google.Apis.Discovery.Parameter
                    {
                        Name = "operation",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Retrieves the specified zone-specific Operations resource.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">Name of the zone for this
        /// request.</param>
        /// <param name="operation">Name of the Operations resource to return.</param>
        public virtual GetRequest Get(string project, string zone, string operation)
        {
            return new GetRequest(service, project, zone, operation);
        }

        /// <summary>Retrieves the specified zone-specific Operations resource.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Operation>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string zone, string operation)
                : base(service)
            {
                Project = project;
                Zone = zone;
                Operation = operation;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the zone for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Name of the Operations resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("operation", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Operation { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/operations/{operation}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "operation", new Google.Apis.Discovery.Parameter
                    {
                        Name = "operation",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Retrieves a list of Operation resources contained within the specified zone.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">Name of the zone for
        /// request.</param>
        public virtual ListRequest List(string project, string zone)
        {
            return new ListRequest(service, project, zone);
        }

        /// <summary>Retrieves a list of Operation resources contained within the specified zone.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.OperationList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project, string zone)
                : base(service)
            {
                Project = project;
                Zone = zone;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the zone for request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}/operations"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "zones" collection of methods.</summary>
    public class ZonesResource
    {
        private const string Resource = "zones";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ZonesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Returns the specified Zone resource. Get a list of available zones by making a list()
        /// request.</summary>
        /// <param name="project">Project ID for this request.</param>
        /// <param name="zone">Name of the zone resource to
        /// return.</param>
        public virtual GetRequest Get(string project, string zone)
        {
            return new GetRequest(service, project, zone);
        }

        /// <summary>Returns the specified Zone resource. Get a list of available zones by making a list()
        /// request.</summary>
        public class GetRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.Zone>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string project, string zone)
                : base(service)
            {
                Project = project;
                Zone = zone;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Name of the zone resource to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("zone", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Zone { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones/{zone}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "zone", new Google.Apis.Discovery.Parameter
                    {
                        Name = "zone",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    });
            }

        }

        /// <summary>Retrieves the list of Zone resources available to the specified project.</summary>
        /// <param name="project">Project ID for this request.</param>
        public virtual ListRequest List(string project)
        {
            return new ListRequest(service, project);
        }

        /// <summary>Retrieves the list of Zone resources available to the specified project.</summary>
        public class ListRequest : ComputeBaseServiceRequest<Google.Apis.Compute.v1.Data.ZoneList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string project)
                : base(service)
            {
                Project = project;
                InitParameters();
            }


            /// <summary>Project ID for this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }

            /// <summary>Sets a filter {expression} for filtering listed resources. Your {expression} must be in the
            /// format: field_name comparison_string literal_string.
            ///
            /// The field_name is the name of the field you want to compare. Only atomic field types are supported
            /// (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The
            /// literal_string is the string value to filter to. The literal value must be valid for the type of field
            /// you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a
            /// regular expression using RE2 syntax. The literal value must match the entire field.
            ///
            /// For example, to filter for instances that do not have a name of example-instance, you would use name ne
            /// example-instance.
            ///
            /// You can filter on nested fields. For example, you could filter on instances that have set the
            /// scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to
            /// organize and search for results based on label values.
            ///
            /// To filter on multiple expressions, provide each separate expression within parentheses. For example,
            /// (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND
            /// expressions, meaning that resources must match all expressions to pass the filters.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Filter { get; set; }

            /// <summary>The maximum number of results per page that should be returned. If the number of available
            /// results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the
            /// next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default:
            /// 500)</summary>
            /// [default: 500]
            /// [minimum: 0]
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults { get; set; }

            /// <summary>Sorts list results by a certain order. By default, results are returned in alphanumerical order
            /// based on the resource name.
            ///
            /// You can also sort results in descending order based on the creation timestamp using
            /// orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse
            /// chronological order (newest result first). Use this to sort resources like operations so that the newest
            /// operation is returned first.
            ///
            /// Currently, only sorting by name or creationTimestamp desc is supported.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OrderBy { get; set; }

            /// <summary>Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list
            /// request to get the next page of results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{project}/zones"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"(?:(?:[-a-z0-9]{1,63}\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                    });
                RequestParameters.Add(
                    "filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "500",
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderBy", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderBy",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }
}

namespace Google.Apis.Compute.v1.Data
{    

    /// <summary>An access configuration attached to an instance's network interface. Only one access config per
    /// instance is supported.</summary>
    public class AccessConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Type of the resource. Always compute#accessConfig for access configs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The name of this access configuration. The default and recommended name is External NAT but you can
        /// use any arbitrary string you would like. For example, My external IP or Network Access.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>An external IP address associated with this instance. Specify an unused static external IP address
        /// available to the project or leave this field undefined to use an IP from a shared ephemeral IP address pool.
        /// If you specify a static external IP address, it must live in the same region as the zone of the
        /// instance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("natIP")]
        public virtual string NatIP { get; set; } 

        /// <summary>The type of configuration. The default and only option is ONE_TO_ONE_NAT.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A reserved address resource.</summary>
    public class Address : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The static external IP address represented by this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("address")]
        public virtual string AddressValue { get; set; } 

        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>The IP Version that will be used by this address. Valid options are IPV4 or IPV6. This can only be
        /// specified for a global address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ipVersion")]
        public virtual string IpVersion { get; set; } 

        /// <summary>[Output Only] Type of the resource. Always compute#address for addresses.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of the resource. Provided by the client when the resource is created. The name must be 1-63
        /// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the
        /// regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter,
        /// and all following characters must be a dash, lowercase letter, or digit, except the last character, which
        /// cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>[Output Only] URL of the region where the regional address resides. This field is not applicable to
        /// global addresses.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("region")]
        public virtual string Region { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>[Output Only] The status of the address, which can be either IN_USE or RESERVED. An address that is
        /// RESERVED is currently reserved and available to use. An IN_USE address is currently being used by another
        /// resource and is not available.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>[Output Only] The URLs of the resources that are using this address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("users")]
        public virtual System.Collections.Generic.IList<string> Users { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class AddressAggregatedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Unique identifier for the resource; defined by the server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output Only] A map of scoped address lists.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IDictionary<string,AddressesScopedList> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#addressAggregatedList for aggregated lists of
        /// addresses.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of addresses.</summary>
    public class AddressList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output Only] A list of addresses.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Address> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#addressList for lists of addresses.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class AddressesScopedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] List of addresses contained in this scope.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("addresses")]
        public virtual System.Collections.Generic.IList<Address> Addresses { get; set; } 

        /// <summary>[Output Only] Informational warning which replaces the list of addresses when the list is
        /// empty.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("warning")]
        public virtual AddressesScopedList.WarningData Warning { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        /// <summary>[Output Only] Informational warning which replaces the list of addresses when the list is
        /// empty.</summary>
        public class WarningData
        {
            /// <summary>[Output Only] A warning code, if applicable. For example, Compute Engine returns
            /// NO_RESULTS_ON_PAGE if there are no results in the response.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("code")]
            public virtual string Code { get; set; } 

            /// <summary>[Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key":
            /// "scope", "value": "zones/us-east1-d" }</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("data")]
            public virtual System.Collections.Generic.IList<WarningData.DataData> Data { get; set; } 

            /// <summary>[Output Only] A human-readable description of the warning code.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("message")]
            public virtual string Message { get; set; } 

            

            public class DataData
            {
                /// <summary>[Output Only] A key that provides more detail on the warning being returned. For example,
                /// for warnings where there are no results in a list request for a particular zone, this key might be
                /// scope and the key value might be the zone name. Other examples might be a key indicating a
                /// deprecated resource and a suggested replacement, or a warning about invalid network settings (for
                /// example, if an instance attempts to perform IP forwarding but is not enabled for IP
                /// forwarding).</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("key")]
                public virtual string Key { get; set; } 

                /// <summary>[Output Only] A warning data value corresponding to the key.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("value")]
                public virtual string Value { get; set; } 

            }
        }
    }    

    /// <summary>An instance-attached disk resource.</summary>
    public class AttachedDisk : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk
        /// is detached from the instance).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("autoDelete")]
        public virtual System.Nullable<bool> AutoDelete { get; set; } 

        /// <summary>Indicates that this is a boot disk. The virtual machine will use the first partition of the disk
        /// for its root filesystem.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boot")]
        public virtual System.Nullable<bool> Boot { get; set; } 

        /// <summary>Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-*
        /// tree of a Linux operating system running within the instance. This name can be used to reference the device
        /// for mounting, resizing, and so on, from within the instance.
        ///
        /// If not specified, the server chooses a default device name to apply to this disk, in the form persistent-
        /// disks-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent
        /// disks.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deviceName")]
        public virtual string DeviceName { get; set; } 

        /// <summary>Encrypts or decrypts a disk using a customer-supplied encryption key.
        ///
        /// If you are creating a new disk, this field encrypts the new disk using an encryption key that you provide.
        /// If you are attaching an existing disk that is already encrypted, this field decrypts the disk using the
        /// customer-supplied encryption key.
        ///
        /// If you encrypt a disk using a customer-supplied key, you must provide the same key again when you attempt to
        /// use this resource at a later time. For example, you must provide the key when you create a snapshot or an
        /// image from the disk or when you attach the disk to a virtual machine instance.
        ///
        /// If you do not provide an encryption key, then the disk will be encrypted using an automatically generated
        /// key and you do not need to provide a key to use the disk later.
        ///
        /// Instance templates do not store customer-supplied encryption keys, so you cannot use your own keys to
        /// encrypt disks in a managed instance group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diskEncryptionKey")]
        public virtual CustomerEncryptionKey DiskEncryptionKey { get; set; } 

        /// <summary>Assigns a zero-based index to this disk, where 0 is reserved for the boot disk. For example, if you
        /// have many disks attached to an instance, each disk would have a unique index number. If not specified, the
        /// server will choose an appropriate value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("index")]
        public virtual System.Nullable<int> Index { get; set; } 

        /// <summary>[Input Only] Specifies the parameters for a new disk that will be created alongside the new
        /// instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance.
        ///
        /// This property is mutually exclusive with the source property; you can only define one or the other, but not
        /// both.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("initializeParams")]
        public virtual AttachedDiskInitializeParams InitializeParams { get; set; } 

        /// <summary>Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The
        /// default is SCSI. Persistent disks must always use SCSI and the request will fail if you attempt to attach a
        /// persistent disk in any other format than SCSI. Local SSDs can use either NVME or SCSI. For performance
        /// characteristics of SCSI over NVMe, see Local SSD performance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("interface")]
        public virtual string Interface__ { get; set; } 

        /// <summary>[Output Only] Type of the resource. Always compute#attachedDisk for attached disks.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] Any valid publicly visible licenses.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("licenses")]
        public virtual System.Collections.Generic.IList<string> Licenses { get; set; } 

        /// <summary>The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the
        /// default is to attach the disk in READ_WRITE mode.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mode")]
        public virtual string Mode { get; set; } 

        /// <summary>Specifies a valid partial or full URL to an existing Persistent Disk resource. When creating a new
        /// instance, one of initializeParams.sourceImage or disks.source is required.
        ///
        /// If desired, you can also attach existing non-root persistent disks using this property. This field is only
        /// applicable for persistent disks.
        ///
        /// Note that for InstanceTemplate, specify the disk name, not the URL for the disk.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("source")]
        public virtual string Source { get; set; } 

        /// <summary>Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is
        /// PERSISTENT.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>[Input Only] Specifies the parameters for a new disk that will be created alongside the new instance.
    /// Use initialization parameters to create boot disks or local SSDs attached to the new instance.
    ///
    /// This property is mutually exclusive with the source property; you can only define one or the other, but not
    /// both.</summary>
    public class AttachedDiskInitializeParams : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Specifies the disk name. If not specified, the default is to use the name of the
        /// instance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diskName")]
        public virtual string DiskName { get; set; } 

        /// <summary>Specifies the size of the disk in base-2 GB.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diskSizeGb")]
        public virtual System.Nullable<long> DiskSizeGb { get; set; } 

        /// <summary>Specifies the disk type to use to create the instance. If not specified, the default is pd-
        /// standard, specified using the full URL. For example:
        ///
        /// https://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/pd-standard
        ///
        /// Other values include pd-ssd and local-ssd. If you define this field, you can provide either the full or
        /// partial URL. For example, the following are valid values: -
        /// https://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/diskType -
        /// projects/project/zones/zone/diskTypes/diskType - zones/zone/diskTypes/diskType  Note that for
        /// InstanceTemplate, this is the name of the disk type, not URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diskType")]
        public virtual string DiskType { get; set; } 

        /// <summary>The source image to create this disk. When creating a new instance, one of
        /// initializeParams.sourceImage or disks.source is required.
        ///
        /// To create a disk with one of the public operating system images, specify the image by its family name. For
        /// example, specify family/debian-8 to use the latest Debian 8 image:
        ///
        /// projects/debian-cloud/global/images/family/debian-8
        ///
        /// Alternatively, use a specific version of a public operating system image:
        ///
        /// projects/debian-cloud/global/images/debian-8-jessie-vYYYYMMDD
        ///
        /// To create a disk with a private image that you created, specify the image name in the following format:
        ///
        /// global/images/my-private-image
        ///
        /// You can also specify a private image by its image family, which returns the latest version of the image in
        /// that family. Replace the image name with family/family-name:
        ///
        /// global/images/family/my-private-family
        ///
        /// If the source image is deleted later, this field will not be set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceImage")]
        public virtual string SourceImage { get; set; } 

        /// <summary>The customer-supplied encryption key of the source image. Required if the source image is protected
        /// by a customer-supplied encryption key.
        ///
        /// Instance templates do not store customer-supplied encryption keys, so you cannot create disks for instances
        /// in a managed instance group if the source images are encrypted with your own keys.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceImageEncryptionKey")]
        public virtual CustomerEncryptionKey SourceImageEncryptionKey { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents an Autoscaler resource. Autoscalers allow you to automatically scale virtual machine
    /// instances in managed instance groups according to an autoscaling policy that you define. For more information,
    /// read Autoscaling Groups of Instances.</summary>
    public class Autoscaler : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The configuration parameters for the autoscaling algorithm. You can define one or more of the
        /// policies for an autoscaler: cpuUtilization, customMetricUtilizations, and loadBalancingUtilization.
        ///
        /// If none of these are specified, the default will be to autoscale based on cpuUtilization to 0.6 or
        /// 60%.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("autoscalingPolicy")]
        public virtual AutoscalingPolicy AutoscalingPolicy { get; set; } 

        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>[Output Only] Type of the resource. Always compute#autoscaler for autoscalers.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of the resource. Provided by the client when the resource is created. The name must be 1-63
        /// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the
        /// regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter,
        /// and all following characters must be a dash, lowercase letter, or digit, except the last character, which
        /// cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>[Output Only] URL of the region where the instance group resides (for autoscalers living in
        /// regional scope).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("region")]
        public virtual string Region { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>URL of the managed instance group that this autoscaler will scale.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("target")]
        public virtual string Target { get; set; } 

        /// <summary>[Output Only] URL of the zone where the instance group resides (for autoscalers living in zonal
        /// scope).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("zone")]
        public virtual string Zone { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class AutoscalerAggregatedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A map of scoped autoscaler lists.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IDictionary<string,AutoscalersScopedList> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#autoscalerAggregatedList for aggregated lists of
        /// autoscalers.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of Autoscaler resources.</summary>
    public class AutoscalerList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A list of Autoscaler resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Autoscaler> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#autoscalerList for lists of autoscalers.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class AutoscalersScopedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] List of autoscalers contained in this scope.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("autoscalers")]
        public virtual System.Collections.Generic.IList<Autoscaler> Autoscalers { get; set; } 

        /// <summary>[Output Only] Informational warning which replaces the list of autoscalers when the list is
        /// empty.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("warning")]
        public virtual AutoscalersScopedList.WarningData Warning { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        /// <summary>[Output Only] Informational warning which replaces the list of autoscalers when the list is
        /// empty.</summary>
        public class WarningData
        {
            /// <summary>[Output Only] A warning code, if applicable. For example, Compute Engine returns
            /// NO_RESULTS_ON_PAGE if there are no results in the response.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("code")]
            public virtual string Code { get; set; } 

            /// <summary>[Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key":
            /// "scope", "value": "zones/us-east1-d" }</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("data")]
            public virtual System.Collections.Generic.IList<WarningData.DataData> Data { get; set; } 

            /// <summary>[Output Only] A human-readable description of the warning code.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("message")]
            public virtual string Message { get; set; } 

            

            public class DataData
            {
                /// <summary>[Output Only] A key that provides more detail on the warning being returned. For example,
                /// for warnings where there are no results in a list request for a particular zone, this key might be
                /// scope and the key value might be the zone name. Other examples might be a key indicating a
                /// deprecated resource and a suggested replacement, or a warning about invalid network settings (for
                /// example, if an instance attempts to perform IP forwarding but is not enabled for IP
                /// forwarding).</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("key")]
                public virtual string Key { get; set; } 

                /// <summary>[Output Only] A warning data value corresponding to the key.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("value")]
                public virtual string Value { get; set; } 

            }
        }
    }    

    /// <summary>Cloud Autoscaler policy.</summary>
    public class AutoscalingPolicy : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The number of seconds that the autoscaler should wait before it starts collecting information from
        /// a new instance. This prevents the autoscaler from collecting information when the instance is initializing,
        /// during which the collected usage would not be reliable. The default time autoscaler waits is 60 seconds.
        ///
        /// Virtual machine initialization times might vary because of numerous factors. We recommend that you test how
        /// long an instance may take to initialize. To do this, create an instance and time the startup
        /// process.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("coolDownPeriodSec")]
        public virtual System.Nullable<int> CoolDownPeriodSec { get; set; } 

        /// <summary>Defines the CPU utilization policy that allows the autoscaler to scale based on the average CPU
        /// utilization of a managed instance group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cpuUtilization")]
        public virtual AutoscalingPolicyCpuUtilization CpuUtilization { get; set; } 

        /// <summary>Configuration parameters of autoscaling based on a custom metric.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customMetricUtilizations")]
        public virtual System.Collections.Generic.IList<AutoscalingPolicyCustomMetricUtilization> CustomMetricUtilizations { get; set; } 

        /// <summary>Configuration parameters of autoscaling based on load balancer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("loadBalancingUtilization")]
        public virtual AutoscalingPolicyLoadBalancingUtilization LoadBalancingUtilization { get; set; } 

        /// <summary>The maximum number of instances that the autoscaler can scale up to. This is required when creating
        /// or updating an autoscaler. The maximum number of replicas should not be lower than minimal number of
        /// replicas.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxNumReplicas")]
        public virtual System.Nullable<int> MaxNumReplicas { get; set; } 

        /// <summary>The minimum number of replicas that the autoscaler can scale down to. This cannot be less than 0.
        /// If not provided, autoscaler will choose a default value depending on maximum number of instances
        /// allowed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("minNumReplicas")]
        public virtual System.Nullable<int> MinNumReplicas { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>CPU utilization policy.</summary>
    public class AutoscalingPolicyCpuUtilization : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The target CPU utilization that the autoscaler should maintain. Must be a float value in the range
        /// (0, 1]. If not specified, the default is 0.6.
        ///
        /// If the CPU level is below the target utilization, the autoscaler scales down the number of instances until
        /// it reaches the minimum number of instances you specified or until the average CPU of your instances reaches
        /// the target utilization.
        ///
        /// If the average CPU is above the target utilization, the autoscaler scales up until it reaches the maximum
        /// number of instances you specified or until the average utilization reaches the target utilization.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("utilizationTarget")]
        public virtual System.Nullable<double> UtilizationTarget { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Custom utilization metric policy.</summary>
    public class AutoscalingPolicyCustomMetricUtilization : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The identifier (type) of the Stackdriver Monitoring metric. The metric cannot have negative values
        /// and should be a utilization metric, which means that the number of virtual machines handling requests should
        /// increase or decrease proportionally to the metric.
        ///
        /// The metric must have a value type of INT64 or DOUBLE.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metric")]
        public virtual string Metric { get; set; } 

        /// <summary>The target value of the metric that autoscaler should maintain. This must be a positive value.
        ///
        /// For example, a good metric to use as a utilization_target is
        /// compute.googleapis.com/instance/network/received_bytes_count. The autoscaler will work to keep this value
        /// constant for each of the instances.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("utilizationTarget")]
        public virtual System.Nullable<double> UtilizationTarget { get; set; } 

        /// <summary>Defines how target utilization value is expressed for a Stackdriver Monitoring metric. Either
        /// GAUGE, DELTA_PER_SECOND, or DELTA_PER_MINUTE. If not specified, the default is GAUGE.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("utilizationTargetType")]
        public virtual string UtilizationTargetType { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Configuration parameters of autoscaling based on load balancing.</summary>
    public class AutoscalingPolicyLoadBalancingUtilization : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Fraction of backend capacity utilization (set in HTTP(s) load balancing configuration) that
        /// autoscaler should maintain. Must be a positive float value. If not defined, the default is 0.8.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("utilizationTarget")]
        public virtual System.Nullable<double> UtilizationTarget { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Message containing information of one individual backend.</summary>
    public class Backend : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Specifies the balancing mode for this backend. For global HTTP(S) or TCP/SSL load balancing, the
        /// default is UTILIZATION. Valid values are UTILIZATION, RATE (for HTTP(S)) and CONNECTION (for TCP/SSL).
        ///
        /// This cannot be used for internal load balancing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("balancingMode")]
        public virtual string BalancingMode { get; set; } 

        /// <summary>A multiplier applied to the group's maximum servicing capacity (based on UTILIZATION, RATE or
        /// CONNECTION). Default value is 1, which means the group will serve up to 100% of its configured capacity
        /// (depending on balancingMode). A setting of 0 means the group is completely drained, offering 0% of its
        /// available Capacity. Valid range is [0.0,1.0].
        ///
        /// This cannot be used for internal load balancing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("capacityScaler")]
        public virtual System.Nullable<float> CapacityScaler { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>The fully-qualified URL of a zonal Instance Group resource. This instance group defines the list of
        /// instances that serve traffic. Member virtual machine instances from each instance group must live in the
        /// same zone as the instance group itself. No two backends in a backend service are allowed to use same
        /// Instance Group resource.
        ///
        /// Note that you must specify an Instance Group resource using the fully-qualified URL, rather than a partial
        /// URL.
        ///
        /// When the BackendService has load balancing scheme INTERNAL, the instance group must be in a zone within the
        /// same region as the BackendService.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("group")]
        public virtual string Group { get; set; } 

        /// <summary>The max number of simultaneous connections for the group. Can be used with either CONNECTION or
        /// UTILIZATION balancing modes. For CONNECTION mode, either maxConnections or maxConnectionsPerInstance must be
        /// set.
        ///
        /// This cannot be used for internal load balancing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxConnections")]
        public virtual System.Nullable<int> MaxConnections { get; set; } 

        /// <summary>The max number of simultaneous connections that a single backend instance can handle. This is used
        /// to calculate the capacity of the group. Can be used in either CONNECTION or UTILIZATION balancing modes. For
        /// CONNECTION mode, either maxConnections or maxConnectionsPerInstance must be set.
        ///
        /// This cannot be used for internal load balancing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxConnectionsPerInstance")]
        public virtual System.Nullable<int> MaxConnectionsPerInstance { get; set; } 

        /// <summary>The max requests per second (RPS) of the group. Can be used with either RATE or UTILIZATION
        /// balancing modes, but required if RATE mode. For RATE mode, either maxRate or maxRatePerInstance must be set.
        ///
        /// This cannot be used for internal load balancing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxRate")]
        public virtual System.Nullable<int> MaxRate { get; set; } 

        /// <summary>The max requests per second (RPS) that a single backend instance can handle. This is used to
        /// calculate the capacity of the group. Can be used in either balancing mode. For RATE mode, either maxRate or
        /// maxRatePerInstance must be set.
        ///
        /// This cannot be used for internal load balancing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxRatePerInstance")]
        public virtual System.Nullable<float> MaxRatePerInstance { get; set; } 

        /// <summary>Used when balancingMode is UTILIZATION. This ratio defines the CPU utilization target for the
        /// group. The default is 0.8. Valid range is [0.0, 1.0].
        ///
        /// This cannot be used for internal load balancing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxUtilization")]
        public virtual System.Nullable<float> MaxUtilization { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A BackendBucket resource. This resource defines a Cloud Storage bucket.</summary>
    public class BackendBucket : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Cloud Storage bucket name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bucketName")]
        public virtual string BucketName { get; set; } 

        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>An optional textual description of the resource; provided by the client when the resource is
        /// created.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>If true, enable Cloud CDN for this BackendBucket.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableCdn")]
        public virtual System.Nullable<bool> EnableCdn { get; set; } 

        /// <summary>[Output Only] Unique identifier for the resource; defined by the server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>Type of the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of the resource. Provided by the client when the resource is created. The name must be 1-63
        /// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the
        /// regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter,
        /// and all following characters must be a dash, lowercase letter, or digit, except the last character, which
        /// cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of BackendBucket resources.</summary>
    public class BackendBucketList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Unique identifier for the resource; defined by the server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A list of BackendBucket resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<BackendBucket> Items { get; set; } 

        /// <summary>Type of resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] A token used to continue a truncated list request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A BackendService resource. This resource defines a group of backend virtual machines and their serving
    /// capacity.</summary>
    public class BackendService : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Lifetime of cookies in seconds if session_affinity is GENERATED_COOKIE. If set to 0, the cookie is
        /// non-persistent and lasts only until the end of the browser session (or equivalent). The maximum allowed
        /// value for TTL is one day.
        ///
        /// When the load balancing scheme is INTERNAL, this field is not used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("affinityCookieTtlSec")]
        public virtual System.Nullable<int> AffinityCookieTtlSec { get; set; } 

        /// <summary>The list of backends that serve this BackendService.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("backends")]
        public virtual System.Collections.Generic.IList<Backend> Backends { get; set; } 

        /// <summary>Cloud CDN configuration for this BackendService.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cdnPolicy")]
        public virtual BackendServiceCdnPolicy CdnPolicy { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("connectionDraining")]
        public virtual ConnectionDraining ConnectionDraining { get; set; } 

        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>If true, enable Cloud CDN for this BackendService.
        ///
        /// When the load balancing scheme is INTERNAL, this field is not used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableCDN")]
        public virtual System.Nullable<bool> EnableCDN { get; set; } 

        /// <summary>Fingerprint of this resource. A hash of the contents stored in this object. This field is used in
        /// optimistic locking. This field will be ignored when inserting a BackendService. An up-to-date fingerprint
        /// must be provided in order to update the BackendService.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fingerprint")]
        public virtual string Fingerprint { get; set; } 

        /// <summary>The list of URLs to the HttpHealthCheck or HttpsHealthCheck resource for health checking this
        /// BackendService. Currently at most one health check can be specified, and a health check is required.
        ///
        /// For internal load balancing, a URL to a HealthCheck resource must be specified instead.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("healthChecks")]
        public virtual System.Collections.Generic.IList<string> HealthChecks { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("iap")]
        public virtual BackendServiceIAP Iap { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#backendService for backend services.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("loadBalancingScheme")]
        public virtual string LoadBalancingScheme { get; set; } 

        /// <summary>Name of the resource. Provided by the client when the resource is created. The name must be 1-63
        /// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the
        /// regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter,
        /// and all following characters must be a dash, lowercase letter, or digit, except the last character, which
        /// cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Deprecated in favor of portName. The TCP port to connect on the backend. The default value is 80.
        ///
        /// This cannot be used for internal load balancing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("port")]
        public virtual System.Nullable<int> Port { get; set; } 

        /// <summary>Name of backend port. The same name should appear in the instance groups referenced by this
        /// service. Required when the load balancing scheme is EXTERNAL.
        ///
        /// When the load balancing scheme is INTERNAL, this field is not used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("portName")]
        public virtual string PortName { get; set; } 

        /// <summary>The protocol this BackendService uses to communicate with backends.
        ///
        /// Possible values are HTTP, HTTPS, TCP, and SSL. The default is HTTP.
        ///
        /// For internal load balancing, the possible values are TCP and UDP, and the default is TCP.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("protocol")]
        public virtual string Protocol { get; set; } 

        /// <summary>[Output Only] URL of the region where the regional backend service resides. This field is not
        /// applicable to global backend services.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("region")]
        public virtual string Region { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>Type of session affinity to use. The default is NONE.
        ///
        /// When the load balancing scheme is EXTERNAL, can be NONE, CLIENT_IP, or GENERATED_COOKIE.
        ///
        /// When the load balancing scheme is INTERNAL, can be NONE, CLIENT_IP, CLIENT_IP_PROTO, or
        /// CLIENT_IP_PORT_PROTO.
        ///
        /// When the protocol is UDP, this field is not used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sessionAffinity")]
        public virtual string SessionAffinity { get; set; } 

        /// <summary>How many seconds to wait for the backend before considering it a failed request. Default is 30
        /// seconds.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeoutSec")]
        public virtual System.Nullable<int> TimeoutSec { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of BackendServicesScopedList.</summary>
    public class BackendServiceAggregatedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Unique identifier for the resource; defined by the server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A map of scoped BackendService lists.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IDictionary<string,BackendServicesScopedList> Items { get; set; } 

        /// <summary>Type of resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] A token used to continue a truncated list request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Message containing Cloud CDN configuration for a backend service.</summary>
    public class BackendServiceCdnPolicy : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The CacheKeyPolicy for this CdnPolicy.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cacheKeyPolicy")]
        public virtual CacheKeyPolicy CacheKeyPolicy { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class BackendServiceGroupHealth : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("healthStatus")]
        public virtual System.Collections.Generic.IList<HealthStatus> HealthStatus { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#backendServiceGroupHealth for the health of backend
        /// services.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Identity-Aware Proxy</summary>
    public class BackendServiceIAP : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("enabled")]
        public virtual System.Nullable<bool> Enabled { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("oauth2ClientId")]
        public virtual string Oauth2ClientId { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("oauth2ClientSecret")]
        public virtual string Oauth2ClientSecret { get; set; } 

        /// <summary>[Output Only] SHA256 hash value for the field oauth2_client_secret above.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("oauth2ClientSecretSha256")]
        public virtual string Oauth2ClientSecretSha256 { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of BackendService resources.</summary>
    public class BackendServiceList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Unique identifier for the resource; defined by the server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A list of BackendService resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<BackendService> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#backendServiceList for lists of backend
        /// services.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class BackendServicesScopedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of BackendServices contained in this scope.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("backendServices")]
        public virtual System.Collections.Generic.IList<BackendService> BackendServices { get; set; } 

        /// <summary>Informational warning which replaces the list of backend services when the list is empty.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("warning")]
        public virtual BackendServicesScopedList.WarningData Warning { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        /// <summary>Informational warning which replaces the list of backend services when the list is empty.</summary>
        public class WarningData
        {
            /// <summary>[Output Only] A warning code, if applicable. For example, Compute Engine returns
            /// NO_RESULTS_ON_PAGE if there are no results in the response.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("code")]
            public virtual string Code { get; set; } 

            /// <summary>[Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key":
            /// "scope", "value": "zones/us-east1-d" }</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("data")]
            public virtual System.Collections.Generic.IList<WarningData.DataData> Data { get; set; } 

            /// <summary>[Output Only] A human-readable description of the warning code.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("message")]
            public virtual string Message { get; set; } 

            

            public class DataData
            {
                /// <summary>[Output Only] A key that provides more detail on the warning being returned. For example,
                /// for warnings where there are no results in a list request for a particular zone, this key might be
                /// scope and the key value might be the zone name. Other examples might be a key indicating a
                /// deprecated resource and a suggested replacement, or a warning about invalid network settings (for
                /// example, if an instance attempts to perform IP forwarding but is not enabled for IP
                /// forwarding).</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("key")]
                public virtual string Key { get; set; } 

                /// <summary>[Output Only] A warning data value corresponding to the key.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("value")]
                public virtual string Value { get; set; } 

            }
        }
    }    

    public class CacheInvalidationRule : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If set, this invalidation rule will only apply to requests with a Host header matching
        /// host.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("host")]
        public virtual string Host { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("path")]
        public virtual string Path { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Message containing what to include in the cache key for a request for Cloud CDN.</summary>
    public class CacheKeyPolicy : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If true, requests to different hosts will be cached separately.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("includeHost")]
        public virtual System.Nullable<bool> IncludeHost { get; set; } 

        /// <summary>If true, http and https requests will be cached separately.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("includeProtocol")]
        public virtual System.Nullable<bool> IncludeProtocol { get; set; } 

        /// <summary>If true, include query string parameters in the cache key according to query_string_whitelist and
        /// query_string_blacklist. If neither is set, the entire query string will be included. If false, the query
        /// string will be excluded from the cache key entirely.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("includeQueryString")]
        public virtual System.Nullable<bool> IncludeQueryString { get; set; } 

        /// <summary>Names of query string parameters to exclude in cache keys. All other parameters will be included.
        /// Either specify query_string_whitelist or query_string_blacklist, not both. '&' and '=' will be percent
        /// encoded and not treated as delimiters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryStringBlacklist")]
        public virtual System.Collections.Generic.IList<string> QueryStringBlacklist { get; set; } 

        /// <summary>Names of query string parameters to include in cache keys. All other parameters will be excluded.
        /// Either specify query_string_whitelist or query_string_blacklist, not both. '&' and '=' will be percent
        /// encoded and not treated as delimiters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryStringWhitelist")]
        public virtual System.Collections.Generic.IList<string> QueryStringWhitelist { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Message containing connection draining configuration.</summary>
    public class ConnectionDraining : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Time for which instance will be drained (not accept new connections, but still work to finish
        /// started).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("drainingTimeoutSec")]
        public virtual System.Nullable<int> DrainingTimeoutSec { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a customer-supplied encryption key</summary>
    public class CustomerEncryptionKey : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt
        /// or decrypt this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rawKey")]
        public virtual string RawKey { get; set; } 

        /// <summary>[Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that
        /// protects this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sha256")]
        public virtual string Sha256 { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class CustomerEncryptionKeyProtectedDisk : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Decrypts data associated with the disk with a customer-supplied encryption key.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diskEncryptionKey")]
        public virtual CustomerEncryptionKey DiskEncryptionKey { get; set; } 

        /// <summary>Specifies a valid partial or full URL to an existing Persistent Disk resource. This field is only
        /// applicable for persistent disks.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("source")]
        public virtual string Source { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Deprecation status for a public resource.</summary>
    public class DeprecationStatus : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>An optional RFC3339 timestamp on or after which the state of this resource is intended to change to
        /// DELETED. This is only informational and the status will not change unless the client explicitly changes
        /// it.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deleted")]
        public virtual string Deleted { get; set; } 

        /// <summary>An optional RFC3339 timestamp on or after which the state of this resource is intended to change to
        /// DEPRECATED. This is only informational and the status will not change unless the client explicitly changes
        /// it.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deprecated")]
        public virtual string Deprecated { get; set; } 

        /// <summary>An optional RFC3339 timestamp on or after which the state of this resource is intended to change to
        /// OBSOLETE. This is only informational and the status will not change unless the client explicitly changes
        /// it.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("obsolete")]
        public virtual string Obsolete { get; set; } 

        /// <summary>The URL of the suggested replacement for a deprecated resource. The suggested replacement resource
        /// must be the same kind of resource as the deprecated resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("replacement")]
        public virtual string Replacement { get; set; } 

        /// <summary>The deprecation state of this resource. This can be DEPRECATED, OBSOLETE, or DELETED. Operations
        /// which create a new resource using a DEPRECATED resource will return successfully, but with a warning
        /// indicating the deprecated resource and recommending its replacement. Operations which use OBSOLETE or
        /// DELETED resources will be rejected and result in an error.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A Disk resource.</summary>
    public class Disk : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Encrypts the disk using a customer-supplied encryption key.
        ///
        /// After you encrypt a disk with a customer-supplied key, you must provide the same key if you use the disk
        /// later (e.g. to create a disk snapshot or an image, or to attach the disk to a virtual machine).
        ///
        /// Customer-supplied encryption keys do not protect access to metadata of the disk.
        ///
        /// If you do not provide an encryption key when creating the disk, then the disk will be encrypted using an
        /// automatically generated key and you do not need to provide a key to use the disk later.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diskEncryptionKey")]
        public virtual CustomerEncryptionKey DiskEncryptionKey { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>[Output Only] Type of the resource. Always compute#disk for disks.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>A fingerprint for the labels being applied to this disk, which is essentially a hash of the labels
        /// set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after
        /// every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to
        /// update or change labels.
        ///
        /// To see the latest fingerprint, make a get() request to retrieve a disk.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labelFingerprint")]
        public virtual string LabelFingerprint { get; set; } 

        /// <summary>Labels to apply to this disk. These can be later modified by the setLabels method.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IDictionary<string,string> Labels { get; set; } 

        /// <summary>[Output Only] Last attach timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastAttachTimestamp")]
        public virtual string LastAttachTimestamp { get; set; } 

        /// <summary>[Output Only] Last detach timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastDetachTimestamp")]
        public virtual string LastDetachTimestamp { get; set; } 

        /// <summary>Any applicable publicly visible licenses.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("licenses")]
        public virtual System.Collections.Generic.IList<string> Licenses { get; set; } 

        /// <summary>Name of the resource. Provided by the client when the resource is created. The name must be 1-63
        /// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the
        /// regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter,
        /// and all following characters must be a dash, lowercase letter, or digit, except the last character, which
        /// cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Internal use only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("options")]
        public virtual string Options { get; set; } 

        /// <summary>[Output Only] Server-defined fully-qualified URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>Size of the persistent disk, specified in GB. You can specify this field when creating a persistent
        /// disk using the sourceImage or sourceSnapshot parameter, or specify it alone to create an empty persistent
        /// disk.
        ///
        /// If you specify this field along with sourceImage or sourceSnapshot, the value of sizeGb must not be less
        /// than the size of the sourceImage or the size of the snapshot.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sizeGb")]
        public virtual System.Nullable<long> SizeGb { get; set; } 

        /// <summary>The source image used to create this disk. If the source image is deleted, this field will not be
        /// set.
        ///
        /// To create a disk with one of the public operating system images, specify the image by its family name. For
        /// example, specify family/debian-8 to use the latest Debian 8 image:
        ///
        /// projects/debian-cloud/global/images/family/debian-8
        ///
        /// Alternatively, use a specific version of a public operating system image:
        ///
        /// projects/debian-cloud/global/images/debian-8-jessie-vYYYYMMDD
        ///
        /// To create a disk with a private image that you created, specify the image name in the following format:
        ///
        /// global/images/my-private-image
        ///
        /// You can also specify a private image by its image family, which returns the latest version of the image in
        /// that family. Replace the image name with family/family-name:
        ///
        /// global/images/family/my-private-family</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceImage")]
        public virtual string SourceImage { get; set; } 

        /// <summary>The customer-supplied encryption key of the source image. Required if the source image is protected
        /// by a customer-supplied encryption key.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceImageEncryptionKey")]
        public virtual CustomerEncryptionKey SourceImageEncryptionKey { get; set; } 

        /// <summary>[Output Only] The ID value of the image used to create this disk. This value identifies the exact
        /// image that was used to create this persistent disk. For example, if you created the persistent disk from an
        /// image that was later deleted and recreated under the same name, the source image ID would identify the exact
        /// version of the image that was used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceImageId")]
        public virtual string SourceImageId { get; set; } 

        /// <summary>The source snapshot used to create this disk. You can provide this as a partial or full URL to the
        /// resource. For example, the following are valid values: -
        /// https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot -
        /// projects/project/global/snapshots/snapshot - global/snapshots/snapshot</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceSnapshot")]
        public virtual string SourceSnapshot { get; set; } 

        /// <summary>The customer-supplied encryption key of the source snapshot. Required if the source snapshot is
        /// protected by a customer-supplied encryption key.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceSnapshotEncryptionKey")]
        public virtual CustomerEncryptionKey SourceSnapshotEncryptionKey { get; set; } 

        /// <summary>[Output Only] The unique ID of the snapshot used to create this disk. This value identifies the
        /// exact snapshot that was used to create this persistent disk. For example, if you created the persistent disk
        /// from a snapshot that was later deleted and recreated under the same name, the source snapshot ID would
        /// identify the exact version of the snapshot that was used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceSnapshotId")]
        public virtual string SourceSnapshotId { get; set; } 

        /// <summary>[Output Only] The status of disk creation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>URL of the disk type resource describing which disk type to use to create the disk. Provide this
        /// when creating the disk.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>[Output Only] Links to the users of the disk (attached instances) in form:
        /// project/zones/zone/instances/instance</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("users")]
        public virtual System.Collections.Generic.IList<string> Users { get; set; } 

        /// <summary>[Output Only] URL of the zone where the disk resides.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("zone")]
        public virtual string Zone { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class DiskAggregatedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output Only] A map of scoped disk lists.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IDictionary<string,DisksScopedList> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#diskAggregatedList for aggregated lists of
        /// persistent disks.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results. Acceptable values are 0 to 500, inclusive. (Default: 500)</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A list of Disk resources.</summary>
    public class DiskList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Unique identifier for the resource; defined by the server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A list of Disk resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Disk> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#diskList for lists of disks.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>This token allows you to get the next page of results for list requests. If the number of results
        /// is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next
        /// list request. Subsequent list requests will have their own nextPageToken to continue paging through the
        /// results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class DiskMoveRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The URL of the destination zone to move the disk. This can be a full or partial URL. For example,
        /// the following are all valid URLs to a zone: -
        /// https://www.googleapis.com/compute/v1/projects/project/zones/zone - projects/project/zones/zone -
        /// zones/zone</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("destinationZone")]
        public virtual string DestinationZone { get; set; } 

        /// <summary>The URL of the target disk to move. This can be a full or partial URL. For example, the following
        /// are all valid URLs to a disk: - https://www.googleapis.com/compute/v1/projects/project/zones/zone/disks/disk
        /// - projects/project/zones/zone/disks/disk - zones/zone/disks/disk</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetDisk")]
        public virtual string TargetDisk { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A DiskType resource.</summary>
    public class DiskType : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>[Output Only] Server-defined default disk size in GB.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultDiskSizeGb")]
        public virtual System.Nullable<long> DefaultDiskSizeGb { get; set; } 

        /// <summary>[Output Only] The deprecation status associated with this disk type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deprecated")]
        public virtual DeprecationStatus Deprecated { get; set; } 

        /// <summary>[Output Only] An optional description of this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>[Output Only] Type of the resource. Always compute#diskType for disk types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] Name of the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>[Output Only] An optional textual description of the valid disk size, such as "10GB-
        /// 10TB".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("validDiskSize")]
        public virtual string ValidDiskSize { get; set; } 

        /// <summary>[Output Only] URL of the zone where the disk type resides.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("zone")]
        public virtual string Zone { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class DiskTypeAggregatedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output Only] A map of scoped disk type lists.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IDictionary<string,DiskTypesScopedList> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#diskTypeAggregatedList.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of disk types.</summary>
    public class DiskTypeList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output Only] A list of Disk Type resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<DiskType> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#diskTypeList for disk types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class DiskTypesScopedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] List of disk types contained in this scope.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diskTypes")]
        public virtual System.Collections.Generic.IList<DiskType> DiskTypes { get; set; } 

        /// <summary>[Output Only] Informational warning which replaces the list of disk types when the list is
        /// empty.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("warning")]
        public virtual DiskTypesScopedList.WarningData Warning { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        /// <summary>[Output Only] Informational warning which replaces the list of disk types when the list is
        /// empty.</summary>
        public class WarningData
        {
            /// <summary>[Output Only] A warning code, if applicable. For example, Compute Engine returns
            /// NO_RESULTS_ON_PAGE if there are no results in the response.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("code")]
            public virtual string Code { get; set; } 

            /// <summary>[Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key":
            /// "scope", "value": "zones/us-east1-d" }</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("data")]
            public virtual System.Collections.Generic.IList<WarningData.DataData> Data { get; set; } 

            /// <summary>[Output Only] A human-readable description of the warning code.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("message")]
            public virtual string Message { get; set; } 

            

            public class DataData
            {
                /// <summary>[Output Only] A key that provides more detail on the warning being returned. For example,
                /// for warnings where there are no results in a list request for a particular zone, this key might be
                /// scope and the key value might be the zone name. Other examples might be a key indicating a
                /// deprecated resource and a suggested replacement, or a warning about invalid network settings (for
                /// example, if an instance attempts to perform IP forwarding but is not enabled for IP
                /// forwarding).</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("key")]
                public virtual string Key { get; set; } 

                /// <summary>[Output Only] A warning data value corresponding to the key.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("value")]
                public virtual string Value { get; set; } 

            }
        }
    }    

    public class DisksResizeRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The new size of the persistent disk, which is specified in GB.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sizeGb")]
        public virtual System.Nullable<long> SizeGb { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class DisksScopedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] List of disks contained in this scope.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disks")]
        public virtual System.Collections.Generic.IList<Disk> Disks { get; set; } 

        /// <summary>[Output Only] Informational warning which replaces the list of disks when the list is
        /// empty.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("warning")]
        public virtual DisksScopedList.WarningData Warning { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        /// <summary>[Output Only] Informational warning which replaces the list of disks when the list is
        /// empty.</summary>
        public class WarningData
        {
            /// <summary>[Output Only] A warning code, if applicable. For example, Compute Engine returns
            /// NO_RESULTS_ON_PAGE if there are no results in the response.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("code")]
            public virtual string Code { get; set; } 

            /// <summary>[Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key":
            /// "scope", "value": "zones/us-east1-d" }</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("data")]
            public virtual System.Collections.Generic.IList<WarningData.DataData> Data { get; set; } 

            /// <summary>[Output Only] A human-readable description of the warning code.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("message")]
            public virtual string Message { get; set; } 

            

            public class DataData
            {
                /// <summary>[Output Only] A key that provides more detail on the warning being returned. For example,
                /// for warnings where there are no results in a list request for a particular zone, this key might be
                /// scope and the key value might be the zone name. Other examples might be a key indicating a
                /// deprecated resource and a suggested replacement, or a warning about invalid network settings (for
                /// example, if an instance attempts to perform IP forwarding but is not enabled for IP
                /// forwarding).</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("key")]
                public virtual string Key { get; set; } 

                /// <summary>[Output Only] A warning data value corresponding to the key.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("value")]
                public virtual string Value { get; set; } 

            }
        }
    }    

    /// <summary>Represents a Firewall resource.</summary>
    public class Firewall : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of ALLOW rules specified by this firewall. Each rule specifies a protocol and port-range
        /// tuple that describes a permitted connection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowed")]
        public virtual System.Collections.Generic.IList<Firewall.AllowedData> Allowed { get; set; } 

        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>[Output Only] Type of the resource. Always compute#firewall for firewall rules.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of the resource; provided by the client when the resource is created. The name must be 1-63
        /// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the
        /// regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter,
        /// and all following characters must be a dash, lowercase letter, or digit, except the last character, which
        /// cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>URL of the network resource for this firewall rule. If not specified when creating a firewall rule,
        /// the default network is used: global/networks/default If you choose to specify this property, you can specify
        /// the network as a full or partial URL. For example, the following are all valid URLs: -
        /// https://www.googleapis.com/compute/v1/projects/myproject/global/networks/my-network -
        /// projects/myproject/global/networks/my-network - global/networks/default</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("network")]
        public virtual string Network { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>If source ranges are specified, the firewall will apply only to traffic that has source IP address
        /// in these ranges. These ranges must be expressed in CIDR format. One or both of sourceRanges and sourceTags
        /// may be set. If both properties are set, the firewall will apply to traffic that has source IP address within
        /// sourceRanges OR the source IP that belongs to a tag listed in the sourceTags property. The connection does
        /// not need to match both properties for the firewall to apply. Only IPv4 is supported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceRanges")]
        public virtual System.Collections.Generic.IList<string> SourceRanges { get; set; } 

        /// <summary>If source tags are specified, the firewall will apply only to traffic with source IP that belongs
        /// to a tag listed in source tags. Source tags cannot be used to control traffic to an instance's external IP
        /// address. Because tags are associated with an instance, not an IP address. One or both of sourceRanges and
        /// sourceTags may be set. If both properties are set, the firewall will apply to traffic that has source IP
        /// address within sourceRanges OR the source IP that belongs to a tag listed in the sourceTags property. The
        /// connection does not need to match both properties for the firewall to apply.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceTags")]
        public virtual System.Collections.Generic.IList<string> SourceTags { get; set; } 

        /// <summary>A list of instance tags indicating sets of instances located in the network that may make network
        /// connections as specified in allowed[]. If no targetTags are specified, the firewall rule applies to all
        /// instances on the specified network.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetTags")]
        public virtual System.Collections.Generic.IList<string> TargetTags { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        public class AllowedData
        {
            /// <summary>The IP protocol to which this rule applies. The protocol type is required when creating a
            /// firewall rule. This value can either be one of the following well known protocol strings (tcp, udp,
            /// icmp, esp, ah, sctp), or the IP protocol number.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("IPProtocol")]
            public virtual string IPProtocol { get; set; } 

            /// <summary>An optional list of ports to which this rule applies. This field is only applicable for UDP or
            /// TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to
            /// connections through any port.
            ///
            /// Example inputs include: ["22"], ["80","443"], and ["12345-12349"].</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("ports")]
            public virtual System.Collections.Generic.IList<string> Ports { get; set; } 

        }
    }    

    /// <summary>Contains a list of firewalls.</summary>
    public class FirewallList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output Only] A list of Firewall resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Firewall> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#firewallList for lists of firewalls.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A ForwardingRule resource. A ForwardingRule resource specifies which pool of target virtual machines to
    /// forward a packet to if it matches the given [IPAddress, IPProtocol, ports] tuple.</summary>
    public class ForwardingRule : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The IP address that this forwarding rule is serving on behalf of.
        ///
        /// For global forwarding rules, the address must be a global IP. For regional forwarding rules, the address
        /// must live in the same region as the forwarding rule. By default, this field is empty and an ephemeral IPv4
        /// address from the same scope (global or regional) will be assigned. A regional forwarding rule supports IPv4
        /// only. A global forwarding rule supports either IPv4 or IPv6.
        ///
        /// When the load balancing scheme is INTERNAL, this can only be an RFC 1918 IP address belonging to the
        /// network/subnetwork configured for the forwarding rule. A reserved address cannot be used. If the field is
        /// empty, the IP address will be automatically allocated from the internal IP range of the subnetwork or
        /// network configured for this forwarding rule.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("IPAddress")]
        public virtual string IPAddress { get; set; } 

        /// <summary>The IP protocol to which this rule applies. Valid options are TCP, UDP, ESP, AH, SCTP or ICMP.
        ///
        /// When the load balancing scheme is INTERNAL, only TCP and UDP are valid.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("IPProtocol")]
        public virtual string IPProtocol { get; set; } 

        /// <summary>This field is not used for external load balancing.
        ///
        /// For internal load balancing, this field identifies the BackendService resource to receive the matched
        /// traffic.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("backendService")]
        public virtual string BackendService { get; set; } 

        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>The IP Version that will be used by this forwarding rule. Valid options are IPV4 or IPV6. This can
        /// only be specified for a global forwarding rule.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ipVersion")]
        public virtual string IpVersion { get; set; } 

        /// <summary>[Output Only] Type of the resource. Always compute#forwardingRule for Forwarding Rule
        /// resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>This signifies what the ForwardingRule will be used for and can only take the following values:
        /// INTERNAL, EXTERNAL The value of INTERNAL means that this will be used for Internal Network Load Balancing
        /// (TCP, UDP). The value of EXTERNAL means that this will be used for External Load Balancing (HTTP(S) LB,
        /// External TCP/UDP LB, SSL Proxy)</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("loadBalancingScheme")]
        public virtual string LoadBalancingScheme { get; set; } 

        /// <summary>Name of the resource; provided by the client when the resource is created. The name must be 1-63
        /// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the
        /// regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter,
        /// and all following characters must be a dash, lowercase letter, or digit, except the last character, which
        /// cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>This field is not used for external load balancing.
        ///
        /// For internal load balancing, this field identifies the network that the load balanced IP should belong to
        /// for this Forwarding Rule. If this field is not specified, the default network will be used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("network")]
        public virtual string Network { get; set; } 

        /// <summary>This field is used along with the target field for TargetHttpProxy, TargetHttpsProxy,
        /// TargetSslProxy, TargetTcpProxy, TargetVpnGateway, TargetPool, TargetInstance.
        ///
        /// Applicable only when IPProtocol is TCP, UDP, or SCTP, only packets addressed to ports in the specified range
        /// will be forwarded to target. Forwarding rules with the same [IPAddress, IPProtocol] pair must have disjoint
        /// port ranges.
        ///
        /// Some types of forwarding target have constraints on the acceptable ports: - TargetHttpProxy: 80, 8080 -
        /// TargetHttpsProxy: 443 - TargetTcpProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995 -
        /// TargetSslProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995 - TargetVpnGateway: 500, 4500
        /// -</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("portRange")]
        public virtual string PortRange { get; set; } 

        /// <summary>This field is used along with the backend_service field for internal load balancing.
        ///
        /// When the load balancing scheme is INTERNAL, a single port or a comma separated list of ports can be
        /// configured. Only packets addressed to these ports will be forwarded to the backends configured with this
        /// forwarding rule.
        ///
        /// You may specify a maximum of up to 5 ports.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ports")]
        public virtual System.Collections.Generic.IList<string> Ports { get; set; } 

        /// <summary>[Output Only] URL of the region where the regional forwarding rule resides. This field is not
        /// applicable to global forwarding rules.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("region")]
        public virtual string Region { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>This field is not used for external load balancing.
        ///
        /// For internal load balancing, this field identifies the subnetwork that the load balanced IP should belong to
        /// for this Forwarding Rule.
        ///
        /// If the network specified is in auto subnet mode, this field is optional. However, if the network is in
        /// custom subnet mode, a subnetwork must be specified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subnetwork")]
        public virtual string Subnetwork { get; set; } 

        /// <summary>The URL of the target resource to receive the matched traffic. For regional forwarding rules, this
        /// target must live in the same region as the forwarding rule. For global forwarding rules, this target must be
        /// a global load balancing resource. The forwarded traffic must be of a type appropriate to the target object.
        ///
        /// This field is not used for internal load balancing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("target")]
        public virtual string Target { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ForwardingRuleAggregatedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A map of scoped forwarding rule lists.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IDictionary<string,ForwardingRulesScopedList> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#forwardingRuleAggregatedList for lists of forwarding
        /// rules.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of ForwardingRule resources.</summary>
    public class ForwardingRuleList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Unique identifier for the resource. Set by the server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A list of ForwardingRule resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<ForwardingRule> Items { get; set; } 

        /// <summary>Type of resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ForwardingRulesScopedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of forwarding rules contained in this scope.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("forwardingRules")]
        public virtual System.Collections.Generic.IList<ForwardingRule> ForwardingRules { get; set; } 

        /// <summary>Informational warning which replaces the list of forwarding rules when the list is empty.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("warning")]
        public virtual ForwardingRulesScopedList.WarningData Warning { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        /// <summary>Informational warning which replaces the list of forwarding rules when the list is empty.</summary>
        public class WarningData
        {
            /// <summary>[Output Only] A warning code, if applicable. For example, Compute Engine returns
            /// NO_RESULTS_ON_PAGE if there are no results in the response.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("code")]
            public virtual string Code { get; set; } 

            /// <summary>[Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key":
            /// "scope", "value": "zones/us-east1-d" }</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("data")]
            public virtual System.Collections.Generic.IList<WarningData.DataData> Data { get; set; } 

            /// <summary>[Output Only] A human-readable description of the warning code.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("message")]
            public virtual string Message { get; set; } 

            

            public class DataData
            {
                /// <summary>[Output Only] A key that provides more detail on the warning being returned. For example,
                /// for warnings where there are no results in a list request for a particular zone, this key might be
                /// scope and the key value might be the zone name. Other examples might be a key indicating a
                /// deprecated resource and a suggested replacement, or a warning about invalid network settings (for
                /// example, if an instance attempts to perform IP forwarding but is not enabled for IP
                /// forwarding).</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("key")]
                public virtual string Key { get; set; } 

                /// <summary>[Output Only] A warning data value corresponding to the key.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("value")]
                public virtual string Value { get; set; } 

            }
        }
    }    

    public class GlobalSetLabelsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The fingerprint of the previous set of labels for this resource, used to detect conflicts. The
        /// fingerprint is initially generated by Compute Engine and changes after every request to modify or update
        /// labels. You must always provide an up-to-date fingerprint hash when updating or changing labels. Make a
        /// get() request to the resource to get the latest fingerprint.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labelFingerprint")]
        public virtual string LabelFingerprint { get; set; } 

        /// <summary>A list of labels to apply for this resource. Each label key & value must comply with RFC1035.
        /// Specifically, the name must be 1-63 characters long and match the regular expression
        /// [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following
        /// characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
        /// For example, "webserver-frontend": "images". A label value can also be empty (e.g. "my-label":
        /// "").</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IDictionary<string,string> Labels { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Guest OS features.</summary>
    public class GuestOsFeature : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The type of supported feature. Currenty only VIRTIO_SCSI_MULTIQUEUE is supported. For newer Windows
        /// images, the server might also populate this property with the value WINDOWS to indicate that this is a
        /// Windows image. This value is purely informational and does not enable or disable any features.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class HTTPHealthCheck : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The value of the host header in the HTTP health check request. If left empty (default value), the
        /// IP on behalf of which this health check is performed will be used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("host")]
        public virtual string Host { get; set; } 

        /// <summary>The TCP port number for the health check request. The default value is 80. Valid values are 1
        /// through 65535.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("port")]
        public virtual System.Nullable<int> Port { get; set; } 

        /// <summary>Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port
        /// takes precedence.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("portName")]
        public virtual string PortName { get; set; } 

        /// <summary>Specifies the type of proxy header to append before sending data to the backend, either NONE or
        /// PROXY_V1. The default is NONE.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("proxyHeader")]
        public virtual string ProxyHeader { get; set; } 

        /// <summary>The request path of the HTTP health check request. The default value is /.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestPath")]
        public virtual string RequestPath { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class HTTPSHealthCheck : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The value of the host header in the HTTPS health check request. If left empty (default value), the
        /// IP on behalf of which this health check is performed will be used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("host")]
        public virtual string Host { get; set; } 

        /// <summary>The TCP port number for the health check request. The default value is 443. Valid values are 1
        /// through 65535.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("port")]
        public virtual System.Nullable<int> Port { get; set; } 

        /// <summary>Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port
        /// takes precedence.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("portName")]
        public virtual string PortName { get; set; } 

        /// <summary>Specifies the type of proxy header to append before sending data to the backend, either NONE or
        /// PROXY_V1. The default is NONE.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("proxyHeader")]
        public virtual string ProxyHeader { get; set; } 

        /// <summary>The request path of the HTTPS health check request. The default value is /.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestPath")]
        public virtual string RequestPath { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An HealthCheck resource. This resource defines a template for how individual virtual machines should be
    /// checked for health, via one of the supported protocols.</summary>
    public class HealthCheck : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>How often (in seconds) to send a health check. The default value is 5 seconds.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("checkIntervalSec")]
        public virtual System.Nullable<int> CheckIntervalSec { get; set; } 

        /// <summary>[Output Only] Creation timestamp in 3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>A so-far unhealthy instance will be marked healthy after this many consecutive successes. The
        /// default value is 2.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("healthyThreshold")]
        public virtual System.Nullable<int> HealthyThreshold { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("httpHealthCheck")]
        public virtual HTTPHealthCheck HttpHealthCheck { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("httpsHealthCheck")]
        public virtual HTTPSHealthCheck HttpsHealthCheck { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>Type of the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of the resource. Provided by the client when the resource is created. The name must be 1-63
        /// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the
        /// regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter,
        /// and all following characters must be a dash, lowercase letter, or digit, except the last character, which
        /// cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("sslHealthCheck")]
        public virtual SSLHealthCheck SslHealthCheck { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("tcpHealthCheck")]
        public virtual TCPHealthCheck TcpHealthCheck { get; set; } 

        /// <summary>How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is
        /// invalid for timeoutSec to have greater value than checkIntervalSec.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeoutSec")]
        public virtual System.Nullable<int> TimeoutSec { get; set; } 

        /// <summary>Specifies the type of the healthCheck, either TCP, SSL, HTTP or HTTPS. If not specified, the
        /// default is TCP. Exactly one of the protocol-specific health check field must be specified, which must match
        /// type field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>A so-far healthy instance will be marked unhealthy after this many consecutive failures. The
        /// default value is 2.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("unhealthyThreshold")]
        public virtual System.Nullable<int> UnhealthyThreshold { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of HealthCheck resources.</summary>
    public class HealthCheckList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A list of HealthCheck resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<HealthCheck> Items { get; set; } 

        /// <summary>Type of resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A full or valid partial URL to a health check. For example, the following are valid URLs: -
    /// https://www.googleapis.com/compute/beta/projects/project-id/global/httpHealthChecks/health-check - projects
    /// /project-id/global/httpHealthChecks/health-check - global/httpHealthChecks/health-check</summary>
    public class HealthCheckReference : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("healthCheck")]
        public virtual string HealthCheck { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class HealthStatus : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Health state of the instance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("healthState")]
        public virtual string HealthState { get; set; } 

        /// <summary>URL of the instance resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instance")]
        public virtual string Instance { get; set; } 

        /// <summary>The IP address represented by this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ipAddress")]
        public virtual string IpAddress { get; set; } 

        /// <summary>The port on the instance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("port")]
        public virtual System.Nullable<int> Port { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>UrlMaps A host-matching rule for a URL. If matched, will use the named PathMatcher to select the
    /// BackendService.</summary>
    public class HostRule : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>The list of host patterns to match. They must be valid hostnames, except * will match any string of
        /// ([a-z0-9-.]*). In that case, * must be the first character and must be followed in the pattern by either -
        /// or ..</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hosts")]
        public virtual System.Collections.Generic.IList<string> Hosts { get; set; } 

        /// <summary>The name of the PathMatcher to use to match the path portion of the URL if the hostRule matches the
        /// URL's host portion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pathMatcher")]
        public virtual string PathMatcher { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An HttpHealthCheck resource. This resource defines a template for how individual instances should be
    /// checked for health, via HTTP.</summary>
    public class HttpHealthCheck : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>How often (in seconds) to send a health check. The default value is 5 seconds.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("checkIntervalSec")]
        public virtual System.Nullable<int> CheckIntervalSec { get; set; } 

        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>A so-far unhealthy instance will be marked healthy after this many consecutive successes. The
        /// default value is 2.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("healthyThreshold")]
        public virtual System.Nullable<int> HealthyThreshold { get; set; } 

        /// <summary>The value of the host header in the HTTP health check request. If left empty (default value), the
        /// public IP on behalf of which this health check is performed will be used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("host")]
        public virtual string Host { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>[Output Only] Type of the resource. Always compute#httpHealthCheck for HTTP health
        /// checks.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of the resource. Provided by the client when the resource is created. The name must be 1-63
        /// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the
        /// regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter,
        /// and all following characters must be a dash, lowercase letter, or digit, except the last character, which
        /// cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The TCP port number for the HTTP health check request. The default value is 80.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("port")]
        public virtual System.Nullable<int> Port { get; set; } 

        /// <summary>The request path of the HTTP health check request. The default value is /.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestPath")]
        public virtual string RequestPath { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is
        /// invalid for timeoutSec to have greater value than checkIntervalSec.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeoutSec")]
        public virtual System.Nullable<int> TimeoutSec { get; set; } 

        /// <summary>A so-far healthy instance will be marked unhealthy after this many consecutive failures. The
        /// default value is 2.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("unhealthyThreshold")]
        public virtual System.Nullable<int> UnhealthyThreshold { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of HttpHealthCheck resources.</summary>
    public class HttpHealthCheckList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Unique identifier for the resource. Defined by the server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A list of HttpHealthCheck resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<HttpHealthCheck> Items { get; set; } 

        /// <summary>Type of resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An HttpsHealthCheck resource. This resource defines a template for how individual instances should be
    /// checked for health, via HTTPS.</summary>
    public class HttpsHealthCheck : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>How often (in seconds) to send a health check. The default value is 5 seconds.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("checkIntervalSec")]
        public virtual System.Nullable<int> CheckIntervalSec { get; set; } 

        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>A so-far unhealthy instance will be marked healthy after this many consecutive successes. The
        /// default value is 2.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("healthyThreshold")]
        public virtual System.Nullable<int> HealthyThreshold { get; set; } 

        /// <summary>The value of the host header in the HTTPS health check request. If left empty (default value), the
        /// public IP on behalf of which this health check is performed will be used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("host")]
        public virtual string Host { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>Type of the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of the resource. Provided by the client when the resource is created. The name must be 1-63
        /// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the
        /// regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter,
        /// and all following characters must be a dash, lowercase letter, or digit, except the last character, which
        /// cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The TCP port number for the HTTPS health check request. The default value is 443.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("port")]
        public virtual System.Nullable<int> Port { get; set; } 

        /// <summary>The request path of the HTTPS health check request. The default value is "/".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestPath")]
        public virtual string RequestPath { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is
        /// invalid for timeoutSec to have a greater value than checkIntervalSec.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeoutSec")]
        public virtual System.Nullable<int> TimeoutSec { get; set; } 

        /// <summary>A so-far healthy instance will be marked unhealthy after this many consecutive failures. The
        /// default value is 2.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("unhealthyThreshold")]
        public virtual System.Nullable<int> UnhealthyThreshold { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of HttpsHealthCheck resources.</summary>
    public class HttpsHealthCheckList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Unique identifier for the resource; defined by the server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A list of HttpsHealthCheck resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<HttpsHealthCheck> Items { get; set; } 

        /// <summary>Type of resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An Image resource.</summary>
    public class Image : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Size of the image tar.gz archive stored in Google Cloud Storage (in bytes).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("archiveSizeBytes")]
        public virtual System.Nullable<long> ArchiveSizeBytes { get; set; } 

        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>The deprecation status associated with this image.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deprecated")]
        public virtual DeprecationStatus Deprecated { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Size of the image when restored onto a persistent disk (in GB).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diskSizeGb")]
        public virtual System.Nullable<long> DiskSizeGb { get; set; } 

        /// <summary>The name of the image family to which this image belongs. You can create disks by specifying an
        /// image family instead of a specific image name. The image family always returns its latest image that is not
        /// deprecated. The name of the image family must comply with RFC1035.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("family")]
        public virtual string Family { get; set; } 

        /// <summary>A list of features to enable on the guest OS. Applicable for bootable images only. Currently, only
        /// one feature can be enabled, VIRTIO_SCSI_MULTIQUEUE, which allows each virtual CPU to have its own queue. For
        /// Windows images, you can only enable VIRTIO_SCSI_MULTIQUEUE on images with driver version 1.2.0.1621 or
        /// higher. Linux images with kernel versions 3.17 and higher will support VIRTIO_SCSI_MULTIQUEUE.
        ///
        /// For new Windows images, the server might also populate this field with the value WINDOWS, to indicate that
        /// this is a Windows image. This value is purely informational and does not enable or disable any
        /// features.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("guestOsFeatures")]
        public virtual System.Collections.Generic.IList<GuestOsFeature> GuestOsFeatures { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>Encrypts the image using a customer-supplied encryption key.
        ///
        /// After you encrypt an image with a customer-supplied key, you must provide the same key if you use the image
        /// later (e.g. to create a disk from the image).
        ///
        /// Customer-supplied encryption keys do not protect access to metadata of the disk.
        ///
        /// If you do not provide an encryption key when creating the image, then the disk will be encrypted using an
        /// automatically generated key and you do not need to provide a key to use the image later.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageEncryptionKey")]
        public virtual CustomerEncryptionKey ImageEncryptionKey { get; set; } 

        /// <summary>[Output Only] Type of the resource. Always compute#image for images.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>A fingerprint for the labels being applied to this image, which is essentially a hash of the labels
        /// used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after
        /// every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to
        /// update or change labels.
        ///
        /// To see the latest fingerprint, make a get() request to retrieve an image.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labelFingerprint")]
        public virtual string LabelFingerprint { get; set; } 

        /// <summary>Labels to apply to this image. These can be later modified by the setLabels method.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IDictionary<string,string> Labels { get; set; } 

        /// <summary>Any applicable license URI.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("licenses")]
        public virtual System.Collections.Generic.IList<string> Licenses { get; set; } 

        /// <summary>Name of the resource; provided by the client when the resource is created. The name must be 1-63
        /// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the
        /// regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter,
        /// and all following characters must be a dash, lowercase letter, or digit, except the last character, which
        /// cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The parameters of the raw disk image.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rawDisk")]
        public virtual Image.RawDiskData RawDisk { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>URL of the source disk used to create this image. This can be a full or valid partial URL. You must
        /// provide either this property or the rawDisk.source property but not both to create an image. For example,
        /// the following are valid values: -
        /// https://www.googleapis.com/compute/v1/projects/project/zones/zone/disks/disk -
        /// projects/project/zones/zone/disks/disk - zones/zone/disks/disk</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceDisk")]
        public virtual string SourceDisk { get; set; } 

        /// <summary>The customer-supplied encryption key of the source disk. Required if the source disk is protected
        /// by a customer-supplied encryption key.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceDiskEncryptionKey")]
        public virtual CustomerEncryptionKey SourceDiskEncryptionKey { get; set; } 

        /// <summary>The ID value of the disk used to create this image. This value may be used to determine whether the
        /// image was taken from the current or a previous instance of a given disk name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceDiskId")]
        public virtual string SourceDiskId { get; set; } 

        /// <summary>The type of the image used to create this disk. The default and only value is RAW</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceType")]
        public virtual string SourceType { get; set; } 

        /// <summary>[Output Only] The status of the image. An image can be used to create other resources, such as
        /// instances, only after the image has been successfully created and the status is set to READY. Possible
        /// values are FAILED, PENDING, or READY.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        /// <summary>The parameters of the raw disk image.</summary>
        public class RawDiskData
        {
            /// <summary>The format used to encode and transmit the block device, which should be TAR. This is just a
            /// container and transmission format and not a runtime format. Provided by the client when the disk image
            /// is created.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("containerType")]
            public virtual string ContainerType { get; set; } 

            /// <summary>An optional SHA1 checksum of the disk image before unpackaging; provided by the client when the
            /// disk image is created.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("sha1Checksum")]
            public virtual string Sha1Checksum { get; set; } 

            /// <summary>The full Google Cloud Storage URL where the disk image is stored. You must provide either this
            /// property or the sourceDisk property but not both.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("source")]
            public virtual string Source { get; set; } 

        }
    }    

    /// <summary>Contains a list of images.</summary>
    public class ImageList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output Only] A list of Image resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Image> Items { get; set; } 

        /// <summary>Type of resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An Instance resource.</summary>
    public class Instance : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Allows this instance to send and receive packets with non-matching destination or source IPs. This
        /// is required if you plan to use this instance to forward routes. For more information, see Enabling IP
        /// Forwarding.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("canIpForward")]
        public virtual System.Nullable<bool> CanIpForward { get; set; } 

        /// <summary>[Output Only] The CPU platform used by this instance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cpuPlatform")]
        public virtual string CpuPlatform { get; set; } 

        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Array of disks associated with this instance. Persistent disks must be created before you can
        /// assign them.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disks")]
        public virtual System.Collections.Generic.IList<AttachedDisk> Disks { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>[Output Only] Type of the resource. Always compute#instance for instances.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>A fingerprint for this request, which is essentially a hash of the metadata's contents and used for
        /// optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request
        /// to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or
        /// change metadata.
        ///
        /// To see the latest fingerprint, make get() request to the instance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labelFingerprint")]
        public virtual string LabelFingerprint { get; set; } 

        /// <summary>Labels to apply to this instance. These can be later modified by the setLabels method.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IDictionary<string,string> Labels { get; set; } 

        /// <summary>Full or partial URL of the machine type resource to use for this instance, in the format:
        /// zones/zone/machineTypes/machine-type. This is provided by the client when the instance is created. For
        /// example, the following is a valid partial url to a predefined machine type:
        ///
        /// zones/us-central1-f/machineTypes/n1-standard-1
        ///
        /// To create a custom machine type, provide a URL to a machine type in the following format, where CPUS is 1 or
        /// an even number up to 32 (2, 4, 6, ... 24, etc), and MEMORY is the total memory for this instance. Memory
        /// must be a multiple of 256 MB and must be supplied in MB (e.g. 5 GB of memory is 5120 MB):
        ///
        /// zones/zone/machineTypes/custom-CPUS-MEMORY
        ///
        /// For example: zones/us-central1-f/machineTypes/custom-4-5120
        ///
        /// For a full list of restrictions, read the Specifications for custom machine types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("machineType")]
        public virtual string MachineType { get; set; } 

        /// <summary>The metadata key/value pairs assigned to this instance. This includes custom metadata and
        /// predefined keys.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual Metadata Metadata { get; set; } 

        /// <summary>The name of the resource, provided by the client when initially creating the resource. The resource
        /// name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
        /// long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a
        /// lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last
        /// character, which cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>An array of configurations for this interface. This specifies how this interface is configured to
        /// interact with other network services, such as connecting to the internet. Only one interface is supported
        /// per instance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("networkInterfaces")]
        public virtual System.Collections.Generic.IList<NetworkInterface> NetworkInterfaces { get; set; } 

        /// <summary>Sets the scheduling options for this instance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("scheduling")]
        public virtual Scheduling Scheduling { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>A list of service accounts, with their specified scopes, authorized for this instance. Only one
        /// service account per VM instance is supported.
        ///
        /// Service accounts generate access tokens that can be accessed through the metadata server and used to
        /// authenticate applications on the instance. See Service Accounts for more information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("serviceAccounts")]
        public virtual System.Collections.Generic.IList<ServiceAccount> ServiceAccounts { get; set; } 

        /// <summary>[Output Only] Whether a VM has been restricted for start because Compute Engine has detected
        /// suspicious activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startRestricted")]
        public virtual System.Nullable<bool> StartRestricted { get; set; } 

        /// <summary>[Output Only] The status of the instance. One of the following values: PROVISIONING, STAGING,
        /// RUNNING, STOPPING, SUSPENDING, SUSPENDED, and TERMINATED.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>[Output Only] An optional, human-readable explanation of the status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("statusMessage")]
        public virtual string StatusMessage { get; set; } 

        /// <summary>A list of tags to apply to this instance. Tags are used to identify valid sources or targets for
        /// network firewalls and are specified by the client during instance creation. The tags can be later modified
        /// by the setTags method. Each tag within the list must comply with RFC1035.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tags")]
        public virtual Tags Tags { get; set; } 

        /// <summary>[Output Only] URL of the zone where the instance resides.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("zone")]
        public virtual string Zone { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class InstanceAggregatedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output Only] A map of scoped instance lists.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IDictionary<string,InstancesScopedList> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#instanceAggregatedList for aggregated lists of
        /// Instance resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class InstanceGroup : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The creation timestamp for this instance group in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>[Output Only] The fingerprint of the named ports. The system uses this fingerprint to detect
        /// conflicts when multiple users change the named ports concurrently.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fingerprint")]
        public virtual string Fingerprint { get; set; } 

        /// <summary>[Output Only] A unique identifier for this instance group, generated by the server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>[Output Only] The resource type, which is always compute#instanceGroup for instance
        /// groups.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The name of the instance group. The name must be 1-63 characters long, and comply with
        /// RFC1035.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Assigns a name to a port number. For example: {name: "http", port: 80}
        ///
        /// This allows the system to reference ports by the assigned name instead of a port number. Named ports can
        /// also contain multiple ports. For example: [{name: "http", port: 80},{name: "http", port: 8080}]
        ///
        /// Named ports apply to all instances in this instance group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("namedPorts")]
        public virtual System.Collections.Generic.IList<NamedPort> NamedPorts { get; set; } 

        /// <summary>The URL of the network to which all instances in the instance group belong.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("network")]
        public virtual string Network { get; set; } 

        /// <summary>The URL of the region where the instance group is located (for regional resources).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("region")]
        public virtual string Region { get; set; } 

        /// <summary>[Output Only] The URL for this instance group. The server generates this URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>[Output Only] The total number of instances in the instance group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("size")]
        public virtual System.Nullable<int> Size { get; set; } 

        /// <summary>The URL of the subnetwork to which all instances in the instance group belong.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subnetwork")]
        public virtual string Subnetwork { get; set; } 

        /// <summary>[Output Only] The URL of the zone where the instance group is located (for zonal
        /// resources).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("zone")]
        public virtual string Zone { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class InstanceGroupAggregatedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] A unique identifier for this aggregated list of instance groups. The server generates
        /// this identifier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A map of scoped instance group lists.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IDictionary<string,InstanceGroupsScopedList> Items { get; set; } 

        /// <summary>[Output Only] The resource type, which is always compute#instanceGroupAggregatedList for aggregated
        /// lists of instance groups.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] The URL for this resource type. The server generates this URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A list of InstanceGroup resources.</summary>
    public class InstanceGroupList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] A unique identifier for this list of instance groups. The server generates this
        /// identifier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A list of instance groups.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<InstanceGroup> Items { get; set; } 

        /// <summary>[Output Only] The resource type, which is always compute#instanceGroupList for instance group
        /// lists.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] The URL for this resource type. The server generates this URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An Instance Group Manager resource.</summary>
    public class InstanceGroupManager : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The base instance name to use for instances in this group. The value must be 1-58 characters long.
        /// Instances are named by appending a hyphen and a random four-character string to the base instance name. The
        /// base instance name must comply with RFC1035.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("baseInstanceName")]
        public virtual string BaseInstanceName { get; set; } 

        /// <summary>[Output Only] The creation timestamp for this managed instance group in RFC3339 text
        /// format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>[Output Only] The list of instance actions and the number of instances in this managed instance
        /// group that are scheduled for each of those actions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("currentActions")]
        public virtual InstanceGroupManagerActionsSummary CurrentActions { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>[Output Only] The fingerprint of the resource data. You can use this optional field for optimistic
        /// locking when you update the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fingerprint")]
        public virtual string Fingerprint { get; set; } 

        /// <summary>[Output Only] A unique identifier for this resource type. The server generates this
        /// identifier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>[Output Only] The URL of the Instance Group resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instanceGroup")]
        public virtual string InstanceGroup { get; set; } 

        /// <summary>The URL of the instance template that is specified for this managed instance group. The group uses
        /// this template to create all new instances in the managed instance group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instanceTemplate")]
        public virtual string InstanceTemplate { get; set; } 

        /// <summary>[Output Only] The resource type, which is always compute#instanceGroupManager for managed instance
        /// groups.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The name of the managed instance group. The name must be 1-63 characters long, and comply with
        /// RFC1035.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Named ports configured for the Instance Groups complementary to this Instance Group
        /// Manager.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("namedPorts")]
        public virtual System.Collections.Generic.IList<NamedPort> NamedPorts { get; set; } 

        /// <summary>[Output Only] The URL of the region where the managed instance group resides (for regional
        /// resources).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("region")]
        public virtual string Region { get; set; } 

        /// <summary>[Output Only] The URL for this managed instance group. The server defines this URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The URLs for all TargetPool resources to which instances in the instanceGroup field are added. The
        /// target pools automatically apply to all of the instances in the managed instance group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetPools")]
        public virtual System.Collections.Generic.IList<string> TargetPools { get; set; } 

        /// <summary>The target number of running instances for this managed instance group. Deleting or abandoning
        /// instances reduces this number. Resizing the group changes this number.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetSize")]
        public virtual System.Nullable<int> TargetSize { get; set; } 

        /// <summary>[Output Only] The URL of the zone where the managed instance group is located (for zonal
        /// resources).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("zone")]
        public virtual string Zone { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class InstanceGroupManagerActionsSummary : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The total number of instances in the managed instance group that are scheduled to be
        /// abandoned. Abandoning an instance removes it from the managed instance group without deleting it.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("abandoning")]
        public virtual System.Nullable<int> Abandoning { get; set; } 

        /// <summary>[Output Only] The number of instances in the managed instance group that are scheduled to be
        /// created or are currently being created. If the group fails to create any of these instances, it tries again
        /// until it creates the instance successfully.
        ///
        /// If you have disabled creation retries, this field will not be populated; instead, the creatingWithoutRetries
        /// field will be populated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creating")]
        public virtual System.Nullable<int> Creating { get; set; } 

        /// <summary>[Output Only] The number of instances that the managed instance group will attempt to create. The
        /// group attempts to create each instance only once. If the group fails to create any of these instances, it
        /// decreases the group's targetSize value accordingly.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creatingWithoutRetries")]
        public virtual System.Nullable<int> CreatingWithoutRetries { get; set; } 

        /// <summary>[Output Only] The number of instances in the managed instance group that are scheduled to be
        /// deleted or are currently being deleted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deleting")]
        public virtual System.Nullable<int> Deleting { get; set; } 

        /// <summary>[Output Only] The number of instances in the managed instance group that are running and have no
        /// scheduled actions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("none")]
        public virtual System.Nullable<int> None { get; set; } 

        /// <summary>[Output Only] The number of instances in the managed instance group that are scheduled to be
        /// recreated or are currently being being recreated. Recreating an instance deletes the existing root
        /// persistent disk and creates a new disk from the image that is defined in the instance template.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("recreating")]
        public virtual System.Nullable<int> Recreating { get; set; } 

        /// <summary>[Output Only] The number of instances in the managed instance group that are being reconfigured
        /// with properties that do not require a restart or a recreate action. For example, setting or removing target
        /// pools for the instance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("refreshing")]
        public virtual System.Nullable<int> Refreshing { get; set; } 

        /// <summary>[Output Only] The number of instances in the managed instance group that are scheduled to be
        /// restarted or are currently being restarted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("restarting")]
        public virtual System.Nullable<int> Restarting { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class InstanceGroupManagerAggregatedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] A unique identifier for this aggregated list of managed instance groups. The server
        /// generates this identifier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output Only] A map of filtered managed instance group lists.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IDictionary<string,InstanceGroupManagersScopedList> Items { get; set; } 

        /// <summary>[Output Only] The resource type, which is always compute#instanceGroupManagerAggregatedList for an
        /// aggregated list of managed instance groups.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] The URL for this resource type. The server generates this URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>[Output Only] A list of managed instance groups.</summary>
    public class InstanceGroupManagerList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] A unique identifier for this resource type. The server generates this
        /// identifier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output Only] A list of managed instance groups.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<InstanceGroupManager> Items { get; set; } 

        /// <summary>[Output Only] The resource type, which is always compute#instanceGroupManagerList for a list of
        /// managed instance groups.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class InstanceGroupManagersAbandonInstancesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The URLs of one or more instances to abandon. This can be a full URL or a partial URL, such as
        /// zones/[ZONE]/instances/[INSTANCE_NAME].</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instances")]
        public virtual System.Collections.Generic.IList<string> Instances { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class InstanceGroupManagersDeleteInstancesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The URLs of one or more instances to delete. This can be a full URL or a partial URL, such as
        /// zones/[ZONE]/instances/[INSTANCE_NAME].</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instances")]
        public virtual System.Collections.Generic.IList<string> Instances { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class InstanceGroupManagersListManagedInstancesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The list of instances in the managed instance group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("managedInstances")]
        public virtual System.Collections.Generic.IList<ManagedInstance> ManagedInstances { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class InstanceGroupManagersRecreateInstancesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The URLs of one or more instances to recreate. This can be a full URL or a partial URL, such as
        /// zones/[ZONE]/instances/[INSTANCE_NAME].</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instances")]
        public virtual System.Collections.Generic.IList<string> Instances { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class InstanceGroupManagersScopedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The list of managed instance groups that are contained in the specified project and
        /// zone.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instanceGroupManagers")]
        public virtual System.Collections.Generic.IList<InstanceGroupManager> InstanceGroupManagers { get; set; } 

        /// <summary>[Output Only] The warning that replaces the list of managed instance groups when the list is
        /// empty.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("warning")]
        public virtual InstanceGroupManagersScopedList.WarningData Warning { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        /// <summary>[Output Only] The warning that replaces the list of managed instance groups when the list is
        /// empty.</summary>
        public class WarningData
        {
            /// <summary>[Output Only] A warning code, if applicable. For example, Compute Engine returns
            /// NO_RESULTS_ON_PAGE if there are no results in the response.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("code")]
            public virtual string Code { get; set; } 

            /// <summary>[Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key":
            /// "scope", "value": "zones/us-east1-d" }</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("data")]
            public virtual System.Collections.Generic.IList<WarningData.DataData> Data { get; set; } 

            /// <summary>[Output Only] A human-readable description of the warning code.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("message")]
            public virtual string Message { get; set; } 

            

            public class DataData
            {
                /// <summary>[Output Only] A key that provides more detail on the warning being returned. For example,
                /// for warnings where there are no results in a list request for a particular zone, this key might be
                /// scope and the key value might be the zone name. Other examples might be a key indicating a
                /// deprecated resource and a suggested replacement, or a warning about invalid network settings (for
                /// example, if an instance attempts to perform IP forwarding but is not enabled for IP
                /// forwarding).</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("key")]
                public virtual string Key { get; set; } 

                /// <summary>[Output Only] A warning data value corresponding to the key.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("value")]
                public virtual string Value { get; set; } 

            }
        }
    }    

    public class InstanceGroupManagersSetInstanceTemplateRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The URL of the instance template that is specified for this managed instance group. The group uses
        /// this template to create all new instances in the managed instance group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instanceTemplate")]
        public virtual string InstanceTemplate { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class InstanceGroupManagersSetTargetPoolsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The fingerprint of the target pools information. Use this optional property to prevent conflicts
        /// when multiple users change the target pools settings concurrently. Obtain the fingerprint with the
        /// instanceGroupManagers.get method. Then, include the fingerprint in your request to ensure that you do not
        /// overwrite changes that were applied from another concurrent request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fingerprint")]
        public virtual string Fingerprint { get; set; } 

        /// <summary>The list of target pool URLs that instances in this managed instance group belong to. The managed
        /// instance group applies these target pools to all of the instances in the group. Existing instances and new
        /// instances in the group all receive these target pool settings.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetPools")]
        public virtual System.Collections.Generic.IList<string> TargetPools { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class InstanceGroupsAddInstancesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of instances to add to the instance group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instances")]
        public virtual System.Collections.Generic.IList<InstanceReference> Instances { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class InstanceGroupsListInstances : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] A unique identifier for this list of instances in the specified instance group. The
        /// server generates this identifier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output Only] A list of instances and any named ports that are assigned to those
        /// instances.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<InstanceWithNamedPorts> Items { get; set; } 

        /// <summary>[Output Only] The resource type, which is always compute#instanceGroupsListInstances for the list
        /// of instances in the specified instance group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] The URL for this list of instances in the specified instance groups. The server
        /// generates this URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class InstanceGroupsListInstancesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A filter for the state of the instances in the instance group. Valid options are ALL or RUNNING. If
        /// you do not specify this parameter the list includes all instances regardless of their state.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instanceState")]
        public virtual string InstanceState { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class InstanceGroupsRemoveInstancesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of instances to remove from the instance group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instances")]
        public virtual System.Collections.Generic.IList<InstanceReference> Instances { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class InstanceGroupsScopedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The list of instance groups that are contained in this scope.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instanceGroups")]
        public virtual System.Collections.Generic.IList<InstanceGroup> InstanceGroups { get; set; } 

        /// <summary>[Output Only] An informational warning that replaces the list of instance groups when the list is
        /// empty.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("warning")]
        public virtual InstanceGroupsScopedList.WarningData Warning { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        /// <summary>[Output Only] An informational warning that replaces the list of instance groups when the list is
        /// empty.</summary>
        public class WarningData
        {
            /// <summary>[Output Only] A warning code, if applicable. For example, Compute Engine returns
            /// NO_RESULTS_ON_PAGE if there are no results in the response.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("code")]
            public virtual string Code { get; set; } 

            /// <summary>[Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key":
            /// "scope", "value": "zones/us-east1-d" }</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("data")]
            public virtual System.Collections.Generic.IList<WarningData.DataData> Data { get; set; } 

            /// <summary>[Output Only] A human-readable description of the warning code.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("message")]
            public virtual string Message { get; set; } 

            

            public class DataData
            {
                /// <summary>[Output Only] A key that provides more detail on the warning being returned. For example,
                /// for warnings where there are no results in a list request for a particular zone, this key might be
                /// scope and the key value might be the zone name. Other examples might be a key indicating a
                /// deprecated resource and a suggested replacement, or a warning about invalid network settings (for
                /// example, if an instance attempts to perform IP forwarding but is not enabled for IP
                /// forwarding).</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("key")]
                public virtual string Key { get; set; } 

                /// <summary>[Output Only] A warning data value corresponding to the key.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("value")]
                public virtual string Value { get; set; } 

            }
        }
    }    

    public class InstanceGroupsSetNamedPortsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The fingerprint of the named ports information for this instance group. Use this optional property
        /// to prevent conflicts when multiple users change the named ports settings concurrently. Obtain the
        /// fingerprint with the instanceGroups.get method. Then, include the fingerprint in your request to ensure that
        /// you do not overwrite changes that were applied from another concurrent request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fingerprint")]
        public virtual string Fingerprint { get; set; } 

        /// <summary>The list of named ports to set for this instance group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("namedPorts")]
        public virtual System.Collections.Generic.IList<NamedPort> NamedPorts { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of instances.</summary>
    public class InstanceList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output Only] A list of instances.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Instance> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#instanceList for lists of Instance
        /// resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class InstanceMoveRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The URL of the destination zone to move the instance. This can be a full or partial URL. For
        /// example, the following are all valid URLs to a zone: -
        /// https://www.googleapis.com/compute/v1/projects/project/zones/zone - projects/project/zones/zone -
        /// zones/zone</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("destinationZone")]
        public virtual string DestinationZone { get; set; } 

        /// <summary>The URL of the target instance to move. This can be a full or partial URL. For example, the
        /// following are all valid URLs to an instance: -
        /// https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance -
        /// projects/project/zones/zone/instances/instance - zones/zone/instances/instance</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetInstance")]
        public virtual string TargetInstance { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class InstanceProperties : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Enables instances created based on this template to send packets with source IP addresses other
        /// than their own and receive packets with destination IP addresses other than their own. If these instances
        /// will be used as an IP gateway or it will be set as the next-hop in a Route resource, specify true. If
        /// unsure, leave this set to false. See the Enable IP forwarding documentation for more information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("canIpForward")]
        public virtual System.Nullable<bool> CanIpForward { get; set; } 

        /// <summary>An optional text description for the instances that are created from this instance
        /// template.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>An array of disks that are associated with the instances that are created from this
        /// template.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disks")]
        public virtual System.Collections.Generic.IList<AttachedDisk> Disks { get; set; } 

        /// <summary>Labels to apply to instances that are created from this template.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IDictionary<string,string> Labels { get; set; } 

        /// <summary>The machine type to use for instances that are created from this template.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("machineType")]
        public virtual string MachineType { get; set; } 

        /// <summary>The metadata key/value pairs to assign to instances that are created from this template. These
        /// pairs can consist of custom metadata or predefined keys. See Project and instance metadata for more
        /// information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual Metadata Metadata { get; set; } 

        /// <summary>An array of network access configurations for this interface.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("networkInterfaces")]
        public virtual System.Collections.Generic.IList<NetworkInterface> NetworkInterfaces { get; set; } 

        /// <summary>Specifies the scheduling options for the instances that are created from this template.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("scheduling")]
        public virtual Scheduling Scheduling { get; set; } 

        /// <summary>A list of service accounts with specified scopes. Access tokens for these service accounts are
        /// available to the instances that are created from this template. Use metadata queries to obtain the access
        /// tokens for these instances.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("serviceAccounts")]
        public virtual System.Collections.Generic.IList<ServiceAccount> ServiceAccounts { get; set; } 

        /// <summary>A list of tags to apply to the instances that are created from this template. The tags identify
        /// valid sources or targets for network firewalls. The setTags method can modify this list of tags. Each tag
        /// within the list must comply with RFC1035.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tags")]
        public virtual Tags Tags { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class InstanceReference : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The URL for a specific instance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instance")]
        public virtual string Instance { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An Instance Template resource.</summary>
    public class InstanceTemplate : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The creation timestamp for this instance template in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>[Output Only] A unique identifier for this instance template. The server defines this
        /// identifier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>[Output Only] The resource type, which is always compute#instanceTemplate for instance
        /// templates.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of the resource; provided by the client when the resource is created. The name must be 1-63
        /// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the
        /// regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter,
        /// and all following characters must be a dash, lowercase letter, or digit, except the last character, which
        /// cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The instance properties for this instance template.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("properties")]
        public virtual InstanceProperties Properties { get; set; } 

        /// <summary>[Output Only] The URL for this instance template. The server defines this URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A list of instance templates.</summary>
    public class InstanceTemplateList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] A unique identifier for this instance template. The server defines this
        /// identifier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output Only] list of InstanceTemplate resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<InstanceTemplate> Items { get; set; } 

        /// <summary>[Output Only] The resource type, which is always compute#instanceTemplatesListResponse for instance
        /// template lists.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] The URL for this instance template list. The server defines this URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class InstanceWithNamedPorts : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The URL of the instance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instance")]
        public virtual string Instance { get; set; } 

        /// <summary>[Output Only] The named ports that belong to this instance group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("namedPorts")]
        public virtual System.Collections.Generic.IList<NamedPort> NamedPorts { get; set; } 

        /// <summary>[Output Only] The status of the instance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class InstancesScopedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] List of instances contained in this scope.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instances")]
        public virtual System.Collections.Generic.IList<Instance> Instances { get; set; } 

        /// <summary>[Output Only] Informational warning which replaces the list of instances when the list is
        /// empty.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("warning")]
        public virtual InstancesScopedList.WarningData Warning { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        /// <summary>[Output Only] Informational warning which replaces the list of instances when the list is
        /// empty.</summary>
        public class WarningData
        {
            /// <summary>[Output Only] A warning code, if applicable. For example, Compute Engine returns
            /// NO_RESULTS_ON_PAGE if there are no results in the response.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("code")]
            public virtual string Code { get; set; } 

            /// <summary>[Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key":
            /// "scope", "value": "zones/us-east1-d" }</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("data")]
            public virtual System.Collections.Generic.IList<WarningData.DataData> Data { get; set; } 

            /// <summary>[Output Only] A human-readable description of the warning code.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("message")]
            public virtual string Message { get; set; } 

            

            public class DataData
            {
                /// <summary>[Output Only] A key that provides more detail on the warning being returned. For example,
                /// for warnings where there are no results in a list request for a particular zone, this key might be
                /// scope and the key value might be the zone name. Other examples might be a key indicating a
                /// deprecated resource and a suggested replacement, or a warning about invalid network settings (for
                /// example, if an instance attempts to perform IP forwarding but is not enabled for IP
                /// forwarding).</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("key")]
                public virtual string Key { get; set; } 

                /// <summary>[Output Only] A warning data value corresponding to the key.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("value")]
                public virtual string Value { get; set; } 

            }
        }
    }    

    public class InstancesSetLabelsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Fingerprint of the previous set of labels for this resource, used to prevent conflicts. Provide the
        /// latest fingerprint value when making a request to add or change labels.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labelFingerprint")]
        public virtual string LabelFingerprint { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IDictionary<string,string> Labels { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class InstancesSetMachineTypeRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Full or partial URL of the machine type resource. See Machine Types for a full list of machine
        /// types. For example: zones/us-central1-f/machineTypes/n1-standard-1</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("machineType")]
        public virtual string MachineType { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class InstancesSetServiceAccountRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Email address of the service account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("email")]
        public virtual string Email { get; set; } 

        /// <summary>The list of scopes to be made available for this service account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("scopes")]
        public virtual System.Collections.Generic.IList<string> Scopes { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class InstancesStartWithEncryptionKeyRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Array of disks associated with this instance that are protected with a customer-supplied encryption
        /// key.
        ///
        /// In order to start the instance, the disk url and its corresponding key must be provided.
        ///
        /// If the disk is not protected with a customer-supplied encryption key it should not be specified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disks")]
        public virtual System.Collections.Generic.IList<CustomerEncryptionKeyProtectedDisk> Disks { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A license resource.</summary>
    public class License : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Deprecated. This field no longer reflects whether a license charges a usage
        /// fee.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chargesUseFee")]
        public virtual System.Nullable<bool> ChargesUseFee { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#license for licenses.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] Name of the resource. The name is 1-63 characters long and complies with
        /// RFC1035.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A Machine Type resource.</summary>
    public class MachineType : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>[Output Only] The deprecation status associated with this machine type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deprecated")]
        public virtual DeprecationStatus Deprecated { get; set; } 

        /// <summary>[Output Only] An optional textual description of the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>[Output Only] The number of virtual CPUs that are available to the instance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("guestCpus")]
        public virtual System.Nullable<int> GuestCpus { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>[Deprecated] This property is deprecated and will never be populated with any relevant
        /// values.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageSpaceGb")]
        public virtual System.Nullable<int> ImageSpaceGb { get; set; } 

        /// <summary>[Output Only] Whether this machine type has a shared CPU. See Shared-core machine types for more
        /// information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isSharedCpu")]
        public virtual System.Nullable<bool> IsSharedCpu { get; set; } 

        /// <summary>[Output Only] The type of the resource. Always compute#machineType for machine types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] Maximum persistent disks allowed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maximumPersistentDisks")]
        public virtual System.Nullable<int> MaximumPersistentDisks { get; set; } 

        /// <summary>[Output Only] Maximum total persistent disks size (GB) allowed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maximumPersistentDisksSizeGb")]
        public virtual System.Nullable<long> MaximumPersistentDisksSizeGb { get; set; } 

        /// <summary>[Output Only] The amount of physical memory available to the instance, defined in MB.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("memoryMb")]
        public virtual System.Nullable<int> MemoryMb { get; set; } 

        /// <summary>[Output Only] Name of the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>[Output Only] List of extended scratch disks assigned to the instance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("scratchDisks")]
        public virtual System.Collections.Generic.IList<MachineType.ScratchDisksData> ScratchDisks { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>[Output Only] The name of the zone where the machine type resides, such as us-central1-a.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("zone")]
        public virtual string Zone { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        public class ScratchDisksData
        {
            /// <summary>Size of the scratch disk, defined in GB.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("diskGb")]
            public virtual System.Nullable<int> DiskGb { get; set; } 

        }
    }    

    public class MachineTypeAggregatedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output Only] A map of scoped machine type lists.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IDictionary<string,MachineTypesScopedList> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#machineTypeAggregatedList for aggregated lists of
        /// machine types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of machine types.</summary>
    public class MachineTypeList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output Only] A list of Machine Type resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<MachineType> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#machineTypeList for lists of machine
        /// types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class MachineTypesScopedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] List of machine types contained in this scope.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("machineTypes")]
        public virtual System.Collections.Generic.IList<MachineType> MachineTypes { get; set; } 

        /// <summary>[Output Only] An informational warning that appears when the machine types list is empty.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("warning")]
        public virtual MachineTypesScopedList.WarningData Warning { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        /// <summary>[Output Only] An informational warning that appears when the machine types list is empty.</summary>
        public class WarningData
        {
            /// <summary>[Output Only] A warning code, if applicable. For example, Compute Engine returns
            /// NO_RESULTS_ON_PAGE if there are no results in the response.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("code")]
            public virtual string Code { get; set; } 

            /// <summary>[Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key":
            /// "scope", "value": "zones/us-east1-d" }</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("data")]
            public virtual System.Collections.Generic.IList<WarningData.DataData> Data { get; set; } 

            /// <summary>[Output Only] A human-readable description of the warning code.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("message")]
            public virtual string Message { get; set; } 

            

            public class DataData
            {
                /// <summary>[Output Only] A key that provides more detail on the warning being returned. For example,
                /// for warnings where there are no results in a list request for a particular zone, this key might be
                /// scope and the key value might be the zone name. Other examples might be a key indicating a
                /// deprecated resource and a suggested replacement, or a warning about invalid network settings (for
                /// example, if an instance attempts to perform IP forwarding but is not enabled for IP
                /// forwarding).</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("key")]
                public virtual string Key { get; set; } 

                /// <summary>[Output Only] A warning data value corresponding to the key.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("value")]
                public virtual string Value { get; set; } 

            }
        }
    }    

    public class ManagedInstance : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The current action that the managed instance group has scheduled for the instance.
        /// Possible values: - NONE The instance is running, and the managed instance group does not have any scheduled
        /// actions for this instance. - CREATING The managed instance group is creating this instance. If the group
        /// fails to create this instance, it will try again until it is successful. - CREATING_WITHOUT_RETRIES The
        /// managed instance group is attempting to create this instance only once. If the group fails to create this
        /// instance, it does not try again and the group's targetSize value is decreased instead. - RECREATING The
        /// managed instance group is recreating this instance. - DELETING The managed instance group is permanently
        /// deleting this instance. - ABANDONING The managed instance group is abandoning this instance. The instance
        /// will be removed from the instance group and from any target pools that are associated with this group. -
        /// RESTARTING The managed instance group is restarting the instance. - REFRESHING The managed instance group is
        /// applying configuration changes to the instance without stopping it. For example, the group can update the
        /// target pool list for an instance without stopping that instance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("currentAction")]
        public virtual string CurrentAction { get; set; } 

        /// <summary>[Output only] The unique identifier for this resource. This field is empty when instance does not
        /// exist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>[Output Only] The URL of the instance. The URL can exist even if the instance has not yet been
        /// created.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instance")]
        public virtual string Instance { get; set; } 

        /// <summary>[Output Only] The status of the instance. This field is empty when the instance does not
        /// exist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instanceStatus")]
        public virtual string InstanceStatus { get; set; } 

        /// <summary>[Output Only] Information about the last attempt to create or delete the instance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastAttempt")]
        public virtual ManagedInstanceLastAttempt LastAttempt { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ManagedInstanceLastAttempt : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Encountered errors during the last attempt to create or delete the
        /// instance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errors")]
        public virtual ManagedInstanceLastAttempt.ErrorsData Errors { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        /// <summary>[Output Only] Encountered errors during the last attempt to create or delete the
        /// instance.</summary>
        public class ErrorsData
        {
            /// <summary>[Output Only] The array of errors encountered while processing this operation.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("errors")]
            public virtual System.Collections.Generic.IList<ErrorsData.ErrorsDataSchema> Errors { get; set; } 

            

            public class ErrorsDataSchema
            {
                /// <summary>[Output Only] The error type identifier for this error.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("code")]
                public virtual string Code { get; set; } 

                /// <summary>[Output Only] Indicates the field in the request that caused the error. This property is
                /// optional.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("location")]
                public virtual string Location { get; set; } 

                /// <summary>[Output Only] An optional, human-readable error message.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("message")]
                public virtual string Message { get; set; } 

            }
        }
    }    

    /// <summary>A metadata key/value entry.</summary>
    public class Metadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents
        /// and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after
        /// every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order
        /// to update or change metadata.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fingerprint")]
        public virtual string Fingerprint { get; set; } 

        /// <summary>Array of key/value pairs. The total size of all keys and values must be less than 512 KB.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Metadata.ItemsData> Items { get; set; } 

        /// <summary>[Output Only] Type of the resource. Always compute#metadata for metadata.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        public class ItemsData
        {
            /// <summary>Key for the metadata entry. Keys must conform to the following regexp: [a-zA-Z0-9-_]+, and be
            /// less than 128 bytes in length. This is reflected as part of a URL in the metadata server. Additionally,
            /// to avoid ambiguity, keys must not conflict with any other metadata keys for the project.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("key")]
            public virtual string Key { get; set; } 

            /// <summary>Value for the metadata entry. These are free-form strings, and only have meaning as interpreted
            /// by the image running in the instance. The only restriction placed on values is that their size must be
            /// less than or equal to 32768 bytes.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("value")]
            public virtual string Value { get; set; } 

        }
    }    

    /// <summary>The named port. For example: .</summary>
    public class NamedPort : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name for this named port. The name must be 1-63 characters long, and comply with
        /// RFC1035.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The port number, which can be a value between 1 and 65535.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("port")]
        public virtual System.Nullable<int> Port { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a Network resource. Read Networks and Firewalls for more information.</summary>
    public class Network : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The range of internal addresses that are legal on this network. This range is a CIDR specification,
        /// for example: 192.168.0.0/16. Provided by the client when the network is created.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("IPv4Range")]
        public virtual string IPv4Range { get; set; } 

        /// <summary>When set to true, the network is created in "auto subnet mode". When set to false, the network is
        /// in "custom subnet mode".
        ///
        /// In "auto subnet mode", a newly created network is assigned the default CIDR of 10.128.0.0/9 and it
        /// automatically creates one subnetwork per region.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("autoCreateSubnetworks")]
        public virtual System.Nullable<bool> AutoCreateSubnetworks { get; set; } 

        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>A gateway address for default routing to other networks. This value is read only and is selected by
        /// the Google Compute Engine, typically as the first usable address in the IPv4Range.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gatewayIPv4")]
        public virtual string GatewayIPv4 { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>[Output Only] Type of the resource. Always compute#network for networks.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of the resource. Provided by the client when the resource is created. The name must be 1-63
        /// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the
        /// regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter,
        /// and all following characters must be a dash, lowercase letter, or digit, except the last character, which
        /// cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>[Output Only] List of network peerings for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("peerings")]
        public virtual System.Collections.Generic.IList<NetworkPeering> Peerings { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>[Output Only] Server-defined fully-qualified URLs for all subnetworks in this network.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subnetworks")]
        public virtual System.Collections.Generic.IList<string> Subnetworks { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A network interface resource attached to an instance.</summary>
    public class NetworkInterface : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>An array of configurations for this interface. Currently, only one access config, ONE_TO_ONE_NAT,
        /// is supported. If there are no accessConfigs specified, then this instance will have no external internet
        /// access.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accessConfigs")]
        public virtual System.Collections.Generic.IList<AccessConfig> AccessConfigs { get; set; } 

        /// <summary>[Output Only] Type of the resource. Always compute#networkInterface for network
        /// interfaces.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] The name of the network interface, generated by the server. For network devices,
        /// these are eth0, eth1, etc.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>URL of the network resource for this instance. When creating an instance, if neither the network
        /// nor the subnetwork is specified, the default network global/networks/default is used; if the network is not
        /// specified but the subnetwork is specified, the network is inferred.
        ///
        /// This field is optional when creating a firewall rule. If not specified when creating a firewall rule, the
        /// default network global/networks/default is used.
        ///
        /// If you specify this property, you can specify the network as a full or partial URL. For example, the
        /// following are all valid URLs: -
        /// https://www.googleapis.com/compute/v1/projects/project/global/networks/network -
        /// projects/project/global/networks/network - global/networks/default</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("network")]
        public virtual string Network { get; set; } 

        /// <summary>An IPv4 internal network address to assign to the instance for this network interface. If not
        /// specified by the user, an unused internal IP is assigned by the system.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("networkIP")]
        public virtual string NetworkIP { get; set; } 

        /// <summary>The URL of the Subnetwork resource for this instance. If the network resource is in legacy mode, do
        /// not provide this property. If the network is in auto subnet mode, providing the subnetwork is optional. If
        /// the network is in custom subnet mode, then this field should be specified. If you specify this property, you
        /// can specify the subnetwork as a full or partial URL. For example, the following are all valid URLs: -
        /// https://www.googleapis.com/compute/v1/projects/project/regions/region/subnetworks/subnetwork -
        /// regions/region/subnetworks/subnetwork</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subnetwork")]
        public virtual string Subnetwork { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of networks.</summary>
    public class NetworkList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output Only] A list of Network resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Network> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#networkList for lists of networks.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A network peering attached to a network resource. The message includes the peering name, peer network,
    /// peering state, and a flag indicating whether Google Compute Engine should automatically create routes for the
    /// peering.</summary>
    public class NetworkPeering : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether full mesh connectivity is created and managed automatically. When it is set to true, Google
        /// Compute Engine will automatically create and manage the routes between two networks when the state is
        /// ACTIVE. Otherwise, user needs to create routes manually to route packets to peer network.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("autoCreateRoutes")]
        public virtual System.Nullable<bool> AutoCreateRoutes { get; set; } 

        /// <summary>Name of this peering. Provided by the client when the peering is created. The name must comply with
        /// RFC1035. Specifically, the name must be 1-63 characters long and match regular expression
        /// [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all the following
        /// characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a
        /// dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The URL of the peer network. It can be either full URL or partial URL. The peer network may belong
        /// to a different project. If the partial URL does not contain project, it is assumed that the peer network is
        /// in the same project as the current network.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("network")]
        public virtual string Network { get; set; } 

        /// <summary>[Output Only] State for the peering.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; } 

        /// <summary>[Output Only] Details about the current state of the peering.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("stateDetails")]
        public virtual string StateDetails { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class NetworksAddPeeringRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether Google Compute Engine manages the routes automatically.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("autoCreateRoutes")]
        public virtual System.Nullable<bool> AutoCreateRoutes { get; set; } 

        /// <summary>Name of the peering, which should conform to RFC1035.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>URL of the peer network. It can be either full URL or partial URL. The peer network may belong to a
        /// different project. If the partial URL does not contain project, it is assumed that the peer network is in
        /// the same project as the current network.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("peerNetwork")]
        public virtual string PeerNetwork { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class NetworksRemovePeeringRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Name of the peering, which should conform to RFC1035.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An Operation resource, used to manage asynchronous API requests.</summary>
    public class Operation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Reserved for future use.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clientOperationId")]
        public virtual string ClientOperationId { get; set; } 

        /// <summary>[Deprecated] This field is deprecated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>[Output Only] A textual description of the operation, which is set when the operation is
        /// created.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>[Output Only] The time that this operation was completed. This value is in RFC3339 text
        /// format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endTime")]
        public virtual string EndTime { get; set; } 

        /// <summary>[Output Only] If errors are generated during processing of the operation, this field will be
        /// populated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Operation.ErrorData Error { get; set; } 

        /// <summary>[Output Only] If the operation fails, this field contains the HTTP error message that was returned,
        /// such as NOT FOUND.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("httpErrorMessage")]
        public virtual string HttpErrorMessage { get; set; } 

        /// <summary>[Output Only] If the operation fails, this field contains the HTTP error status code that was
        /// returned. For example, a 404 means the resource was not found.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("httpErrorStatusCode")]
        public virtual System.Nullable<int> HttpErrorStatusCode { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>[Output Only] The time that this operation was requested. This value is in RFC3339 text
        /// format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("insertTime")]
        public virtual string InsertTime { get; set; } 

        /// <summary>[Output Only] Type of the resource. Always compute#operation for Operation resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] Name of the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>[Output Only] The type of operation, such as insert, update, or delete, and so on.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operationType")]
        public virtual string OperationType { get; set; } 

        /// <summary>[Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement
        /// that this be linear or support any granularity of operations. This should not be used to guess when the
        /// operation will be complete. This number should monotonically increase as the operation progresses.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("progress")]
        public virtual System.Nullable<int> Progress { get; set; } 

        /// <summary>[Output Only] The URL of the region where the operation resides. Only available when performing
        /// regional operations.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("region")]
        public virtual string Region { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>[Output Only] The time that this operation was started by the server. This value is in RFC3339 text
        /// format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startTime")]
        public virtual string StartTime { get; set; } 

        /// <summary>[Output Only] The status of the operation, which can be one of the following: PENDING, RUNNING, or
        /// DONE.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>[Output Only] An optional textual description of the current status of the operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("statusMessage")]
        public virtual string StatusMessage { get; set; } 

        /// <summary>[Output Only] The unique target ID, which identifies a specific incarnation of the target
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetId")]
        public virtual System.Nullable<ulong> TargetId { get; set; } 

        /// <summary>[Output Only] The URL of the resource that the operation modifies. For operations related to
        /// creating a snapshot, this points to the persistent disk that the snapshot was created from.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetLink")]
        public virtual string TargetLink { get; set; } 

        /// <summary>[Output Only] User who requested the operation, for example: user@example.com.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("user")]
        public virtual string User { get; set; } 

        /// <summary>[Output Only] If warning messages are generated during processing of the operation, this field will
        /// be populated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("warnings")]
        public virtual System.Collections.Generic.IList<Operation.WarningsData> Warnings { get; set; } 

        /// <summary>[Output Only] The URL of the zone where the operation resides. Only available when performing per-
        /// zone operations.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("zone")]
        public virtual string Zone { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        /// <summary>[Output Only] If errors are generated during processing of the operation, this field will be
        /// populated.</summary>
        public class ErrorData
        {
            /// <summary>[Output Only] The array of errors encountered while processing this operation.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("errors")]
            public virtual System.Collections.Generic.IList<ErrorData.ErrorsData> Errors { get; set; } 

            

            public class ErrorsData
            {
                /// <summary>[Output Only] The error type identifier for this error.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("code")]
                public virtual string Code { get; set; } 

                /// <summary>[Output Only] Indicates the field in the request that caused the error. This property is
                /// optional.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("location")]
                public virtual string Location { get; set; } 

                /// <summary>[Output Only] An optional, human-readable error message.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("message")]
                public virtual string Message { get; set; } 

            }
        }    

        public class WarningsData
        {
            /// <summary>[Output Only] A warning code, if applicable. For example, Compute Engine returns
            /// NO_RESULTS_ON_PAGE if there are no results in the response.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("code")]
            public virtual string Code { get; set; } 

            /// <summary>[Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key":
            /// "scope", "value": "zones/us-east1-d" }</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("data")]
            public virtual System.Collections.Generic.IList<WarningsData.DataData> Data { get; set; } 

            /// <summary>[Output Only] A human-readable description of the warning code.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("message")]
            public virtual string Message { get; set; } 

            

            public class DataData
            {
                /// <summary>[Output Only] A key that provides more detail on the warning being returned. For example,
                /// for warnings where there are no results in a list request for a particular zone, this key might be
                /// scope and the key value might be the zone name. Other examples might be a key indicating a
                /// deprecated resource and a suggested replacement, or a warning about invalid network settings (for
                /// example, if an instance attempts to perform IP forwarding but is not enabled for IP
                /// forwarding).</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("key")]
                public virtual string Key { get; set; } 

                /// <summary>[Output Only] A warning data value corresponding to the key.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("value")]
                public virtual string Value { get; set; } 

            }
        }
    }    

    public class OperationAggregatedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output Only] A map of scoped operation lists.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IDictionary<string,OperationsScopedList> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#operationAggregatedList for aggregated lists of
        /// operations.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of Operation resources.</summary>
    public class OperationList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output Only] A list of Operation resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Operation> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#operations for Operations resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class OperationsScopedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] List of operations contained in this scope.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operations")]
        public virtual System.Collections.Generic.IList<Operation> Operations { get; set; } 

        /// <summary>[Output Only] Informational warning which replaces the list of operations when the list is
        /// empty.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("warning")]
        public virtual OperationsScopedList.WarningData Warning { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        /// <summary>[Output Only] Informational warning which replaces the list of operations when the list is
        /// empty.</summary>
        public class WarningData
        {
            /// <summary>[Output Only] A warning code, if applicable. For example, Compute Engine returns
            /// NO_RESULTS_ON_PAGE if there are no results in the response.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("code")]
            public virtual string Code { get; set; } 

            /// <summary>[Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key":
            /// "scope", "value": "zones/us-east1-d" }</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("data")]
            public virtual System.Collections.Generic.IList<WarningData.DataData> Data { get; set; } 

            /// <summary>[Output Only] A human-readable description of the warning code.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("message")]
            public virtual string Message { get; set; } 

            

            public class DataData
            {
                /// <summary>[Output Only] A key that provides more detail on the warning being returned. For example,
                /// for warnings where there are no results in a list request for a particular zone, this key might be
                /// scope and the key value might be the zone name. Other examples might be a key indicating a
                /// deprecated resource and a suggested replacement, or a warning about invalid network settings (for
                /// example, if an instance attempts to perform IP forwarding but is not enabled for IP
                /// forwarding).</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("key")]
                public virtual string Key { get; set; } 

                /// <summary>[Output Only] A warning data value corresponding to the key.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("value")]
                public virtual string Value { get; set; } 

            }
        }
    }    

    /// <summary>A matcher for the path portion of the URL. The BackendService from the longest-matched rule will serve
    /// the URL. If no rule was matched, the default service will be used.</summary>
    public class PathMatcher : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The full or partial URL to the BackendService resource. This will be used if none of the pathRules
        /// defined by this PathMatcher is matched by the URL's path portion. For example, the following are all valid
        /// URLs to a BackendService resource: -
        /// https://www.googleapis.com/compute/v1/projects/project/global/backendServices/backendService -
        /// compute/v1/projects/project/global/backendServices/backendService -
        /// global/backendServices/backendService</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultService")]
        public virtual string DefaultService { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>The name to which this PathMatcher is referred by the HostRule.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The list of path rules.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pathRules")]
        public virtual System.Collections.Generic.IList<PathRule> PathRules { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A path-matching rule for a URL. If matched, will use the specified BackendService to handle the traffic
    /// arriving at this URL.</summary>
    public class PathRule : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of path patterns to match. Each must start with / and the only place a * is allowed is at
        /// the end following a /. The string fed to the path matcher does not include any text after the first ? or #,
        /// and those chars are not allowed here.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("paths")]
        public virtual System.Collections.Generic.IList<string> Paths { get; set; } 

        /// <summary>The URL of the BackendService resource if this rule is matched.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("service")]
        public virtual string Service { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A Project resource. Projects can only be created in the Google Cloud Platform Console. Unless marked
    /// otherwise, values can only be modified in the console.</summary>
    public class Project : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Metadata key/value pairs available to all instances contained in this project. See Custom metadata
        /// for more information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("commonInstanceMetadata")]
        public virtual Metadata CommonInstanceMetadata { get; set; } 

        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>[Output Only] Default service account used by VMs running in this project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultServiceAccount")]
        public virtual string DefaultServiceAccount { get; set; } 

        /// <summary>An optional textual description of the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Restricted features enabled for use on this project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enabledFeatures")]
        public virtual System.Collections.Generic.IList<string> EnabledFeatures { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the server.
        /// This is not the project ID, and is just a unique ID used by Compute Engine to identify resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>[Output Only] Type of the resource. Always compute#project for projects.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The project ID. For example: my-example-project. Use the project ID to make requests to Compute
        /// Engine.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>[Output Only] Quotas assigned to this project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("quotas")]
        public virtual System.Collections.Generic.IList<Quota> Quotas { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The naming prefix for daily usage reports and the Google Cloud Storage bucket where they are
        /// stored.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("usageExportLocation")]
        public virtual UsageExportLocation UsageExportLocation { get; set; } 

        /// <summary>[Output Only] The role this project has in a Cross Project Network (XPN) configuration. Currently
        /// only HOST projects are differentiated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("xpnProjectStatus")]
        public virtual string XpnProjectStatus { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ProjectsDisableXpnResourceRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>XPN resource ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("xpnResource")]
        public virtual XpnResourceId XpnResource { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ProjectsEnableXpnResourceRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>XPN resource ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("xpnResource")]
        public virtual XpnResourceId XpnResource { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ProjectsGetXpnResources : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Type of resource. Always compute#projectsGetXpnResources for lists of XPN
        /// resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>XPN resources attached to this project as their XPN host.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resources")]
        public virtual System.Collections.Generic.IList<XpnResourceId> Resources { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ProjectsListXpnHostsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional organization ID managed by Cloud Resource Manager, for which to list XPN host projects. If
        /// not specified, the organization will be inferred from the project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("organization")]
        public virtual string Organization { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A quotas entry.</summary>
    public class Quota : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Quota limit for this metric.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("limit")]
        public virtual System.Nullable<double> Limit { get; set; } 

        /// <summary>[Output Only] Name of the quota metric.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metric")]
        public virtual string Metric { get; set; } 

        /// <summary>[Output Only] Current usage of this metric.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("usage")]
        public virtual System.Nullable<double> Usage { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Region resource.</summary>
    public class Region : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>[Output Only] The deprecation status associated with this region.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deprecated")]
        public virtual DeprecationStatus Deprecated { get; set; } 

        /// <summary>[Output Only] Textual description of the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>[Output Only] Type of the resource. Always compute#region for regions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] Name of the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>[Output Only] Quotas assigned to this region.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("quotas")]
        public virtual System.Collections.Generic.IList<Quota> Quotas { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>[Output Only] Status of the region, either UP or DOWN.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>[Output Only] A list of zones available in this region, in the form of resource URLs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("zones")]
        public virtual System.Collections.Generic.IList<string> Zones { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of autoscalers.</summary>
    public class RegionAutoscalerList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A list of autoscalers.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Autoscaler> Items { get; set; } 

        /// <summary>Type of resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] A token used to continue a truncated list request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of InstanceGroup resources.</summary>
    public class RegionInstanceGroupList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A list of InstanceGroup resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<InstanceGroup> Items { get; set; } 

        /// <summary>The resource type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] The URL for this resource type. The server generates this URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of managed instance groups.</summary>
    public class RegionInstanceGroupManagerList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A list of managed instance groups.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<InstanceGroupManager> Items { get; set; } 

        /// <summary>[Output Only] The resource type, which is always compute#instanceGroupManagerList for a list of
        /// managed instance groups that exist in th regional scope.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output only] A token used to continue a truncated list request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output only] The URL for this resource type. The server generates this URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class RegionInstanceGroupManagersAbandonInstancesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The URLs of one or more instances to abandon. This can be a full URL or a partial URL, such as
        /// zones/[ZONE]/instances/[INSTANCE_NAME].</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instances")]
        public virtual System.Collections.Generic.IList<string> Instances { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class RegionInstanceGroupManagersDeleteInstancesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The URLs of one or more instances to delete. This can be a full URL or a partial URL, such as
        /// zones/[ZONE]/instances/[INSTANCE_NAME].</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instances")]
        public virtual System.Collections.Generic.IList<string> Instances { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class RegionInstanceGroupManagersListInstancesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of managed instances.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("managedInstances")]
        public virtual System.Collections.Generic.IList<ManagedInstance> ManagedInstances { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class RegionInstanceGroupManagersRecreateRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The URLs of one or more instances to recreate. This can be a full URL or a partial URL, such as
        /// zones/[ZONE]/instances/[INSTANCE_NAME].</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instances")]
        public virtual System.Collections.Generic.IList<string> Instances { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class RegionInstanceGroupManagersSetTargetPoolsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Fingerprint of the target pools information, which is a hash of the contents. This field is used
        /// for optimistic locking when you update the target pool entries. This field is optional.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fingerprint")]
        public virtual string Fingerprint { get; set; } 

        /// <summary>The URL of all TargetPool resources to which instances in the instanceGroup field are added. The
        /// target pools automatically apply to all of the instances in the managed instance group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetPools")]
        public virtual System.Collections.Generic.IList<string> TargetPools { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class RegionInstanceGroupManagersSetTemplateRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>URL of the InstanceTemplate resource from which all new instances will be created.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instanceTemplate")]
        public virtual string InstanceTemplate { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class RegionInstanceGroupsListInstances : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Unique identifier for the resource. Defined by the server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A list of instances and any named ports that are assigned to those instances.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<InstanceWithNamedPorts> Items { get; set; } 

        /// <summary>The resource type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class RegionInstanceGroupsListInstancesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Instances in which state should be returned. Valid options are: 'ALL', 'RUNNING'. By default, it
        /// lists all instances.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instanceState")]
        public virtual string InstanceState { get; set; } 

        /// <summary>Name of port user is interested in. It is optional. If it is set, only information about this ports
        /// will be returned. If it is not set, all the named ports will be returned. Always lists all
        /// instances.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("portName")]
        public virtual string PortName { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class RegionInstanceGroupsSetNamedPortsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The fingerprint of the named ports information for this instance group. Use this optional property
        /// to prevent conflicts when multiple users change the named ports settings concurrently. Obtain the
        /// fingerprint with the instanceGroups.get method. Then, include the fingerprint in your request to ensure that
        /// you do not overwrite changes that were applied from another concurrent request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fingerprint")]
        public virtual string Fingerprint { get; set; } 

        /// <summary>The list of named ports to set for this instance group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("namedPorts")]
        public virtual System.Collections.Generic.IList<NamedPort> NamedPorts { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of region resources.</summary>
    public class RegionList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output Only] A list of Region resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Region> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#regionList for lists of regions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ResourceGroupReference : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A URI referencing one of the instance groups listed in the backend service.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("group")]
        public virtual string Group { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a Route resource. A route specifies how certain packets should be handled by the network.
    /// Routes are associated with instances by tags and the set of routes for a particular instance is called its
    /// routing table.
    ///
    /// For each packet leaving an instance, the system searches that instance's routing table for a single best
    /// matching route. Routes match packets by destination IP address, preferring smaller or more specific ranges over
    /// larger ones. If there is a tie, the system selects the route with the smallest priority value. If there is still
    /// a tie, it uses the layer three and four packet headers to select just one of the remaining matching routes. The
    /// packet is then forwarded as specified by the nextHop field of the winning route - either to another instance
    /// destination, an instance gateway, or a Google Compute Engine-operated gateway.
    ///
    /// Packets that do not match any route in the sending instance's routing table are dropped.</summary>
    public class Route : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>The destination range of outgoing packets that this route applies to. Only IPv4 is
        /// supported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("destRange")]
        public virtual string DestRange { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>[Output Only] Type of this resource. Always compute#routes for Route resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of the resource. Provided by the client when the resource is created. The name must be 1-63
        /// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the
        /// regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter,
        /// and all following characters must be a dash, lowercase letter, or digit, except the last character, which
        /// cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Fully-qualified URL of the network that this route applies to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("network")]
        public virtual string Network { get; set; } 

        /// <summary>The URL to a gateway that should handle matching packets. You can only specify the internet gateway
        /// using a full or partial valid URL:  projects//global/gateways/default-internet-gateway</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextHopGateway")]
        public virtual string NextHopGateway { get; set; } 

        /// <summary>The URL to an instance that should handle matching packets. You can specify this as a full or
        /// partial URL. For example:
        /// https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextHopInstance")]
        public virtual string NextHopInstance { get; set; } 

        /// <summary>The network IP address of an instance that should handle matching packets. Only IPv4 is
        /// supported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextHopIp")]
        public virtual string NextHopIp { get; set; } 

        /// <summary>The URL of the local network if it should handle matching packets.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextHopNetwork")]
        public virtual string NextHopNetwork { get; set; } 

        /// <summary>[Output Only] The network peering name that should handle matching packets, which should conform to
        /// RFC1035.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextHopPeering")]
        public virtual string NextHopPeering { get; set; } 

        /// <summary>The URL to a VpnTunnel that should handle matching packets.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextHopVpnTunnel")]
        public virtual string NextHopVpnTunnel { get; set; } 

        /// <summary>The priority of this route. Priority is used to break ties in cases where there is more than one
        /// matching route of equal prefix length. In the case of two routes with equal prefix length, the one with the
        /// lowest-numbered priority value wins. Default value is 1000. Valid range is 0 through 65535.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("priority")]
        public virtual System.Nullable<long> Priority { get; set; } 

        /// <summary>[Output Only] Server-defined fully-qualified URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>A list of instance tags to which this route applies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tags")]
        public virtual System.Collections.Generic.IList<string> Tags { get; set; } 

        /// <summary>[Output Only] If potential misconfigurations are detected for this route, this field will be
        /// populated with warning messages.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("warnings")]
        public virtual System.Collections.Generic.IList<Route.WarningsData> Warnings { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        public class WarningsData
        {
            /// <summary>[Output Only] A warning code, if applicable. For example, Compute Engine returns
            /// NO_RESULTS_ON_PAGE if there are no results in the response.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("code")]
            public virtual string Code { get; set; } 

            /// <summary>[Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key":
            /// "scope", "value": "zones/us-east1-d" }</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("data")]
            public virtual System.Collections.Generic.IList<WarningsData.DataData> Data { get; set; } 

            /// <summary>[Output Only] A human-readable description of the warning code.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("message")]
            public virtual string Message { get; set; } 

            

            public class DataData
            {
                /// <summary>[Output Only] A key that provides more detail on the warning being returned. For example,
                /// for warnings where there are no results in a list request for a particular zone, this key might be
                /// scope and the key value might be the zone name. Other examples might be a key indicating a
                /// deprecated resource and a suggested replacement, or a warning about invalid network settings (for
                /// example, if an instance attempts to perform IP forwarding but is not enabled for IP
                /// forwarding).</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("key")]
                public virtual string Key { get; set; } 

                /// <summary>[Output Only] A warning data value corresponding to the key.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("value")]
                public virtual string Value { get; set; } 

            }
        }
    }    

    /// <summary>Contains a list of Route resources.</summary>
    public class RouteList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Unique identifier for the resource. Defined by the server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output Only] A list of Route resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Route> Items { get; set; } 

        /// <summary>Type of resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Router resource.</summary>
    public class Router : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>BGP information specific to this router.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bgp")]
        public virtual RouterBgp Bgp { get; set; } 

        /// <summary>BGP information that needs to be configured into the routing stack to establish the BGP peering. It
        /// must specify peer ASN and either interface name, IP, or peer IP. Please refer to RFC4273.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bgpPeers")]
        public virtual System.Collections.Generic.IList<RouterBgpPeer> BgpPeers { get; set; } 

        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>Router interfaces. Each interface requires either one linked resource (e.g. linkedVpnTunnel), or IP
        /// address and IP address range (e.g. ipRange), or both.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("interfaces")]
        public virtual System.Collections.Generic.IList<RouterInterface> Interfaces { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#router for routers.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of the resource. Provided by the client when the resource is created. The name must be 1-63
        /// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the
        /// regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter,
        /// and all following characters must be a dash, lowercase letter, or digit, except the last character, which
        /// cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>URI of the network to which this router belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("network")]
        public virtual string Network { get; set; } 

        /// <summary>[Output Only] URI of the region where the router resides.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("region")]
        public virtual string Region { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of routers.</summary>
    public class RouterAggregatedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A map of scoped router lists.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IDictionary<string,RoutersScopedList> Items { get; set; } 

        /// <summary>Type of resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class RouterBgp : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Local BGP Autonomous System Number (ASN). Must be an RFC6996 private ASN, either 16-bit or 32-bit.
        /// The value will be fixed for this router resource. All VPN tunnels that link to this router will have the
        /// same local ASN.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("asn")]
        public virtual System.Nullable<long> Asn { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class RouterBgpPeer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The priority of routes advertised to this BGP peer. In the case where there is more than one
        /// matching route of maximum length, the routes with lowest priority value win.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertisedRoutePriority")]
        public virtual System.Nullable<long> AdvertisedRoutePriority { get; set; } 

        /// <summary>Name of the interface the BGP peer is associated with.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("interfaceName")]
        public virtual string InterfaceName { get; set; } 

        /// <summary>IP address of the interface inside Google Cloud Platform. Only IPv4 is supported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ipAddress")]
        public virtual string IpAddress { get; set; } 

        /// <summary>Name of this BGP peer. The name must be 1-63 characters long and comply with RFC1035.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Peer BGP Autonomous System Number (ASN). For VPN use case, this value can be different for every
        /// tunnel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("peerAsn")]
        public virtual System.Nullable<long> PeerAsn { get; set; } 

        /// <summary>IP address of the BGP interface outside Google cloud. Only IPv4 is supported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("peerIpAddress")]
        public virtual string PeerIpAddress { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class RouterInterface : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>IP address and range of the interface. The IP range must be in the RFC3927 link-local IP space. The
        /// value must be a CIDR-formatted string, for example: 169.254.0.1/30. NOTE: Do not truncate the address as it
        /// represents the IP address of the interface.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ipRange")]
        public virtual string IpRange { get; set; } 

        /// <summary>URI of the linked VPN tunnel. It must be in the same region as the router. Each interface can have
        /// at most one linked resource and it could either be a VPN Tunnel or an interconnect attachment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("linkedVpnTunnel")]
        public virtual string LinkedVpnTunnel { get; set; } 

        /// <summary>Name of this interface entry. The name must be 1-63 characters long and comply with
        /// RFC1035.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of Router resources.</summary>
    public class RouterList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A list of Router resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Router> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#router for routers.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class RouterStatus : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Best routes for this router's network.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bestRoutes")]
        public virtual System.Collections.Generic.IList<Route> BestRoutes { get; set; } 

        /// <summary>Best routes learned by this router.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bestRoutesForRouter")]
        public virtual System.Collections.Generic.IList<Route> BestRoutesForRouter { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("bgpPeerStatus")]
        public virtual System.Collections.Generic.IList<RouterStatusBgpPeerStatus> BgpPeerStatus { get; set; } 

        /// <summary>URI of the network to which this router belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("network")]
        public virtual string Network { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class RouterStatusBgpPeerStatus : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Routes that were advertised to the remote BGP peer</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertisedRoutes")]
        public virtual System.Collections.Generic.IList<Route> AdvertisedRoutes { get; set; } 

        /// <summary>IP address of the local BGP interface.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ipAddress")]
        public virtual string IpAddress { get; set; } 

        /// <summary>URL of the VPN tunnel that this BGP peer controls.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("linkedVpnTunnel")]
        public virtual string LinkedVpnTunnel { get; set; } 

        /// <summary>Name of this BGP peer. Unique within the Routers resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Number of routes learned from the remote BGP Peer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("numLearnedRoutes")]
        public virtual System.Nullable<long> NumLearnedRoutes { get; set; } 

        /// <summary>IP address of the remote BGP interface.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("peerIpAddress")]
        public virtual string PeerIpAddress { get; set; } 

        /// <summary>BGP state as specified in RFC1771.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; } 

        /// <summary>Status of the BGP peer: {UP, DOWN}</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>Time this session has been up. Format: 14 years, 51 weeks, 6 days, 23 hours, 59 minutes, 59
        /// seconds</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uptime")]
        public virtual string Uptime { get; set; } 

        /// <summary>Time this session has been up, in seconds. Format: 145</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uptimeSeconds")]
        public virtual string UptimeSeconds { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class RouterStatusResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Type of resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("result")]
        public virtual RouterStatus Result { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class RoutersPreviewResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Preview of given router.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resource")]
        public virtual Router Resource { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class RoutersScopedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of routers contained in this scope.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("routers")]
        public virtual System.Collections.Generic.IList<Router> Routers { get; set; } 

        /// <summary>Informational warning which replaces the list of routers when the list is empty.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("warning")]
        public virtual RoutersScopedList.WarningData Warning { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        /// <summary>Informational warning which replaces the list of routers when the list is empty.</summary>
        public class WarningData
        {
            /// <summary>[Output Only] A warning code, if applicable. For example, Compute Engine returns
            /// NO_RESULTS_ON_PAGE if there are no results in the response.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("code")]
            public virtual string Code { get; set; } 

            /// <summary>[Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key":
            /// "scope", "value": "zones/us-east1-d" }</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("data")]
            public virtual System.Collections.Generic.IList<WarningData.DataData> Data { get; set; } 

            /// <summary>[Output Only] A human-readable description of the warning code.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("message")]
            public virtual string Message { get; set; } 

            

            public class DataData
            {
                /// <summary>[Output Only] A key that provides more detail on the warning being returned. For example,
                /// for warnings where there are no results in a list request for a particular zone, this key might be
                /// scope and the key value might be the zone name. Other examples might be a key indicating a
                /// deprecated resource and a suggested replacement, or a warning about invalid network settings (for
                /// example, if an instance attempts to perform IP forwarding but is not enabled for IP
                /// forwarding).</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("key")]
                public virtual string Key { get; set; } 

                /// <summary>[Output Only] A warning data value corresponding to the key.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("value")]
                public virtual string Value { get; set; } 

            }
        }
    }    

    public class SSLHealthCheck : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The TCP port number for the health check request. The default value is 443. Valid values are 1
        /// through 65535.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("port")]
        public virtual System.Nullable<int> Port { get; set; } 

        /// <summary>Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port
        /// takes precedence.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("portName")]
        public virtual string PortName { get; set; } 

        /// <summary>Specifies the type of proxy header to append before sending data to the backend, either NONE or
        /// PROXY_V1. The default is NONE.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("proxyHeader")]
        public virtual string ProxyHeader { get; set; } 

        /// <summary>The application data to send once the SSL connection has been established (default value is empty).
        /// If both request and response are empty, the connection establishment alone will indicate health. The request
        /// data can only be ASCII.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("request")]
        public virtual string Request { get; set; } 

        /// <summary>The bytes to match against the beginning of the response data. If left empty (the default value),
        /// any response will indicate health. The response data can only be ASCII.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("response")]
        public virtual string Response { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Sets the scheduling options for an Instance.</summary>
    public class Scheduling : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Specifies whether the instance should be automatically restarted if it is terminated by Compute
        /// Engine (not terminated by a user). You can only set the automatic restart option for standard instances.
        /// Preemptible instances cannot be automatically restarted.
        ///
        /// By default, this is set to true so an instance is automatically restarted if it is terminated by Compute
        /// Engine.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("automaticRestart")]
        public virtual System.Nullable<bool> AutomaticRestart { get; set; } 

        /// <summary>Defines the maintenance behavior for this instance. For standard instances, the default behavior is
        /// MIGRATE. For preemptible instances, the default and only possible behavior is TERMINATE. For more
        /// information, see Setting Instance Scheduling Options.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("onHostMaintenance")]
        public virtual string OnHostMaintenance { get; set; } 

        /// <summary>Defines whether the instance is preemptible. This can only be set during instance creation, it
        /// cannot be set or changed after the instance has been created.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("preemptible")]
        public virtual System.Nullable<bool> Preemptible { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An instance's serial console output.</summary>
    public class SerialPortOutput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The contents of the console output.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contents")]
        public virtual string Contents { get; set; } 

        /// <summary>[Output Only] Type of the resource. Always compute#serialPortOutput for serial port
        /// output.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] The position of the next byte of content from the serial console output. Use this
        /// value in the next request as the start parameter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("next")]
        public virtual System.Nullable<long> Next { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The starting byte position of the output that was returned. This should match the start parameter
        /// sent with the request. If the serial console output exceeds the size of the buffer, older output will be
        /// overwritten by newer content and the start values will be mismatched.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("start")]
        public virtual System.Nullable<long> Start { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A service account.</summary>
    public class ServiceAccount : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Email address of the service account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("email")]
        public virtual string Email { get; set; } 

        /// <summary>The list of scopes to be made available for this service account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("scopes")]
        public virtual System.Collections.Generic.IList<string> Scopes { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A persistent disk snapshot resource.</summary>
    public class Snapshot : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>[Output Only] Size of the snapshot, specified in GB.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diskSizeGb")]
        public virtual System.Nullable<long> DiskSizeGb { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>[Output Only] Type of the resource. Always compute#snapshot for Snapshot resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>A fingerprint for the labels being applied to this snapshot, which is essentially a hash of the
        /// labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes
        /// after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in
        /// order to update or change labels.
        ///
        /// To see the latest fingerprint, make a get() request to retrieve a snapshot.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labelFingerprint")]
        public virtual string LabelFingerprint { get; set; } 

        /// <summary>Labels to apply to this snapshot. These can be later modified by the setLabels method. Label values
        /// may be empty.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IDictionary<string,string> Labels { get; set; } 

        /// <summary>[Output Only] A list of public visible licenses that apply to this snapshot. This can be because
        /// the original image had licenses attached (such as a Windows image).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("licenses")]
        public virtual System.Collections.Generic.IList<string> Licenses { get; set; } 

        /// <summary>Name of the resource; provided by the client when the resource is created. The name must be 1-63
        /// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the
        /// regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter,
        /// and all following characters must be a dash, lowercase letter, or digit, except the last character, which
        /// cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>Encrypts the snapshot using a customer-supplied encryption key.
        ///
        /// After you encrypt a snapshot using a customer-supplied key, you must provide the same key if you use the
        /// image later For example, you must provide the encryption key when you create a disk from the encrypted
        /// snapshot in a future request.
        ///
        /// Customer-supplied encryption keys do not protect access to metadata of the disk.
        ///
        /// If you do not provide an encryption key when creating the snapshot, then the snapshot will be encrypted
        /// using an automatically generated key and you do not need to provide a key to use the snapshot
        /// later.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snapshotEncryptionKey")]
        public virtual CustomerEncryptionKey SnapshotEncryptionKey { get; set; } 

        /// <summary>[Output Only] The source disk used to create this snapshot.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceDisk")]
        public virtual string SourceDisk { get; set; } 

        /// <summary>The customer-supplied encryption key of the source disk. Required if the source disk is protected
        /// by a customer-supplied encryption key.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceDiskEncryptionKey")]
        public virtual CustomerEncryptionKey SourceDiskEncryptionKey { get; set; } 

        /// <summary>[Output Only] The ID value of the disk used to create this snapshot. This value may be used to
        /// determine whether the snapshot was taken from the current or a previous instance of a given disk
        /// name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceDiskId")]
        public virtual string SourceDiskId { get; set; } 

        /// <summary>[Output Only] The status of the snapshot. This can be CREATING, DELETING, FAILED, READY, or
        /// UPLOADING.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>[Output Only] A size of the the storage used by the snapshot. As snapshots share storage, this
        /// number is expected to change with snapshot creation/deletion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("storageBytes")]
        public virtual System.Nullable<long> StorageBytes { get; set; } 

        /// <summary>[Output Only] An indicator whether storageBytes is in a stable state or it is being adjusted as a
        /// result of shared storage reallocation. This status can either be UPDATING, meaning the size of the snapshot
        /// is being updated, or UP_TO_DATE, meaning the size of the snapshot is up-to-date.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("storageBytesStatus")]
        public virtual string StorageBytesStatus { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of Snapshot resources.</summary>
    public class SnapshotList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output Only] A list of Snapshot resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Snapshot> Items { get; set; } 

        /// <summary>Type of resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An SslCertificate resource. This resource provides a mechanism to upload an SSL key and certificate to
    /// the load balancer to serve secure connections from the user.</summary>
    public class SslCertificate : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A local certificate file. The certificate must be in PEM format. The certificate chain must be no
        /// greater than 5 certs long. The chain must include at least one intermediate cert.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("certificate")]
        public virtual string Certificate { get; set; } 

        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>[Output Only] Type of the resource. Always compute#sslCertificate for SSL certificates.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of the resource. Provided by the client when the resource is created. The name must be 1-63
        /// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the
        /// regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter,
        /// and all following characters must be a dash, lowercase letter, or digit, except the last character, which
        /// cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>A write-only private key in PEM format. Only insert requests will include this field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("privateKey")]
        public virtual string PrivateKey { get; set; } 

        /// <summary>[Output only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of SslCertificate resources.</summary>
    public class SslCertificateList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Unique identifier for the resource. Defined by the server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A list of SslCertificate resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<SslCertificate> Items { get; set; } 

        /// <summary>Type of resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A Subnetwork resource.</summary>
    public class Subnetwork : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the resource. This
        /// field can be set only at resource creation time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>[Output Only] The gateway address for default routes to reach destination addresses outside this
        /// subnetwork. This field can be set only at resource creation time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gatewayAddress")]
        public virtual string GatewayAddress { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>The range of internal addresses that are owned by this subnetwork. Provide this property when you
        /// create the subnetwork. For example, 10.0.0.0/8 or 192.168.0.0/16. Ranges must be unique and non-overlapping
        /// within a network. Only IPv4 is supported. This field can be set only at resource creation time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ipCidrRange")]
        public virtual string IpCidrRange { get; set; } 

        /// <summary>[Output Only] Type of the resource. Always compute#subnetwork for Subnetwork resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The name of the resource, provided by the client when initially creating the resource. The name
        /// must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long
        /// and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a
        /// lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last
        /// character, which cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The URL of the network to which this subnetwork belongs, provided by the client when initially
        /// creating the subnetwork. Only networks that are in the distributed mode can have subnetworks. This field can
        /// be set only at resource creation time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("network")]
        public virtual string Network { get; set; } 

        /// <summary>Whether the VMs in this subnet can access Google services without assigned external IP addresses.
        /// This field can be both set at resource creation time and updated using setPrivateIpGoogleAccess.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("privateIpGoogleAccess")]
        public virtual System.Nullable<bool> PrivateIpGoogleAccess { get; set; } 

        /// <summary>URL of the region where the Subnetwork resides. This field can be set only at resource creation
        /// time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("region")]
        public virtual string Region { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class SubnetworkAggregatedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output] A map of scoped Subnetwork lists.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IDictionary<string,SubnetworksScopedList> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#subnetworkAggregatedList for aggregated lists of
        /// subnetworks.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of Subnetwork resources.</summary>
    public class SubnetworkList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>The Subnetwork resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Subnetwork> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#subnetworkList for lists of subnetworks.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class SubnetworksExpandIpCidrRangeRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The IP (in CIDR format or netmask) of internal addresses that are legal on this Subnetwork. This
        /// range should be disjoint from other subnetworks within this network. This range can only be larger than
        /// (i.e. a superset of) the range previously defined before the update.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ipCidrRange")]
        public virtual string IpCidrRange { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class SubnetworksScopedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of subnetworks contained in this scope.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subnetworks")]
        public virtual System.Collections.Generic.IList<Subnetwork> Subnetworks { get; set; } 

        /// <summary>An informational warning that appears when the list of addresses is empty.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("warning")]
        public virtual SubnetworksScopedList.WarningData Warning { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        /// <summary>An informational warning that appears when the list of addresses is empty.</summary>
        public class WarningData
        {
            /// <summary>[Output Only] A warning code, if applicable. For example, Compute Engine returns
            /// NO_RESULTS_ON_PAGE if there are no results in the response.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("code")]
            public virtual string Code { get; set; } 

            /// <summary>[Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key":
            /// "scope", "value": "zones/us-east1-d" }</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("data")]
            public virtual System.Collections.Generic.IList<WarningData.DataData> Data { get; set; } 

            /// <summary>[Output Only] A human-readable description of the warning code.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("message")]
            public virtual string Message { get; set; } 

            

            public class DataData
            {
                /// <summary>[Output Only] A key that provides more detail on the warning being returned. For example,
                /// for warnings where there are no results in a list request for a particular zone, this key might be
                /// scope and the key value might be the zone name. Other examples might be a key indicating a
                /// deprecated resource and a suggested replacement, or a warning about invalid network settings (for
                /// example, if an instance attempts to perform IP forwarding but is not enabled for IP
                /// forwarding).</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("key")]
                public virtual string Key { get; set; } 

                /// <summary>[Output Only] A warning data value corresponding to the key.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("value")]
                public virtual string Value { get; set; } 

            }
        }
    }    

    public class SubnetworksSetPrivateIpGoogleAccessRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("privateIpGoogleAccess")]
        public virtual System.Nullable<bool> PrivateIpGoogleAccess { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class TCPHealthCheck : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The TCP port number for the health check request. The default value is 80. Valid values are 1
        /// through 65535.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("port")]
        public virtual System.Nullable<int> Port { get; set; } 

        /// <summary>Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port
        /// takes precedence.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("portName")]
        public virtual string PortName { get; set; } 

        /// <summary>Specifies the type of proxy header to append before sending data to the backend, either NONE or
        /// PROXY_V1. The default is NONE.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("proxyHeader")]
        public virtual string ProxyHeader { get; set; } 

        /// <summary>The application data to send once the TCP connection has been established (default value is empty).
        /// If both request and response are empty, the connection establishment alone will indicate health. The request
        /// data can only be ASCII.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("request")]
        public virtual string Request { get; set; } 

        /// <summary>The bytes to match against the beginning of the response data. If left empty (the default value),
        /// any response will indicate health. The response data can only be ASCII.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("response")]
        public virtual string Response { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A set of instance tags.</summary>
    public class Tags : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents
        /// and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after
        /// every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order
        /// to update or change metadata.
        ///
        /// To see the latest fingerprint, make get() request to the instance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fingerprint")]
        public virtual string Fingerprint { get; set; } 

        /// <summary>An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<string> Items { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A TargetHttpProxy resource. This resource defines an HTTP proxy.</summary>
    public class TargetHttpProxy : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#targetHttpProxy for target HTTP proxies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of the resource. Provided by the client when the resource is created. The name must be 1-63
        /// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the
        /// regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter,
        /// and all following characters must be a dash, lowercase letter, or digit, except the last character, which
        /// cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>URL to the UrlMap resource that defines the mapping from URL to the BackendService.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("urlMap")]
        public virtual string UrlMap { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A list of TargetHttpProxy resources.</summary>
    public class TargetHttpProxyList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A list of TargetHttpProxy resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<TargetHttpProxy> Items { get; set; } 

        /// <summary>Type of resource. Always compute#targetHttpProxyList for lists of target HTTP proxies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class TargetHttpsProxiesSetSslCertificatesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>New set of SslCertificate resources to associate with this TargetHttpsProxy resource. Currently
        /// exactly one SslCertificate resource must be specified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslCertificates")]
        public virtual System.Collections.Generic.IList<string> SslCertificates { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A TargetHttpsProxy resource. This resource defines an HTTPS proxy.</summary>
    public class TargetHttpsProxy : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#targetHttpsProxy for target HTTPS proxies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of the resource. Provided by the client when the resource is created. The name must be 1-63
        /// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the
        /// regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter,
        /// and all following characters must be a dash, lowercase letter, or digit, except the last character, which
        /// cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>URLs to SslCertificate resources that are used to authenticate connections between users and the
        /// load balancer. Currently, exactly one SSL certificate must be specified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslCertificates")]
        public virtual System.Collections.Generic.IList<string> SslCertificates { get; set; } 

        /// <summary>A fully-qualified or valid partial URL to the UrlMap resource that defines the mapping from URL to
        /// the BackendService. For example, the following are all valid URLs for specifying a URL map: -
        /// https://www.googleapis.compute/v1/projects/project/global/urlMaps/url-map - projects/project/global/urlMaps
        /// /url-map - global/urlMaps/url-map</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("urlMap")]
        public virtual string UrlMap { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of TargetHttpsProxy resources.</summary>
    public class TargetHttpsProxyList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A list of TargetHttpsProxy resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<TargetHttpsProxy> Items { get; set; } 

        /// <summary>Type of resource. Always compute#targetHttpsProxyList for lists of target HTTPS proxies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A TargetInstance resource. This resource defines an endpoint instance that terminates traffic of
    /// certain protocols.</summary>
    public class TargetInstance : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>A URL to the virtual machine instance that handles traffic for this target instance. When creating
        /// a target instance, you can provide the fully-qualified URL or a valid partial URL to the desired virtual
        /// machine. For example, the following are all valid URLs: -
        /// https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance -
        /// projects/project/zones/zone/instances/instance - zones/zone/instances/instance</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instance")]
        public virtual string Instance { get; set; } 

        /// <summary>[Output Only] The type of the resource. Always compute#targetInstance for target
        /// instances.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of the resource. Provided by the client when the resource is created. The name must be 1-63
        /// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the
        /// regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter,
        /// and all following characters must be a dash, lowercase letter, or digit, except the last character, which
        /// cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>NAT option controlling how IPs are NAT'ed to the instance. Currently only NO_NAT (default value) is
        /// supported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("natPolicy")]
        public virtual string NatPolicy { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>[Output Only] URL of the zone where the target instance resides.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("zone")]
        public virtual string Zone { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class TargetInstanceAggregatedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Unique identifier for the resource; defined by the server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A map of scoped target instance lists.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IDictionary<string,TargetInstancesScopedList> Items { get; set; } 

        /// <summary>Type of resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of TargetInstance resources.</summary>
    public class TargetInstanceList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A list of TargetInstance resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<TargetInstance> Items { get; set; } 

        /// <summary>Type of resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class TargetInstancesScopedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of target instances contained in this scope.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetInstances")]
        public virtual System.Collections.Generic.IList<TargetInstance> TargetInstances { get; set; } 

        /// <summary>Informational warning which replaces the list of addresses when the list is empty.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("warning")]
        public virtual TargetInstancesScopedList.WarningData Warning { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        /// <summary>Informational warning which replaces the list of addresses when the list is empty.</summary>
        public class WarningData
        {
            /// <summary>[Output Only] A warning code, if applicable. For example, Compute Engine returns
            /// NO_RESULTS_ON_PAGE if there are no results in the response.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("code")]
            public virtual string Code { get; set; } 

            /// <summary>[Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key":
            /// "scope", "value": "zones/us-east1-d" }</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("data")]
            public virtual System.Collections.Generic.IList<WarningData.DataData> Data { get; set; } 

            /// <summary>[Output Only] A human-readable description of the warning code.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("message")]
            public virtual string Message { get; set; } 

            

            public class DataData
            {
                /// <summary>[Output Only] A key that provides more detail on the warning being returned. For example,
                /// for warnings where there are no results in a list request for a particular zone, this key might be
                /// scope and the key value might be the zone name. Other examples might be a key indicating a
                /// deprecated resource and a suggested replacement, or a warning about invalid network settings (for
                /// example, if an instance attempts to perform IP forwarding but is not enabled for IP
                /// forwarding).</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("key")]
                public virtual string Key { get; set; } 

                /// <summary>[Output Only] A warning data value corresponding to the key.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("value")]
                public virtual string Value { get; set; } 

            }
        }
    }    

    /// <summary>A TargetPool resource. This resource defines a pool of instances, an associated HttpHealthCheck
    /// resource, and the fallback target pool.</summary>
    public class TargetPool : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>This field is applicable only when the containing target pool is serving a forwarding rule as the
        /// primary pool, and its failoverRatio field is properly set to a value between [0, 1].
        ///
        /// backupPool and failoverRatio together define the fallback behavior of the primary target pool: if the ratio
        /// of the healthy instances in the primary pool is at or below failoverRatio, traffic arriving at the load-
        /// balanced IP will be directed to the backup pool.
        ///
        /// In case where failoverRatio and backupPool are not set, or all the instances in the backup pool are
        /// unhealthy, the traffic will be directed back to the primary pool in the "force" mode, where traffic will be
        /// spread to the healthy instances with the best effort, or to all instances when no instance is
        /// healthy.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("backupPool")]
        public virtual string BackupPool { get; set; } 

        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>This field is applicable only when the containing target pool is serving a forwarding rule as the
        /// primary pool (i.e., not as a backup pool to some other target pool). The value of the field must be in [0,
        /// 1].
        ///
        /// If set, backupPool must also be set. They together define the fallback behavior of the primary target pool:
        /// if the ratio of the healthy instances in the primary pool is at or below this number, traffic arriving at
        /// the load-balanced IP will be directed to the backup pool.
        ///
        /// In case where failoverRatio is not set or all the instances in the backup pool are unhealthy, the traffic
        /// will be directed back to the primary pool in the "force" mode, where traffic will be spread to the healthy
        /// instances with the best effort, or to all instances when no instance is healthy.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failoverRatio")]
        public virtual System.Nullable<float> FailoverRatio { get; set; } 

        /// <summary>The URL of the HttpHealthCheck resource. A member instance in this pool is considered healthy if
        /// and only if the health checks pass. An empty list means all member instances will be considered healthy at
        /// all times. Only HttpHealthChecks are supported. Only one health check may be specified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("healthChecks")]
        public virtual System.Collections.Generic.IList<string> HealthChecks { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>A list of resource URLs to the virtual machine instances serving this pool. They must live in zones
        /// contained in the same region as this pool.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instances")]
        public virtual System.Collections.Generic.IList<string> Instances { get; set; } 

        /// <summary>[Output Only] Type of the resource. Always compute#targetPool for target pools.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of the resource. Provided by the client when the resource is created. The name must be 1-63
        /// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the
        /// regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter,
        /// and all following characters must be a dash, lowercase letter, or digit, except the last character, which
        /// cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>[Output Only] URL of the region where the target pool resides.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("region")]
        public virtual string Region { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>Sesssion affinity option, must be one of the following values: NONE: Connections from the same
        /// client IP may go to any instance in the pool. CLIENT_IP: Connections from the same client IP will go to the
        /// same instance in the pool while that instance remains healthy. CLIENT_IP_PROTO: Connections from the same
        /// client IP with the same IP protocol will go to the same instance in the pool while that instance remains
        /// healthy.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sessionAffinity")]
        public virtual string SessionAffinity { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class TargetPoolAggregatedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Unique identifier for the resource. Defined by the server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output Only] A map of scoped target pool lists.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IDictionary<string,TargetPoolsScopedList> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#targetPoolAggregatedList for aggregated lists of
        /// target pools.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class TargetPoolInstanceHealth : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("healthStatus")]
        public virtual System.Collections.Generic.IList<HealthStatus> HealthStatus { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#targetPoolInstanceHealth when checking the health of
        /// an instance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of TargetPool resources.</summary>
    public class TargetPoolList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Unique identifier for the resource. Defined by the server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A list of TargetPool resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<TargetPool> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#targetPoolList for lists of target pools.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class TargetPoolsAddHealthCheckRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The HttpHealthCheck to add to the target pool.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("healthChecks")]
        public virtual System.Collections.Generic.IList<HealthCheckReference> HealthChecks { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class TargetPoolsAddInstanceRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A full or partial URL to an instance to add to this target pool. This can be a full or partial URL.
        /// For example, the following are valid URLs: - https://www.googleapis.com/compute/v1/projects/project-
        /// id/zones/zone/instances/instance-name - projects/project-id/zones/zone/instances/instance-name -
        /// zones/zone/instances/instance-name</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instances")]
        public virtual System.Collections.Generic.IList<InstanceReference> Instances { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class TargetPoolsRemoveHealthCheckRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Health check URL to be removed. This can be a full or valid partial URL. For example, the following
        /// are valid URLs: - https://www.googleapis.com/compute/beta/projects/project/global/httpHealthChecks/health-
        /// check - projects/project/global/httpHealthChecks/health-check - global/httpHealthChecks/health-
        /// check</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("healthChecks")]
        public virtual System.Collections.Generic.IList<HealthCheckReference> HealthChecks { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class TargetPoolsRemoveInstanceRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>URLs of the instances to be removed from target pool.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instances")]
        public virtual System.Collections.Generic.IList<InstanceReference> Instances { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class TargetPoolsScopedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of target pools contained in this scope.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetPools")]
        public virtual System.Collections.Generic.IList<TargetPool> TargetPools { get; set; } 

        /// <summary>Informational warning which replaces the list of addresses when the list is empty.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("warning")]
        public virtual TargetPoolsScopedList.WarningData Warning { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        /// <summary>Informational warning which replaces the list of addresses when the list is empty.</summary>
        public class WarningData
        {
            /// <summary>[Output Only] A warning code, if applicable. For example, Compute Engine returns
            /// NO_RESULTS_ON_PAGE if there are no results in the response.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("code")]
            public virtual string Code { get; set; } 

            /// <summary>[Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key":
            /// "scope", "value": "zones/us-east1-d" }</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("data")]
            public virtual System.Collections.Generic.IList<WarningData.DataData> Data { get; set; } 

            /// <summary>[Output Only] A human-readable description of the warning code.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("message")]
            public virtual string Message { get; set; } 

            

            public class DataData
            {
                /// <summary>[Output Only] A key that provides more detail on the warning being returned. For example,
                /// for warnings where there are no results in a list request for a particular zone, this key might be
                /// scope and the key value might be the zone name. Other examples might be a key indicating a
                /// deprecated resource and a suggested replacement, or a warning about invalid network settings (for
                /// example, if an instance attempts to perform IP forwarding but is not enabled for IP
                /// forwarding).</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("key")]
                public virtual string Key { get; set; } 

                /// <summary>[Output Only] A warning data value corresponding to the key.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("value")]
                public virtual string Value { get; set; } 

            }
        }
    }    

    public class TargetReference : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("target")]
        public virtual string Target { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class TargetSslProxiesSetBackendServiceRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The URL of the new BackendService resource for the targetSslProxy.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("service")]
        public virtual string Service { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class TargetSslProxiesSetProxyHeaderRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The new type of proxy header to append before sending data to the backend. NONE or PROXY_V1 are
        /// allowed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("proxyHeader")]
        public virtual string ProxyHeader { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class TargetSslProxiesSetSslCertificatesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>New set of URLs to SslCertificate resources to associate with this TargetSslProxy. Currently
        /// exactly one ssl certificate must be specified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslCertificates")]
        public virtual System.Collections.Generic.IList<string> SslCertificates { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A TargetSslProxy resource. This resource defines an SSL proxy.</summary>
    public class TargetSslProxy : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>[Output Only] Type of the resource. Always compute#targetSslProxy for target SSL proxies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of the resource. Provided by the client when the resource is created. The name must be 1-63
        /// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the
        /// regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter,
        /// and all following characters must be a dash, lowercase letter, or digit, except the last character, which
        /// cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Specifies the type of proxy header to append before sending data to the backend, either NONE or
        /// PROXY_V1. The default is NONE.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("proxyHeader")]
        public virtual string ProxyHeader { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>URL to the BackendService resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("service")]
        public virtual string Service { get; set; } 

        /// <summary>URLs to SslCertificate resources that are used to authenticate connections to Backends. Currently
        /// exactly one SSL certificate must be specified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslCertificates")]
        public virtual System.Collections.Generic.IList<string> SslCertificates { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of TargetSslProxy resources.</summary>
    public class TargetSslProxyList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A list of TargetSslProxy resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<TargetSslProxy> Items { get; set; } 

        /// <summary>Type of resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class TargetTcpProxiesSetBackendServiceRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The URL of the new BackendService resource for the targetTcpProxy.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("service")]
        public virtual string Service { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class TargetTcpProxiesSetProxyHeaderRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The new type of proxy header to append before sending data to the backend. NONE or PROXY_V1 are
        /// allowed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("proxyHeader")]
        public virtual string ProxyHeader { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A TargetTcpProxy resource. This resource defines a TCP proxy.</summary>
    public class TargetTcpProxy : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>[Output Only] Type of the resource. Always compute#targetTcpProxy for target TCP proxies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of the resource. Provided by the client when the resource is created. The name must be 1-63
        /// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the
        /// regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter,
        /// and all following characters must be a dash, lowercase letter, or digit, except the last character, which
        /// cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Specifies the type of proxy header to append before sending data to the backend, either NONE or
        /// PROXY_V1. The default is NONE.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("proxyHeader")]
        public virtual string ProxyHeader { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>URL to the BackendService resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("service")]
        public virtual string Service { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of TargetTcpProxy resources.</summary>
    public class TargetTcpProxyList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A list of TargetTcpProxy resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<TargetTcpProxy> Items { get; set; } 

        /// <summary>Type of resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a Target VPN gateway resource.</summary>
    public class TargetVpnGateway : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>[Output Only] A list of URLs to the ForwardingRule resources. ForwardingRules are created using
        /// compute.forwardingRules.insert and associated to a VPN gateway.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("forwardingRules")]
        public virtual System.Collections.Generic.IList<string> ForwardingRules { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#targetVpnGateway for target VPN gateways.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of the resource. Provided by the client when the resource is created. The name must be 1-63
        /// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the
        /// regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter,
        /// and all following characters must be a dash, lowercase letter, or digit, except the last character, which
        /// cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>URL of the network to which this VPN gateway is attached. Provided by the client when the VPN
        /// gateway is created.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("network")]
        public virtual string Network { get; set; } 

        /// <summary>[Output Only] URL of the region where the target VPN gateway resides.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("region")]
        public virtual string Region { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>[Output Only] The status of the VPN gateway.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>[Output Only] A list of URLs to VpnTunnel resources. VpnTunnels are created using
        /// compute.vpntunnels.insert method and associated to a VPN gateway.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tunnels")]
        public virtual System.Collections.Generic.IList<string> Tunnels { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class TargetVpnGatewayAggregatedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A map of scoped target vpn gateway lists.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IDictionary<string,TargetVpnGatewaysScopedList> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#targetVpnGateway for target VPN gateways.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of TargetVpnGateway resources.</summary>
    public class TargetVpnGatewayList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output Only] A list of TargetVpnGateway resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<TargetVpnGateway> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#targetVpnGateway for target VPN gateways.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class TargetVpnGatewaysScopedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] List of target vpn gateways contained in this scope.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetVpnGateways")]
        public virtual System.Collections.Generic.IList<TargetVpnGateway> TargetVpnGateways { get; set; } 

        /// <summary>[Output Only] Informational warning which replaces the list of addresses when the list is
        /// empty.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("warning")]
        public virtual TargetVpnGatewaysScopedList.WarningData Warning { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        /// <summary>[Output Only] Informational warning which replaces the list of addresses when the list is
        /// empty.</summary>
        public class WarningData
        {
            /// <summary>[Output Only] A warning code, if applicable. For example, Compute Engine returns
            /// NO_RESULTS_ON_PAGE if there are no results in the response.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("code")]
            public virtual string Code { get; set; } 

            /// <summary>[Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key":
            /// "scope", "value": "zones/us-east1-d" }</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("data")]
            public virtual System.Collections.Generic.IList<WarningData.DataData> Data { get; set; } 

            /// <summary>[Output Only] A human-readable description of the warning code.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("message")]
            public virtual string Message { get; set; } 

            

            public class DataData
            {
                /// <summary>[Output Only] A key that provides more detail on the warning being returned. For example,
                /// for warnings where there are no results in a list request for a particular zone, this key might be
                /// scope and the key value might be the zone name. Other examples might be a key indicating a
                /// deprecated resource and a suggested replacement, or a warning about invalid network settings (for
                /// example, if an instance attempts to perform IP forwarding but is not enabled for IP
                /// forwarding).</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("key")]
                public virtual string Key { get; set; } 

                /// <summary>[Output Only] A warning data value corresponding to the key.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("value")]
                public virtual string Value { get; set; } 

            }
        }
    }    

    public class TestFailure : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("actualService")]
        public virtual string ActualService { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("expectedService")]
        public virtual string ExpectedService { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("host")]
        public virtual string Host { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("path")]
        public virtual string Path { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A UrlMap resource. This resource defines the mapping from URL to the BackendService resource, based on
    /// the "longest-match" of the URL's host and path.</summary>
    public class UrlMap : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>The URL of the BackendService resource if none of the hostRules match.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultService")]
        public virtual string DefaultService { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Fingerprint of this resource. A hash of the contents stored in this object. This field is used in
        /// optimistic locking. This field will be ignored when inserting a UrlMap. An up-to-date fingerprint must be
        /// provided in order to update the UrlMap.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fingerprint")]
        public virtual string Fingerprint { get; set; } 

        /// <summary>The list of HostRules to use against the URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hostRules")]
        public virtual System.Collections.Generic.IList<HostRule> HostRules { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>[Output Only] Type of the resource. Always compute#urlMaps for url maps.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Name of the resource. Provided by the client when the resource is created. The name must be 1-63
        /// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the
        /// regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter,
        /// and all following characters must be a dash, lowercase letter, or digit, except the last character, which
        /// cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The list of named PathMatchers to use against the URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pathMatchers")]
        public virtual System.Collections.Generic.IList<PathMatcher> PathMatchers { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The list of expected URL mappings. Request to update this UrlMap will succeed only if all of the
        /// test cases pass.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tests")]
        public virtual System.Collections.Generic.IList<UrlMapTest> Tests { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of UrlMap resources.</summary>
    public class UrlMapList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Unique identifier for the resource. Set by the server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>A list of UrlMap resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<UrlMap> Items { get; set; } 

        /// <summary>Type of resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class UrlMapReference : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("urlMap")]
        public virtual string UrlMap { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Message for the expected URL mappings.</summary>
    public class UrlMapTest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Description of this test case.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Host portion of the URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("host")]
        public virtual string Host { get; set; } 

        /// <summary>Path portion of the URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("path")]
        public virtual string Path { get; set; } 

        /// <summary>Expected BackendService resource the given URL should be mapped to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("service")]
        public virtual string Service { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Message representing the validation result for a UrlMap.</summary>
    public class UrlMapValidationResult : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("loadErrors")]
        public virtual System.Collections.Generic.IList<string> LoadErrors { get; set; } 

        /// <summary>Whether the given UrlMap can be successfully loaded. If false, 'loadErrors' indicates the
        /// reasons.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("loadSucceeded")]
        public virtual System.Nullable<bool> LoadSucceeded { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("testFailures")]
        public virtual System.Collections.Generic.IList<TestFailure> TestFailures { get; set; } 

        /// <summary>If successfully loaded, this field indicates whether the test passed. If false, 'testFailures's
        /// indicate the reason of failure.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("testPassed")]
        public virtual System.Nullable<bool> TestPassed { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class UrlMapsValidateRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Content of the UrlMap to be validated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resource")]
        public virtual UrlMap Resource { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class UrlMapsValidateResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("result")]
        public virtual UrlMapValidationResult Result { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The location in Cloud Storage and naming method of the daily usage report. Contains bucket_name and
    /// report_name prefix.</summary>
    public class UsageExportLocation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of an existing bucket in Cloud Storage where the usage report object is stored. The Google
        /// Service Account is granted write access to this bucket. This can either be the bucket name by itself, such
        /// as example-bucket, or the bucket name with gs:// or https://storage.googleapis.com/ in front of it, such as
        /// gs://example-bucket.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bucketName")]
        public virtual string BucketName { get; set; } 

        /// <summary>An optional prefix for the name of the usage report object stored in bucketName. If not supplied,
        /// defaults to usage. The report is stored as a CSV file named report_name_prefix_gce_YYYYMMDD.csv where
        /// YYYYMMDD is the day of the usage according to Pacific Time. If you supply a prefix, it should conform to
        /// Cloud Storage object naming conventions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reportNamePrefix")]
        public virtual string ReportNamePrefix { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class VpnTunnel : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>An optional description of this resource. Provide this property when you create the
        /// resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>[Output Only] Detailed status message for the VPN tunnel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("detailedStatus")]
        public virtual string DetailedStatus { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>IKE protocol version to use when establishing the VPN tunnel with peer VPN gateway. Acceptable IKE
        /// versions are 1 or 2. Default version is 2.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ikeVersion")]
        public virtual System.Nullable<int> IkeVersion { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>Local traffic selector to use when establishing the VPN tunnel with peer VPN gateway. The value
        /// should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is
        /// supported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("localTrafficSelector")]
        public virtual System.Collections.Generic.IList<string> LocalTrafficSelector { get; set; } 

        /// <summary>Name of the resource. Provided by the client when the resource is created. The name must be 1-63
        /// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the
        /// regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter,
        /// and all following characters must be a dash, lowercase letter, or digit, except the last character, which
        /// cannot be a dash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>IP address of the peer VPN gateway. Only IPv4 is supported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("peerIp")]
        public virtual string PeerIp { get; set; } 

        /// <summary>[Output Only] URL of the region where the VPN tunnel resides.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("region")]
        public virtual string Region { get; set; } 

        /// <summary>Remote traffic selectors to use when establishing the VPN tunnel with peer VPN gateway. The value
        /// should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is
        /// supported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("remoteTrafficSelector")]
        public virtual System.Collections.Generic.IList<string> RemoteTrafficSelector { get; set; } 

        /// <summary>URL of router resource to be used for dynamic routing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("router")]
        public virtual string Router { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>Shared secret used to set the secure session between the Cloud VPN gateway and the peer VPN
        /// gateway.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sharedSecret")]
        public virtual string SharedSecret { get; set; } 

        /// <summary>Hash of the shared secret.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sharedSecretHash")]
        public virtual string SharedSecretHash { get; set; } 

        /// <summary>[Output Only] The status of the VPN tunnel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>URL of the VPN gateway with which this VPN tunnel is associated. Provided by the client when the
        /// VPN tunnel is created.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetVpnGateway")]
        public virtual string TargetVpnGateway { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class VpnTunnelAggregatedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output Only] A map of scoped vpn tunnel lists.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IDictionary<string,VpnTunnelsScopedList> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of VpnTunnel resources.</summary>
    public class VpnTunnelList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output Only] A list of VpnTunnel resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<VpnTunnel> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class VpnTunnelsScopedList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of vpn tunnels contained in this scope.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("vpnTunnels")]
        public virtual System.Collections.Generic.IList<VpnTunnel> VpnTunnels { get; set; } 

        /// <summary>Informational warning which replaces the list of addresses when the list is empty.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("warning")]
        public virtual VpnTunnelsScopedList.WarningData Warning { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        /// <summary>Informational warning which replaces the list of addresses when the list is empty.</summary>
        public class WarningData
        {
            /// <summary>[Output Only] A warning code, if applicable. For example, Compute Engine returns
            /// NO_RESULTS_ON_PAGE if there are no results in the response.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("code")]
            public virtual string Code { get; set; } 

            /// <summary>[Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key":
            /// "scope", "value": "zones/us-east1-d" }</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("data")]
            public virtual System.Collections.Generic.IList<WarningData.DataData> Data { get; set; } 

            /// <summary>[Output Only] A human-readable description of the warning code.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("message")]
            public virtual string Message { get; set; } 

            

            public class DataData
            {
                /// <summary>[Output Only] A key that provides more detail on the warning being returned. For example,
                /// for warnings where there are no results in a list request for a particular zone, this key might be
                /// scope and the key value might be the zone name. Other examples might be a key indicating a
                /// deprecated resource and a suggested replacement, or a warning about invalid network settings (for
                /// example, if an instance attempts to perform IP forwarding but is not enabled for IP
                /// forwarding).</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("key")]
                public virtual string Key { get; set; } 

                /// <summary>[Output Only] A warning data value corresponding to the key.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("value")]
                public virtual string Value { get; set; } 

            }
        }
    }    

    public class XpnHostList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output Only] A list of XPN host project URLs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Project> Items { get; set; } 

        /// <summary>[Output Only] Type of resource. Always compute#xpnHostList for lists of XPN hosts.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>XpnResourceId</summary>
    public class XpnResourceId : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ID of the XPN resource. In the case of projects, this field matches the project's name, not the
        /// canonical ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>The type of the XPN resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A Zone resource.</summary>
    public class Zone : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Creation timestamp in RFC3339 text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTimestamp")]
        public virtual string CreationTimestamp { get; set; } 

        /// <summary>[Output Only] The deprecation status associated with this zone.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deprecated")]
        public virtual DeprecationStatus Deprecated { get; set; } 

        /// <summary>[Output Only] Textual description of the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>[Output Only] The unique identifier for the resource. This identifier is defined by the
        /// server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<ulong> Id { get; set; } 

        /// <summary>[Output Only] Type of the resource. Always compute#zone for zones.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] Name of the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>[Output Only] Full URL reference to the region which hosts the zone.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("region")]
        public virtual string Region { get; set; } 

        /// <summary>[Output Only] Server-defined URL for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>[Output Only] Status of the zone, either UP or DOWN.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contains a list of zone resources.</summary>
    public class ZoneList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>[Output Only] Unique identifier for the resource; defined by the server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>[Output Only] A list of Zone resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Zone> Items { get; set; } 

        /// <summary>Type of resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>[Output Only] This token allows you to get the next page of results for list requests. If the
        /// number of results is larger than maxResults, use the nextPageToken as a value for the query parameter
        /// pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue
        /// paging through the results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>[Output Only] Server-defined URL for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ZoneSetLabelsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The fingerprint of the previous set of labels for this resource, used to detect conflicts. The
        /// fingerprint is initially generated by Compute Engine and changes after every request to modify or update
        /// labels. You must always provide an up-to-date fingerprint hash in order to update or change labels. Make a
        /// get() request to the resource to get the latest fingerprint.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labelFingerprint")]
        public virtual string LabelFingerprint { get; set; } 

        /// <summary>The labels to set for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IDictionary<string,string> Labels { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}
